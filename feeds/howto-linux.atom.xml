<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Andrea Grandi - HowTo, Linux</title><link href="https://www.andreagrandi.it/" rel="alternate"></link><link href="https://www.andreagrandi.it/feeds/howto-linux.atom.xml" rel="self"></link><id>https://www.andreagrandi.it/</id><updated>2015-02-20T21:15:00+00:00</updated><entry><title>Moving away from Google Talk to a real Jabber/XMPP service</title><link href="https://www.andreagrandi.it/2015/02/20/moving-away-from-google-talk-to-a-real-jabberxmpp-service/" rel="alternate"></link><published>2015-02-20T21:15:00+00:00</published><updated>2015-02-20T21:15:00+00:00</updated><author><name>admin</name></author><id>tag:www.andreagrandi.it,2015-02-20:/2015/02/20/moving-away-from-google-talk-to-a-real-jabberxmpp-service/</id><summary type="html">&lt;p&gt;I've been recently concerned about &lt;a href="https://plus.google.com/+MayurKamat/posts/ETBvtp9VYav"&gt;the
future&lt;/a&gt; of
&lt;strong&gt;Google Talk&lt;/strong&gt; service and all the implications related to recent
changes to the existing service. What has been a nice implementation of
the &lt;a href="http://en.wikipedia.org/wiki/XMPP"&gt;Jabber/XMPP&lt;/a&gt; protocol once, now
is just a &lt;a href="https://www.eff.org/deeplinks/2013/05/google-abandons-open-standards-instant-messaging"&gt;closed and
proprietary&lt;/a&gt;
service. The main problem with these changes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jabber/XMPP users of other services won't be able to talk anymore to
    Google Talk users&lt;/li&gt;
&lt;li&gt;Google is killing some of their native clients (like the Windows
    one) and forcing users to Chrome or Android/iOS versions&lt;/li&gt;
&lt;li&gt;Google has disabled the possibility to turn off chat recording (you
    can still do it individually, for each contact)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, what are the alternatives to Google Talk? Luckly you have at least
three options.&lt;/p&gt;
&lt;h2&gt;Using an existing Jabber/XMPP service&lt;/h2&gt;
&lt;p&gt;This is surely the easiest way to get a Jabber/XMPP account. There is a
list of free services available
here: &lt;a href="https://xmpp.net/directory.php"&gt;https://xmpp.net/directory.php&lt;/a&gt; registering a new account is
usually very easy. Most of the clients have an option that let you
register the account while you are configuring it. For example if you
are using &lt;a href="https://www.pidgin.im"&gt;&lt;strong&gt;Pidgin&lt;/strong&gt;&lt;/a&gt; and you want to register
an account with
&lt;a href="https://duck.co/blog/using-pidgin-with-xmpp-jabber"&gt;DukGo&lt;/a&gt; service, you
can configure it in this way:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.andreagrandi.it/wp-content/uploads/2015/02/2_addaccount.png"&gt;&lt;img alt="2_addaccount" src="http://www.andreagrandi.it/wp-content/uploads/2015/02/2_addaccount.png"&gt;{.aligncenter
.size-full .wp-image-928 width="348"
height="531"}&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Using an hosted Jabber/XMPP service with your domain&lt;/h2&gt;
&lt;p&gt;A service called &lt;a href="http://hosted.im"&gt;&lt;strong&gt;HostedIM&lt;/strong&gt;&lt;/a&gt; offer a very nice
service. Basically if you already have a domain, you can register an
account on &lt;a href="http://hosted.im"&gt;hosted.im&lt;/a&gt;, setup your &lt;strong&gt;DNS&lt;/strong&gt; following
their instructions and create an account directly on their dashboard.
You can create up to &lt;strong&gt;5 accounts for free&lt;/strong&gt;. If you need more, they
offer a paid service for that. In my case all I had to do was updating
my DNS with the following configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;_xmpp-client._tcp.andreagrandi.it. IN SRV 10 0 5222 xmpp1.hosted.im.
_xmpp-client._tcp.andreagrandi.it. IN SRV 20 0 5222 xmpp2.hosted.im.
_xmpp-server._tcp.andreagrandi.it. IN SRV 20 0 5269 xmpp2.hosted.im.
_xmpp-server._tcp.andreagrandi.it. IN SRV 10 0 5269 xmpp1.hosted.im.
_jabber._tcp.andreagrandi.it. IN SRV 20 0 5269 xmpp2.hosted.im.
_jabber._tcp.andreagrandi.it. IN SRV 10 0 5269 xmpp1.hosted.im.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Hosting your own Jabber/XMPP service&lt;/h2&gt;
&lt;p&gt;If you have a VPS and some syasdmin skills, why not hosting your own
XMPP server? There are different options available, but I can suggest
you three in particular:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.igniterealtime.org/projects/openfire/"&gt;OpenFire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ejabberd.im/"&gt;ejabberd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://prosody.im/"&gt;Prosody&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I haven't tried any of these personally, because for the moment I'm
using the service offered by hosted.im. I'm curious anyway to configure
at least one of them and when I will do it I will publish a dedicated
tutorial about it.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Given the recent changes that Google is doing to all their services, I'm
more than happy when I can abandon one of them, because I personally
don't like to rely (and bind myself) to a single company, expecially if
that company closes a service whenever they want and try to lock you
inside their ecosystem.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been recently concerned about &lt;a href="https://plus.google.com/+MayurKamat/posts/ETBvtp9VYav"&gt;the
future&lt;/a&gt; of
&lt;strong&gt;Google Talk&lt;/strong&gt; service and all the implications related to recent
changes to the existing service. What has been a nice implementation of
the &lt;a href="http://en.wikipedia.org/wiki/XMPP"&gt;Jabber/XMPP&lt;/a&gt; protocol once, now
is just a &lt;a href="https://www.eff.org/deeplinks/2013/05/google-abandons-open-standards-instant-messaging"&gt;closed and
proprietary&lt;/a&gt;
service. The main problem with these changes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jabber/XMPP users of other services won't be able to talk anymore to
    Google Talk users&lt;/li&gt;
&lt;li&gt;Google is killing some of their native clients (like the Windows
    one) and forcing users to Chrome or Android/iOS versions&lt;/li&gt;
&lt;li&gt;Google has disabled the possibility to turn off chat recording (you
    can still do it individually, for each contact)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, what are the alternatives to Google Talk? Luckly you have at least
three options.&lt;/p&gt;
&lt;h2&gt;Using an existing Jabber/XMPP service&lt;/h2&gt;
&lt;p&gt;This is surely the easiest way to get a Jabber/XMPP account. There is a
list of free services available
here: &lt;a href="https://xmpp.net/directory.php"&gt;https://xmpp.net/directory.php&lt;/a&gt; registering a new account is
usually very easy. Most of the clients have an option that let you
register the account while you are configuring it. For example if you
are using &lt;a href="https://www.pidgin.im"&gt;&lt;strong&gt;Pidgin&lt;/strong&gt;&lt;/a&gt; and you want to register
an account with
&lt;a href="https://duck.co/blog/using-pidgin-with-xmpp-jabber"&gt;DukGo&lt;/a&gt; service, you
can configure it in this way:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.andreagrandi.it/wp-content/uploads/2015/02/2_addaccount.png"&gt;&lt;img alt="2_addaccount" src="http://www.andreagrandi.it/wp-content/uploads/2015/02/2_addaccount.png"&gt;{.aligncenter
.size-full .wp-image-928 width="348"
height="531"}&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Using an hosted Jabber/XMPP service with your domain&lt;/h2&gt;
&lt;p&gt;A service called &lt;a href="http://hosted.im"&gt;&lt;strong&gt;HostedIM&lt;/strong&gt;&lt;/a&gt; offer a very nice
service. Basically if you already have a domain, you can register an
account on &lt;a href="http://hosted.im"&gt;hosted.im&lt;/a&gt;, setup your &lt;strong&gt;DNS&lt;/strong&gt; following
their instructions and create an account directly on their dashboard.
You can create up to &lt;strong&gt;5 accounts for free&lt;/strong&gt;. If you need more, they
offer a paid service for that. In my case all I had to do was updating
my DNS with the following configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;_xmpp-client._tcp.andreagrandi.it. IN SRV 10 0 5222 xmpp1.hosted.im.
_xmpp-client._tcp.andreagrandi.it. IN SRV 20 0 5222 xmpp2.hosted.im.
_xmpp-server._tcp.andreagrandi.it. IN SRV 20 0 5269 xmpp2.hosted.im.
_xmpp-server._tcp.andreagrandi.it. IN SRV 10 0 5269 xmpp1.hosted.im.
_jabber._tcp.andreagrandi.it. IN SRV 20 0 5269 xmpp2.hosted.im.
_jabber._tcp.andreagrandi.it. IN SRV 10 0 5269 xmpp1.hosted.im.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Hosting your own Jabber/XMPP service&lt;/h2&gt;
&lt;p&gt;If you have a VPS and some syasdmin skills, why not hosting your own
XMPP server? There are different options available, but I can suggest
you three in particular:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.igniterealtime.org/projects/openfire/"&gt;OpenFire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ejabberd.im/"&gt;ejabberd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://prosody.im/"&gt;Prosody&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I haven't tried any of these personally, because for the moment I'm
using the service offered by hosted.im. I'm curious anyway to configure
at least one of them and when I will do it I will publish a dedicated
tutorial about it.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Given the recent changes that Google is doing to all their services, I'm
more than happy when I can abandon one of them, because I personally
don't like to rely (and bind myself) to a single company, expecially if
that company closes a service whenever they want and try to lock you
inside their ecosystem.&lt;/p&gt;</content><category term="chat"></category><category term="Google"></category><category term="gtalk"></category><category term="im"></category><category term="jabber"></category><category term="xmpp"></category></entry><entry><title>Automatically pull updated Docker images and restart containers with docker-puller</title><link href="https://www.andreagrandi.it/2014/10/25/automatically-pull-updated-docker-images-and-restart-containers-with-docker-puller/" rel="alternate"></link><published>2014-10-25T10:56:00+01:00</published><updated>2014-10-25T10:56:00+01:00</updated><author><name>admin</name></author><id>tag:www.andreagrandi.it,2014-10-25:/2014/10/25/automatically-pull-updated-docker-images-and-restart-containers-with-docker-puller/</id><summary type="html">&lt;p&gt;If you use &lt;a href="http://docker.io"&gt;docker.io&lt;/a&gt; (or any similar service) to
build your &lt;strong&gt;Docker&lt;/strong&gt; containers, it may be possible that, once the new
image is generated, you want your Docker host to automatically pull it
and restart the container.&lt;/p&gt;
&lt;p&gt;Docker.io gives you the possibility to set a &lt;strong&gt;web hook&lt;/strong&gt; after a
successful build. Basically it does a POST on a defined URL and send
some informations in JSON format.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/glowdigitalmedia/docker-puller"&gt;docker-puller&lt;/a&gt;
listens to these web hooks and can be configured to run a particular
script, given a specific hook. It's a very simple service I wrote using
Python/Flask. It's also my first Flask application, so if you want to
improve it, feel free to send me a pull request on GitHub.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this is not the only existing service that is able to do this
task. I took inspiration from this
article &lt;a href="http://nathanleclaire.com/blog/2014/08/17/automagical-deploys-from-docker-hub/"&gt;http://nathanleclaire.com/blog/2014/08/17/automagical-deploys-from-docker-hub/&lt;/a&gt;
and I really tried to
customize &lt;a href="https://github.com/cpuguy83/dockerhub-webhook-listener"&gt;https://github.com/cpuguy83/dockerhub-webhook-listener&lt;/a&gt; for
my own needs, but the problem is that &lt;strong&gt;dockerhub-webhook-listener&lt;/strong&gt; is
not ready to be used as is (you have to customize it) and I'm not very
good with &lt;strong&gt;Golang&lt;/strong&gt; (yet) to be able to do it in little time. This is
why I rewrote the service in Python (that is my daily language). I want
to thank &lt;a href="https://github.com/cpuguy83"&gt;Brian Goff&lt;/a&gt; for the idea and all
the people in &lt;strong&gt;#docker @ FreeNode&lt;/strong&gt; for the support.&lt;/p&gt;
&lt;h2 id="how-to-use-docker-puller" style="color: #333333;"&gt;How to use docker-puller&lt;/h2&gt;
&lt;p&gt;Setting up the service should be quite easy. After you clone the
repository from https://github.com/glowdigitalmedia/docker-puller there
is a &lt;strong&gt;config.json&lt;/strong&gt; file where you define the &lt;strong&gt;host&lt;/strong&gt;, &lt;strong&gt;port&lt;/strong&gt;, a
&lt;strong&gt;token&lt;/strong&gt; and a list of &lt;strong&gt;hooks&lt;/strong&gt; you want to react to. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;host&amp;quot;: &amp;quot;localhost&amp;quot;,
    &amp;quot;port&amp;quot;: 8000,
    &amp;quot;token&amp;quot;: &amp;quot;abc123&amp;quot;,
    &amp;quot;hooks&amp;quot;: {
        &amp;quot;hello&amp;quot;: &amp;quot;scripts/hello.sh&amp;quot;
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a &lt;strong&gt;bash script&lt;/strong&gt; (in this case it was called hello.sh) and put
it under script folder and write the instructions to be executed to pull
the new image and restart the container (example):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull andreagrandi/test:latest
docker stop test
docker rm test
docker run --name test -d -p 8000:80 andreagrandi/test:latest
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once configured, I suggest you to setup a &lt;strong&gt;Nginx&lt;/strong&gt; entry (instructions
not covered here) that for example redirect
&lt;strong&gt;yourhost.com/dockerpuller&lt;/strong&gt; to &lt;strong&gt;localhost:8000&lt;/strong&gt; (I would advise to
enable SSL too, or people could be able to sniff your token). The
service can be started with: "&lt;strong&gt;python app.py&lt;/strong&gt;" (or you can setup a
Supervisor script).&lt;/p&gt;
&lt;p&gt;At this point docker-puller is up and running. Go to &lt;strong&gt;docker.io&lt;/strong&gt;
automatic build settings and setup a webhook like this:
&lt;strong&gt;http://yourhost.com/dockerpuller?token=abc123&amp;amp;hook=hello&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Every time docker.io finishes building and pushing your image to the
docker registry, it will &lt;strong&gt;POST&lt;/strong&gt; on that URL. docker-puller will catch
the POST, check for a valid token, get the hook name and will execute
the relative script.&lt;/p&gt;
&lt;p&gt;That's all! I hope this very simple service can be useful to other
people and once again, if you want to improve it, I will be glad to
accept your pull requests on GitHub.&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you use &lt;a href="http://docker.io"&gt;docker.io&lt;/a&gt; (or any similar service) to
build your &lt;strong&gt;Docker&lt;/strong&gt; containers, it may be possible that, once the new
image is generated, you want your Docker host to automatically pull it
and restart the container.&lt;/p&gt;
&lt;p&gt;Docker.io gives you the possibility to set a &lt;strong&gt;web hook&lt;/strong&gt; after a
successful build. Basically it does a POST on a defined URL and send
some informations in JSON format.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/glowdigitalmedia/docker-puller"&gt;docker-puller&lt;/a&gt;
listens to these web hooks and can be configured to run a particular
script, given a specific hook. It's a very simple service I wrote using
Python/Flask. It's also my first Flask application, so if you want to
improve it, feel free to send me a pull request on GitHub.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this is not the only existing service that is able to do this
task. I took inspiration from this
article &lt;a href="http://nathanleclaire.com/blog/2014/08/17/automagical-deploys-from-docker-hub/"&gt;http://nathanleclaire.com/blog/2014/08/17/automagical-deploys-from-docker-hub/&lt;/a&gt;
and I really tried to
customize &lt;a href="https://github.com/cpuguy83/dockerhub-webhook-listener"&gt;https://github.com/cpuguy83/dockerhub-webhook-listener&lt;/a&gt; for
my own needs, but the problem is that &lt;strong&gt;dockerhub-webhook-listener&lt;/strong&gt; is
not ready to be used as is (you have to customize it) and I'm not very
good with &lt;strong&gt;Golang&lt;/strong&gt; (yet) to be able to do it in little time. This is
why I rewrote the service in Python (that is my daily language). I want
to thank &lt;a href="https://github.com/cpuguy83"&gt;Brian Goff&lt;/a&gt; for the idea and all
the people in &lt;strong&gt;#docker @ FreeNode&lt;/strong&gt; for the support.&lt;/p&gt;
&lt;h2 id="how-to-use-docker-puller" style="color: #333333;"&gt;How to use docker-puller&lt;/h2&gt;
&lt;p&gt;Setting up the service should be quite easy. After you clone the
repository from https://github.com/glowdigitalmedia/docker-puller there
is a &lt;strong&gt;config.json&lt;/strong&gt; file where you define the &lt;strong&gt;host&lt;/strong&gt;, &lt;strong&gt;port&lt;/strong&gt;, a
&lt;strong&gt;token&lt;/strong&gt; and a list of &lt;strong&gt;hooks&lt;/strong&gt; you want to react to. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;host&amp;quot;: &amp;quot;localhost&amp;quot;,
    &amp;quot;port&amp;quot;: 8000,
    &amp;quot;token&amp;quot;: &amp;quot;abc123&amp;quot;,
    &amp;quot;hooks&amp;quot;: {
        &amp;quot;hello&amp;quot;: &amp;quot;scripts/hello.sh&amp;quot;
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a &lt;strong&gt;bash script&lt;/strong&gt; (in this case it was called hello.sh) and put
it under script folder and write the instructions to be executed to pull
the new image and restart the container (example):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull andreagrandi/test:latest
docker stop test
docker rm test
docker run --name test -d -p 8000:80 andreagrandi/test:latest
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once configured, I suggest you to setup a &lt;strong&gt;Nginx&lt;/strong&gt; entry (instructions
not covered here) that for example redirect
&lt;strong&gt;yourhost.com/dockerpuller&lt;/strong&gt; to &lt;strong&gt;localhost:8000&lt;/strong&gt; (I would advise to
enable SSL too, or people could be able to sniff your token). The
service can be started with: "&lt;strong&gt;python app.py&lt;/strong&gt;" (or you can setup a
Supervisor script).&lt;/p&gt;
&lt;p&gt;At this point docker-puller is up and running. Go to &lt;strong&gt;docker.io&lt;/strong&gt;
automatic build settings and setup a webhook like this:
&lt;strong&gt;http://yourhost.com/dockerpuller?token=abc123&amp;amp;hook=hello&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Every time docker.io finishes building and pushing your image to the
docker registry, it will &lt;strong&gt;POST&lt;/strong&gt; on that URL. docker-puller will catch
the POST, check for a valid token, get the hook name and will execute
the relative script.&lt;/p&gt;
&lt;p&gt;That's all! I hope this very simple service can be useful to other
people and once again, if you want to improve it, I will be glad to
accept your pull requests on GitHub.&lt;/p&gt;</content><category term="containers"></category><category term="docker"></category><category term="docker.io"></category><category term="Flask"></category><category term="Python"></category></entry><entry><title>Configuring ddclient to update your dynamic DNS at noip.com</title><link href="https://www.andreagrandi.it/2014/09/02/configuring-ddclient-to-update-your-dynamic-dns-at-noip-com/" rel="alternate"></link><published>2014-09-02T16:26:00+01:00</published><updated>2014-09-02T16:26:00+01:00</updated><author><name>admin</name></author><id>tag:www.andreagrandi.it,2014-09-02:/2014/09/02/configuring-ddclient-to-update-your-dynamic-dns-at-noip-com/</id><summary type="html">&lt;p&gt;&lt;a href="http://noip.com"&gt;&lt;strong&gt;noip.com&lt;/strong&gt;&lt;/a&gt; is one of the few dynamic DNS free
services that are reliable to use. If you have, like in my situation, a
RaspberryPi connected to your home DSL and you want it to be always
reachable without knowing the current IP address (the IP could change if
you have a normal DSL service at home), you need a dynamic DNS service.&lt;/p&gt;
&lt;p&gt;To update the noip.com one you just need &lt;strong&gt;ddclient,&lt;/strong&gt; a tool that is
available in Raspbian/Debian repository. You can install it with this
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ddclient
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then you just need to edit &lt;strong&gt;/etc/ddclient.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;protocol=dyndns2
use=web, web=checkip.dyndns.com/, web-skip=&amp;#39;IP Address&amp;#39;
server=dynupdate.no-ip.com
login=yourusername
password=yourpassword
yourhostname.no-ip.org
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and restart the client:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /etc/init.d/ddclient restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's all! Please remember that noip.com &lt;strong&gt;free accounts&lt;/strong&gt; have a
&lt;strong&gt;limitation&lt;/strong&gt;: they need to be confirmed every 30 days (you will
receive an email and you need to click on the link contained to update
your DNS).&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://noip.com"&gt;&lt;strong&gt;noip.com&lt;/strong&gt;&lt;/a&gt; is one of the few dynamic DNS free
services that are reliable to use. If you have, like in my situation, a
RaspberryPi connected to your home DSL and you want it to be always
reachable without knowing the current IP address (the IP could change if
you have a normal DSL service at home), you need a dynamic DNS service.&lt;/p&gt;
&lt;p&gt;To update the noip.com one you just need &lt;strong&gt;ddclient,&lt;/strong&gt; a tool that is
available in Raspbian/Debian repository. You can install it with this
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ddclient
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then you just need to edit &lt;strong&gt;/etc/ddclient.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;protocol=dyndns2
use=web, web=checkip.dyndns.com/, web-skip=&amp;#39;IP Address&amp;#39;
server=dynupdate.no-ip.com
login=yourusername
password=yourpassword
yourhostname.no-ip.org
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and restart the client:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /etc/init.d/ddclient restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's all! Please remember that noip.com &lt;strong&gt;free accounts&lt;/strong&gt; have a
&lt;strong&gt;limitation&lt;/strong&gt;: they need to be confirmed every 30 days (you will
receive an email and you need to click on the link contained to update
your DNS).&lt;/p&gt;</content></entry><entry><title>Ridimensionare immagini automaticamente con un batch e ImageMagick</title><link href="https://www.andreagrandi.it/2009/07/05/ridimensionare-immagini-automaticamente-con-un-batch-e-imagemagick/" rel="alternate"></link><published>2009-07-05T17:56:00+01:00</published><updated>2009-07-05T17:56:00+01:00</updated><author><name>admin</name></author><id>tag:www.andreagrandi.it,2009-07-05:/2009/07/05/ridimensionare-immagini-automaticamente-con-un-batch-e-imagemagick/</id><summary type="html">&lt;p&gt;Spesso capita di dover compiere azioni noiose e ripetitive su delle
immagini, come ad esempio ridimensionarle o salvarle in formati diversi
da quello originale. Queste operazioni possono richiedere moltissimo
tempo, soprattutto se abbiamo a che fare con una grande quantità di
immagini.&lt;/p&gt;
&lt;p&gt;Per chi usa &lt;strong&gt;Linux&lt;/strong&gt; è disponibile però l'utility &lt;strong&gt;ImageMagick&lt;/strong&gt;, che
unita ad un pizzico di script in &lt;strong&gt;bash&lt;/strong&gt; ci permette di risolvere
agevolmente il problema.&lt;/p&gt;
&lt;p&gt;Per prima cosa è necessario installare il tool sulla propria
distribuzione. Su &lt;strong&gt;Ubuntu&lt;/strong&gt; (o in qualsiasi altra distribuzione basata
su Debian) procedere nella seguente maniera:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install imagemagick&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A questo punto basta posizionarsi nella cartella dove si trovano le
immagini (vi consiglio di crearvi una copia a parte delle immagini da
modificare, visto che lo script andra' a lavorare direttamente su quelle
originali) ed eseguire un comando come questo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find ./ -iname '*.JPG' -exec convert '{}' -resize '1024' '{}' \;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Questo comando convertirà tutte le immagini .JPG che trova in un formato
di 1024 pixel di larghezza, mantenendo ovviamente le proporzioni
dell'immagine originale.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Spesso capita di dover compiere azioni noiose e ripetitive su delle
immagini, come ad esempio ridimensionarle o salvarle in formati diversi
da quello originale. Queste operazioni possono richiedere moltissimo
tempo, soprattutto se abbiamo a che fare con una grande quantità di
immagini.&lt;/p&gt;
&lt;p&gt;Per chi usa &lt;strong&gt;Linux&lt;/strong&gt; è disponibile però l'utility &lt;strong&gt;ImageMagick&lt;/strong&gt;, che
unita ad un pizzico di script in &lt;strong&gt;bash&lt;/strong&gt; ci permette di risolvere
agevolmente il problema.&lt;/p&gt;
&lt;p&gt;Per prima cosa è necessario installare il tool sulla propria
distribuzione. Su &lt;strong&gt;Ubuntu&lt;/strong&gt; (o in qualsiasi altra distribuzione basata
su Debian) procedere nella seguente maniera:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install imagemagick&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A questo punto basta posizionarsi nella cartella dove si trovano le
immagini (vi consiglio di crearvi una copia a parte delle immagini da
modificare, visto che lo script andra' a lavorare direttamente su quelle
originali) ed eseguire un comando come questo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find ./ -iname '*.JPG' -exec convert '{}' -resize '1024' '{}' \;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Questo comando convertirà tutte le immagini .JPG che trova in un formato
di 1024 pixel di larghezza, mantenendo ovviamente le proporzioni
dell'immagine originale.&lt;/p&gt;</content><category term="batch"></category><category term="foto"></category><category term="fotoritocco"></category><category term="image"></category><category term="imagemagick"></category><category term="immagini"></category><category term="magick"></category><category term="ridimensionare"></category><category term="script"></category></entry><entry><title>Scanner Mustek ScanExpress 1248 USB su Ubuntu Linux</title><link href="https://www.andreagrandi.it/2008/12/17/scanner-mustek-scanexpress-1248-usb-su-ubuntu-linux/" rel="alternate"></link><published>2008-12-17T19:40:00+00:00</published><updated>2008-12-17T19:40:00+00:00</updated><author><name>admin</name></author><id>tag:www.andreagrandi.it,2008-12-17:/2008/12/17/scanner-mustek-scanexpress-1248-usb-su-ubuntu-linux/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.mustek.de/eng_/html/produkte/se1248ub.htm"&gt;&lt;img alt="" src="http://www.andreagrandi.it/wp-content/uploads/2008/12/se1248ub.jpg" title="se1248ub"&gt;{.alignright
.size-full .wp-image-187 width="180"
height="134"}&lt;/a&gt;Lo
scanner &lt;a href="http://www.mustek.de/eng_/html/produkte/se1248ub.htm"&gt;&lt;strong&gt;Mustek ScanExpress 1248
USB&lt;/strong&gt;&lt;/a&gt; è
pienamente compatibile con Linux, però purtroppo non basta connetterlo
per farlo funzionare. &lt;strong&gt;Ubuntu Linux 8.10&lt;/strong&gt; non distribuisce il firmware
necessario al suo funzionamento, però è possibile reperirlo ed
installarlo con molta facilità.&lt;/p&gt;
&lt;p&gt;Per prima cosa dobbiamo assicurarci di avere il modello esatto di questo
scanner. Per scoprirlo è sufficiente dare il comando &lt;strong&gt;lsusb&lt;/strong&gt; da
terminale. Dovremmo ottenere una stringa come la seguente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Bus 002 Device 003: ID 055f:021f Mustek Systems, Inc. SNAPSCAN e22&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A questo punto possiamo scaricare il suo firmware da &lt;a href="http://www.meier-geinitz.de/sane/gt68xx-backend/"&gt;un
sito&lt;/a&gt; che li raccoglie
tutti (quelli che sono compatibili ovviamente):
&lt;a href="http://www.meier-geinitz.de/sane/gt68xx-backend/firmware/SBSfw.usb"&gt;&lt;strong&gt;http://www.meier-geinitz.de/sane/gt68xx-backend/firmware/SBSfw.usb&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Questo file va messo all'interno della cartella
&lt;strong&gt;/usr/share/sane/gt68xx/&lt;/strong&gt; (occorrono i permessi di root per poterlo
fare, quindi il file andra' copiato tramite il comando &lt;strong&gt;sudo cp
SBSfw.usb /usr/share/sane/gt68xx/&lt;/strong&gt; ).&lt;/p&gt;
&lt;p&gt;Infine dobbiamo assicurarci di aver installato tutti i pacchetti
necessari a farlo funzionare:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install sane libsane sane-utils libsane-extras xsane xsane-common&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Lo scanner è adesso pronto per funzionare.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; nella &lt;strong&gt;Ubuntu 12.04&lt;/strong&gt; la
directory &lt;strong&gt;/usr/share/sane/gt68xx/&lt;/strong&gt; non è presente di default e va
creata manualmente con &lt;strong&gt;sudo mkdir &lt;/strong&gt;/usr/share/sane/gt68xx/****&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.mustek.de/eng_/html/produkte/se1248ub.htm"&gt;&lt;img alt="" src="http://www.andreagrandi.it/wp-content/uploads/2008/12/se1248ub.jpg" title="se1248ub"&gt;{.alignright
.size-full .wp-image-187 width="180"
height="134"}&lt;/a&gt;Lo
scanner &lt;a href="http://www.mustek.de/eng_/html/produkte/se1248ub.htm"&gt;&lt;strong&gt;Mustek ScanExpress 1248
USB&lt;/strong&gt;&lt;/a&gt; è
pienamente compatibile con Linux, però purtroppo non basta connetterlo
per farlo funzionare. &lt;strong&gt;Ubuntu Linux 8.10&lt;/strong&gt; non distribuisce il firmware
necessario al suo funzionamento, però è possibile reperirlo ed
installarlo con molta facilità.&lt;/p&gt;
&lt;p&gt;Per prima cosa dobbiamo assicurarci di avere il modello esatto di questo
scanner. Per scoprirlo è sufficiente dare il comando &lt;strong&gt;lsusb&lt;/strong&gt; da
terminale. Dovremmo ottenere una stringa come la seguente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Bus 002 Device 003: ID 055f:021f Mustek Systems, Inc. SNAPSCAN e22&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A questo punto possiamo scaricare il suo firmware da &lt;a href="http://www.meier-geinitz.de/sane/gt68xx-backend/"&gt;un
sito&lt;/a&gt; che li raccoglie
tutti (quelli che sono compatibili ovviamente):
&lt;a href="http://www.meier-geinitz.de/sane/gt68xx-backend/firmware/SBSfw.usb"&gt;&lt;strong&gt;http://www.meier-geinitz.de/sane/gt68xx-backend/firmware/SBSfw.usb&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Questo file va messo all'interno della cartella
&lt;strong&gt;/usr/share/sane/gt68xx/&lt;/strong&gt; (occorrono i permessi di root per poterlo
fare, quindi il file andra' copiato tramite il comando &lt;strong&gt;sudo cp
SBSfw.usb /usr/share/sane/gt68xx/&lt;/strong&gt; ).&lt;/p&gt;
&lt;p&gt;Infine dobbiamo assicurarci di aver installato tutti i pacchetti
necessari a farlo funzionare:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install sane libsane sane-utils libsane-extras xsane xsane-common&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Lo scanner è adesso pronto per funzionare.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; nella &lt;strong&gt;Ubuntu 12.04&lt;/strong&gt; la
directory &lt;strong&gt;/usr/share/sane/gt68xx/&lt;/strong&gt; non è presente di default e va
creata manualmente con &lt;strong&gt;sudo mkdir &lt;/strong&gt;/usr/share/sane/gt68xx/****&lt;/p&gt;</content><category term="mustek"></category><category term="scanner"></category></entry><entry><title>Utilizzare webcam V4L2 con Flash su Linux</title><link href="https://www.andreagrandi.it/2008/11/25/utilizzare-webcam-v4l2-con-flash-su-linux/" rel="alternate"></link><published>2008-11-25T10:44:00+00:00</published><updated>2008-11-25T10:44:00+00:00</updated><author><name>admin</name></author><id>tag:www.andreagrandi.it,2008-11-25:/2008/11/25/utilizzare-webcam-v4l2-con-flash-su-linux/</id><summary type="html">&lt;h2&gt;&lt;img alt="" class="alignright size-full wp-image-174" height="130" src="http://www.andreagrandi.it/wp-content/uploads/2008/11/flash.png" title="flash" width="134"&gt;Introduzione&lt;/h2&gt;
&lt;p&gt;Il supporto per le webcam su Linux non è mai stata una cosa molto
semplice. I motivi principali per cui le webcam non sono ben supportate
sono principalmente due: la &lt;strong&gt;scarsa collaborazione dei produttori di
hardware&lt;/strong&gt;, che dovrebbero fornire almeno le specifiche a chi sviluppa i
driver per Linux e il quasi &lt;strong&gt;completo disinteresse di chi scrive le
applicazioni&lt;/strong&gt; per l'utente finale (in particolare Microsoft con MSN e
Skype che utilizzano entrambi un protocollo proprietario e non
documentato).&lt;/p&gt;
&lt;p&gt;Da diverso tempo si stanno diffondendo applicazioni scritte in &lt;strong&gt;Flash&lt;/strong&gt;
che permettono di utilizzare la webcam: dalle videochat,
all'applicazione di
&lt;a href="http://www.youtube.com/my_videos_quick_capture"&gt;&lt;strong&gt;Youtube&lt;/strong&gt;&lt;/a&gt; che
permette di pubblicare un video registrandolo direttamente, fino ai
recenti servizi di streaming video come ad esempio
&lt;a href="http://www.justin.tv"&gt;&lt;strong&gt;JustinTV&lt;/strong&gt;&lt;/a&gt; e
&lt;a href="http://www.ustream.tv"&gt;&lt;strong&gt;UStream&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Il plugin Flash della Adobe, purtroppo ha iniziato a supportare le
webcam su Linux utilizzando il protocollo &lt;strong&gt;V4L1&lt;/strong&gt; quando ormai la
maggior parte di esse funzionava solo con il nuovo protocollo &lt;strong&gt;V4L2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A partire &lt;strong&gt;dalla versione 10&lt;/strong&gt; di Flash, finalmente la Adobe ha
iniziato a supportare il protocollo V4L2, anche se il supporto non è
ancora completo. Modelli differenti di webcam infatti utilizzano
svariati formati di trasmissione video. Fortunatamente lo sviluppatore
che lavora per Adobe si è reso disponibile per ricevere il feedback da
parte degli utenti e per implementare questi formati in modo da
supportare il maggior numero possibile di webcam. Per chi volesse
contribuire è possibile seguire le istruzioni su questa pagina:
&lt;a href="http://blogs.adobe.com/penguin.swf/2008/07/paparazzi_v2_1.html"&gt;http://blogs.adobe.com/penguin.swf/2008/07/paparazzi_v2_1.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;gstfakevideo: un workaround per emulare V4L1&lt;/h2&gt;
&lt;p&gt;Visto che il supporto per le webcam che utilizzano V4L1 è molto piu'
stabile, &lt;strong&gt;l'ingegno della community Linux non è stato ad aspettare&lt;/strong&gt;
con le mani in mano. Il metodo utilizzato è basato su quello che veniva
usato su Skype per supportare un maggior numero di webcam: &lt;strong&gt;in pratica
viene creato un device virtuale V4L1 sul quale viene redirezionato
l'output della webcam V4L2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Il &lt;a href="http://code.google.com/p/gstfakevideo/"&gt;codice originale&lt;/a&gt; purtroppo
aveva bisogno di alcuni aggiustamenti, mi sono permesso quindi di
modificarlo e di applicarli. Potete trovare la nuova versione a questo
indirizzo:
&lt;a href="http://www.andreagrandi.it/download/gstfakevideo/gstfakevideo.tar.gz"&gt;http://www.andreagrandi.it/download/gstfakevideo/gstfakevideo.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;La compilazione non dovrebbe comportare particolari problemi: è
sufficiente eseguire &lt;strong&gt;make&lt;/strong&gt; all'interno della cartella dei sorgenti.&lt;/p&gt;
&lt;p&gt;Per testare il funzionamento della webcam è sufficiente esegurie lo
script che si trova all'interno della cartella. Verrà avviato &lt;strong&gt;Firefox
con il supporto per le webcam V4L1&lt;/strong&gt;. Visitando uno dei siti web che
hanno un'applicazione Flash che utilizza la webcam citati all'inizio,
sara' possibile verificarne il corretto funzionamento.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Riferimenti:&lt;/strong&gt; le istruzioni in questo post sono state in parte prese
da questo sito web (in inglese):
&lt;a href="http://www.jtolds.com/newsletter/2008/7/27/how-to-get-v4l2-devices-to-work-with-flash"&gt;http://www.jtolds.com/newsletter/2008/7/27/how-to-get-v4l2-devices-to-work-with-flash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;&lt;img alt="" class="alignright size-full wp-image-174" height="130" src="http://www.andreagrandi.it/wp-content/uploads/2008/11/flash.png" title="flash" width="134"&gt;Introduzione&lt;/h2&gt;
&lt;p&gt;Il supporto per le webcam su Linux non è mai stata una cosa molto
semplice. I motivi principali per cui le webcam non sono ben supportate
sono principalmente due: la &lt;strong&gt;scarsa collaborazione dei produttori di
hardware&lt;/strong&gt;, che dovrebbero fornire almeno le specifiche a chi sviluppa i
driver per Linux e il quasi &lt;strong&gt;completo disinteresse di chi scrive le
applicazioni&lt;/strong&gt; per l'utente finale (in particolare Microsoft con MSN e
Skype che utilizzano entrambi un protocollo proprietario e non
documentato).&lt;/p&gt;
&lt;p&gt;Da diverso tempo si stanno diffondendo applicazioni scritte in &lt;strong&gt;Flash&lt;/strong&gt;
che permettono di utilizzare la webcam: dalle videochat,
all'applicazione di
&lt;a href="http://www.youtube.com/my_videos_quick_capture"&gt;&lt;strong&gt;Youtube&lt;/strong&gt;&lt;/a&gt; che
permette di pubblicare un video registrandolo direttamente, fino ai
recenti servizi di streaming video come ad esempio
&lt;a href="http://www.justin.tv"&gt;&lt;strong&gt;JustinTV&lt;/strong&gt;&lt;/a&gt; e
&lt;a href="http://www.ustream.tv"&gt;&lt;strong&gt;UStream&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Il plugin Flash della Adobe, purtroppo ha iniziato a supportare le
webcam su Linux utilizzando il protocollo &lt;strong&gt;V4L1&lt;/strong&gt; quando ormai la
maggior parte di esse funzionava solo con il nuovo protocollo &lt;strong&gt;V4L2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A partire &lt;strong&gt;dalla versione 10&lt;/strong&gt; di Flash, finalmente la Adobe ha
iniziato a supportare il protocollo V4L2, anche se il supporto non è
ancora completo. Modelli differenti di webcam infatti utilizzano
svariati formati di trasmissione video. Fortunatamente lo sviluppatore
che lavora per Adobe si è reso disponibile per ricevere il feedback da
parte degli utenti e per implementare questi formati in modo da
supportare il maggior numero possibile di webcam. Per chi volesse
contribuire è possibile seguire le istruzioni su questa pagina:
&lt;a href="http://blogs.adobe.com/penguin.swf/2008/07/paparazzi_v2_1.html"&gt;http://blogs.adobe.com/penguin.swf/2008/07/paparazzi_v2_1.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;gstfakevideo: un workaround per emulare V4L1&lt;/h2&gt;
&lt;p&gt;Visto che il supporto per le webcam che utilizzano V4L1 è molto piu'
stabile, &lt;strong&gt;l'ingegno della community Linux non è stato ad aspettare&lt;/strong&gt;
con le mani in mano. Il metodo utilizzato è basato su quello che veniva
usato su Skype per supportare un maggior numero di webcam: &lt;strong&gt;in pratica
viene creato un device virtuale V4L1 sul quale viene redirezionato
l'output della webcam V4L2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Il &lt;a href="http://code.google.com/p/gstfakevideo/"&gt;codice originale&lt;/a&gt; purtroppo
aveva bisogno di alcuni aggiustamenti, mi sono permesso quindi di
modificarlo e di applicarli. Potete trovare la nuova versione a questo
indirizzo:
&lt;a href="http://www.andreagrandi.it/download/gstfakevideo/gstfakevideo.tar.gz"&gt;http://www.andreagrandi.it/download/gstfakevideo/gstfakevideo.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;La compilazione non dovrebbe comportare particolari problemi: è
sufficiente eseguire &lt;strong&gt;make&lt;/strong&gt; all'interno della cartella dei sorgenti.&lt;/p&gt;
&lt;p&gt;Per testare il funzionamento della webcam è sufficiente esegurie lo
script che si trova all'interno della cartella. Verrà avviato &lt;strong&gt;Firefox
con il supporto per le webcam V4L1&lt;/strong&gt;. Visitando uno dei siti web che
hanno un'applicazione Flash che utilizza la webcam citati all'inizio,
sara' possibile verificarne il corretto funzionamento.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Riferimenti:&lt;/strong&gt; le istruzioni in questo post sono state in parte prese
da questo sito web (in inglese):
&lt;a href="http://www.jtolds.com/newsletter/2008/7/27/how-to-get-v4l2-devices-to-work-with-flash"&gt;http://www.jtolds.com/newsletter/2008/7/27/how-to-get-v4l2-devices-to-work-with-flash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content><category term="flash"></category><category term="V4L1"></category><category term="V4L2"></category><category term="webcam"></category></entry></feed>