<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Andrea Grandi</title><link>https://www.andreagrandi.it/</link><description>Software Developer</description><lastBuildDate>Tue, 06 Feb 2024 22:03:00 +0100</lastBuildDate><item><title>How to show a cover image in Pelican based blog posts</title><link>https://www.andreagrandi.it/2024/02/06/how-to-show-cover-image-pelican-blog-posts/</link><description>&lt;p&gt;How to add a cover image to Pelican based blog posts, so that when the article is shared on social media the image is shown in the preview.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 06 Feb 2024 22:03:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2024-02-06:/2024/02/06/how-to-show-cover-image-pelican-blog-posts/</guid><category>Development</category><category>Pelican</category><category>Python</category><category>blog</category><category>writing</category><category>images</category><category>cover</category><category>template</category><category>open</category><category>graph</category><category>meta</category><category>social</category><category>media</category></item><item><title>Kagi: a paid search engine which is worth the money</title><link>https://www.andreagrandi.it/2024/02/04/kagi-paid-search-engine/</link><description>&lt;p&gt;Kagi is a paid search engine which gives you search results you are actually looking for. It doesn’t track you and doesn’t have any ads.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 04 Feb 2024 17:38:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2024-02-04:/2024/02/04/kagi-paid-search-engine/</guid><category>Technology</category><category>kagi</category><category>search</category><category>engine</category><category>paid</category><category>google</category><category>ads</category><category>tracking</category><category>privacy</category></item><item><title>Blogging from an iPad</title><link>https://www.andreagrandi.it/2024/02/01/blogging-from-an-ipad/</link><description>&lt;p&gt;In this post I share my findings and my current setup which allows me to write and publish blog posts from my iPad, for my static generated blog, powered by Pelican and GitHub Pages.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 01 Feb 2024 17:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2024-02-01:/2024/02/01/blogging-from-an-ipad/</guid><category>Writing</category><category>development</category><category>tutorial</category><category>howto</category><category>writing</category><category>iOS</category><category>shortcuts</category><category>MWeb</category><category>git</category></item><item><title>Use OpenAI API to make two GPT bots talk to each other</title><link>https://www.andreagrandi.it/2023/05/05/use-openai-api-to-make-two-gpt-bots-talk/</link><description>&lt;p&gt;Use OpenAI API to make two GPT bots talk to each other&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 05 May 2023 13:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2023-05-05:/2023/05/05/use-openai-api-to-make-two-gpt-bots-talk/</guid><category>Development</category><category>python</category><category>development</category><category>chatgpt</category><category>openai</category><category>artificial</category><category>intelligence</category><category>machine</category><category>learning</category><category>tutorial</category><category>howto</category><category>api</category></item><item><title>HowTo use OpenAI API for ChatGPT in Python</title><link>https://www.andreagrandi.it/2023/04/17/how-to-use-openai-api-for-chatgpt-in-python/</link><description>&lt;p&gt;How to use the OpenAI API for ChatGPT in Python&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Mon, 17 Apr 2023 16:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2023-04-17:/2023/04/17/how-to-use-openai-api-for-chatgpt-in-python/</guid><category>Development</category><category>python</category><category>development</category><category>chatgpt</category><category>openai</category><category>artificial</category><category>intelligence</category><category>machine</category><category>learning</category><category>tutorial</category><category>howto</category><category>api</category></item><item><title>Ignoring hosts with python vcr when writing tests with pytest and generating cassettes</title><link>https://www.andreagrandi.it/2022/12/02/ignore-hosts-with-python-vcr/</link><description>&lt;p&gt;How to ignore hosts with python vcr when writing tests with pytest and generating cassettes&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 02 Dec 2022 11:30:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2022-12-02:/2022/12/02/ignore-hosts-with-python-vcr/</guid><category>Development</category><category>python</category><category>development</category><category>python-vcr</category><category>programming</category><category>tests</category><category>pytest</category><category>vcr</category></item><item><title>Using pyenv and pyenv-virtualenv to install Python and create a virtual environment on MacOS</title><link>https://www.andreagrandi.it/2022/01/29/install-python-with-pyenv-and-pyenvvirtualenv-create-virtual-environment-with-specific-python-version-macos/</link><description>&lt;p&gt;How to use pyenv and pyenv-virtualenv to install a specific version of Python and create a virtual environment with that version on MacOS&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 29 Jan 2022 16:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2022-01-29:/2022/01/29/install-python-with-pyenv-and-pyenvvirtualenv-create-virtual-environment-with-specific-python-version-macos/</guid><category>Development</category><category>python</category><category>development</category><category>pyenv</category><category>virtualenv</category><category>pyenv-virtualenv</category><category>environment</category><category>python310</category><category>programming</category><category>pip</category><category>macos</category><category>install</category><category>version</category></item><item><title>How to safely store Arduino secrets</title><link>https://www.andreagrandi.it/2020/12/16/how-to-safely-store-arduino-secrets/</link><description>&lt;p&gt;Best practices to store Arduino secrets safely&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 16 Dec 2020 18:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-12-16:/2020/12/16/how-to-safely-store-arduino-secrets/</guid><category>Development</category><category>arduino</category><category>secrets</category><category>secret</category><category>security</category><category>password</category><category>passwords</category><category>storage</category><category>howto</category><category>safe</category><category>hide</category><category>secure</category></item><item><title>Getting started with TinyGo and WebAssembly (WASM)</title><link>https://www.andreagrandi.it/2020/10/23/getting-started-with-tinygo-webassembly/</link><description>&lt;p&gt;This tutorial explains how to call a method written in Go and compiled to WebAssembly (WASM) from JavaScript by using TinyGo&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 23 Oct 2020 18:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-10-23:/2020/10/23/getting-started-with-tinygo-webassembly/</guid><category>Development</category><category>go</category><category>golang</category><category>tinygo</category><category>web</category><category>webassembly</category><category>wasm</category><category>assembly</category><category>js</category><category>javascript</category><category>html</category><category>browser</category><category>macos</category><category>code</category><category>development</category><category>embedded</category><category>programming</category><category>language</category></item><item><title>Set specific environment variables activating a Python virtual environment</title><link>https://www.andreagrandi.it/2020/10/16/set-specific-environment-variables-activating-python-virtual-environment/</link><description>&lt;p&gt;How to set specific environment variables when we activate a Python virtual environment&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 16 Oct 2020 21:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-10-16:/2020/10/16/set-specific-environment-variables-activating-python-virtual-environment/</guid><category>Development</category><category>set</category><category>environment</category><category>variables</category><category>activate</category><category>python</category><category>virtual</category><category>terminal</category><category>bash</category><category>zsh</category><category>env</category><category>dotenv</category><category>script</category></item><item><title>Optimise your website JavaScript loading speed with defer</title><link>https://www.andreagrandi.it/2020/10/15/optimise-website-javascript-loading-speed/</link><description>&lt;p&gt;A simple way to optimise the websites loading speed by deferring javascript download&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 15 Oct 2020 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-10-15:/2020/10/15/optimise-website-javascript-loading-speed/</guid><category>Development</category><category>optimisation</category><category>optimise</category><category>javascript</category><category>js</category><category>website</category><category>web</category><category>performance</category><category>speed</category><category>defer</category><category>page</category><category>fast</category><category>loading</category><category>webpage</category><category>quicker</category></item><item><title>Improve your Pelican based website SEO by adding canonical url</title><link>https://www.andreagrandi.it/2020/10/14/improve-pelican-based-website-seo-adding-canonical-url/</link><description>&lt;p&gt;A quick trick to improve your Pelican based website SEO&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 14 Oct 2020 18:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-10-14:/2020/10/14/improve-pelican-based-website-seo-adding-canonical-url/</guid><category>Development</category><category>pelican</category><category>website</category><category>seo</category><category>canonical</category><category>url</category><category>optimisation</category><category>google</category><category>search</category></item><item><title>Python 3.9 introduces removeprefix and removesuffix</title><link>https://www.andreagrandi.it/2020/10/11/python39-introduces-removeprefix-removesuffix/</link><description>&lt;p&gt;A quick tutorial to removeprefix and removesuffix methods which have been introduced with Python 3.9.0&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 11 Oct 2020 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-10-11:/2020/10/11/python39-introduces-removeprefix-removesuffix/</guid><category>Development</category><category>python</category><category>development</category><category>python39</category><category>programming</category><category>version</category><category>language</category><category>strings</category><category>manipulation</category></item><item><title>Using pyenv to install Python and create a virtual environment</title><link>https://www.andreagrandi.it/2020/10/10/install-python-with-pyenv-create-virtual-environment-with-specific-python-version/</link><description>&lt;p&gt;How to use pyenv to install a specific version of Python and create a virtual environment with that version&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 10 Oct 2020 19:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-10-10:/2020/10/10/install-python-with-pyenv-create-virtual-environment-with-specific-python-version/</guid><category>Development</category><category>python</category><category>development</category><category>pyenv</category><category>virtualenv</category><category>mkvirtualenv</category><category>environment</category><category>python39</category><category>programming</category><category>pip</category><category>macos</category><category>install</category><category>version</category></item><item><title>Contact Tracing: non e' solo un problema di privacy o di sicurezza</title><link>https://www.andreagrandi.it/2020/04/20/contact-tracing-non-solo-un-problema-di-privacy/</link><description>&lt;h2&gt;Contact Tracing in Italia&lt;/h2&gt;
&lt;p&gt;Negli ultimi giorni non si fa che parlare di &lt;strong&gt;Immuni&lt;/strong&gt;, la app che il Governo Italiano avrebbe scelto, come soluzione di &lt;strong&gt;contact tracing&lt;/strong&gt; per il &lt;strong&gt;COVID-19&lt;/strong&gt;, e vengono sollevati molti dubbi (si va da quelli legittimi a quelli che rasentano il complottismo) al riguardo.&lt;/p&gt;
&lt;p&gt;Per "contact tracing" si intende una soluzione che, mediante l'uso della tecnologia, ci permetta di creare una traccia di tutti i nostri contatti e fare in modo che quando uno di essi dichiarera' di essere positivo al COVID-19, le persone che sono entrate in contatto con lui/lei ricevano una notifica.&lt;/p&gt;
&lt;p&gt;Prima che proseguiate nella lettura, mi sento in dovere di fare &lt;strong&gt;una doverosa premessa&lt;/strong&gt;: da oltre 20 anni mi occupo di sviluppo software ed ho esperienza di utilizzo di svariate tecnologie anche in ambiti in cui di solito e' l'uomo a prendere una decisione. La cosa piu' importante pero' e' che &lt;strong&gt;non sono ne' un virologo, ne' un epidemiologo, ne' un medico&lt;/strong&gt;. Mi limitero' quindi ad un'analisi dei fatti, rimanendo nell'ambito delle mie competenze.&lt;/p&gt;
&lt;p&gt;La mia personale opinione (tuttavia irrilevante) e' che una soluzione tecnologica possa essere di aiuto nelle prossime fasi della pandemia, ma dovra' essere accompagnata da un'accurata verifica manuale dei risultati.&lt;/p&gt;
&lt;h2&gt;I dubbi al momento&lt;/h2&gt;
&lt;p&gt;I maggiori dubbi al momento riguardando &lt;strong&gt;l'efficacia&lt;/strong&gt; della soluzione scelta, la &lt;strong&gt;sicurezza&lt;/strong&gt; dei dati sensibili che verranno raccolti e quelli sulla &lt;strong&gt;privacy&lt;/strong&gt; delle persone.&lt;/p&gt;
&lt;p&gt;Ritengo tutti questi punti molto importanti, ma sono dell'idea che prima di tutto questo si debba fare un punto sulla &lt;strong&gt;trasparenza&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;Il Governo e la task force&lt;/h3&gt;
&lt;p&gt;Alcune settimane fa il Governo ha annunciato la creazione di una &lt;a href="https://innovazione.gov.it/DM-task-force/"&gt;task force di tecnici&lt;/a&gt;, che avrebbe dovuto produrre un report con suggerimenti e linee guida, in modo che il governo potesse effettuare una scelta ragionata. Molti di questi nomi sono noti a chi e' del settore (ne conosco personalmente alcuni) e ritengo personalmente che fosse un ottimo punto di partenza.&lt;/p&gt;
&lt;p&gt;Il problema pero' e' che &lt;strong&gt;l'intera task force e' stata messa sotto Non Disclosure Agreement&lt;/strong&gt;, che tradotto in termini semplici significa che a nessuno di loro e' permesso di rilasciare commenti o dichiarazioni in pubblico, ne' di rivelare alcuna informazione su quanto prodotto.&lt;/p&gt;
&lt;h3&gt;Il report della task force&lt;/h3&gt;
&lt;p&gt;Il &lt;strong&gt;report&lt;/strong&gt;, ad oggi, &lt;strong&gt;non e' stato reso pubblico&lt;/strong&gt;: in che modo possiamo valutare i criteri utilizzati per scegliere la soluzione, se non ci e' permesso di leggere il report? &lt;/p&gt;
&lt;p&gt;Come facciamo a verificare &lt;strong&gt;che il Governo abbia effettivamente seguito le indicazioni&lt;/strong&gt; dei tecnici o se abbia preferito fare di testa propria? &lt;/p&gt;
&lt;h3&gt;La soluzione scelta: quali criteri?&lt;/h3&gt;
&lt;p&gt;Al momento non esiste un "white paper" che ci descriva la soluzione proposta e adottata. In base a &lt;strong&gt;quali criteri&lt;/strong&gt; e' stata scelta proprio questa soluzione?&lt;/p&gt;
&lt;h3&gt;Quali conseguenze dopo una notifica?&lt;/h3&gt;
&lt;p&gt;Supponiamo di ricevere una notifica che ci avvisa che il giorno X siamo stati per un certo periodo di tempo vicini ad un'altra persona che si e' poi dichiarata positiva. Quale sara' la diretta conseguenza?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A) Qualcuno verra' a farci un tampone di verifica il prima possibile&lt;/li&gt;
&lt;li&gt;B) Ci verra' imposto un periodo di quarantena senza alcuna verifica&lt;/li&gt;
&lt;li&gt;C) Potremo ignorare la notifica&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se le conseguenze di questa importante notifica non vengono stabilite a priori, molti non vorranno rischiare di essere costretti in casa, magari per un falso negativo. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: le possibilita' di un falso positivo sono davvero molte. Basandosi sul raggio di azione del Bluetooth, in teoria potremmo essere a 1 metro di distanza da una persona infetta, ma essere nella stanza accanto (e quindi in totale sicurezza). Oppure potremmo passare accanto ad una persona infetta mentre siamo in macchina con il finestrino chiuso. Per non parlare poi degli operatori sanitari: in alcuni casi, loro hanno la certezza di trovarsi nei paraggi di persone infette. Verrebbero considerati infetti anche loro? E quando la sera tornano a casa dai loro coniugi e familiari, sarebbero anche essi considerati positivi dalla app?&lt;/p&gt;
&lt;h3&gt;Closed Source&lt;/h3&gt;
&lt;p&gt;Nonostante le raccomandazioni della commissione Europea, pare che il codice sorgente della app non sara' pubblico (ma verra' rilasciato solo al Governo Italiano). Questo significa che non sara' possibile un controllo da parte di terze parti, e non ci sara' alcuna garanzia su quello che la app possa fare con i nostri dati (ne' sara' facile scovare e segnalare bug di sicurezza).&lt;/p&gt;
&lt;p&gt;Aggiornamento (21/04/2020): il governo ha annunciato in &lt;a href="https://innovazione.gov.it/un-aggiornamento-sull-applicazione-di-contact-tracing-digitale-per-l-emergenza-coronavirus/"&gt;un aggiornamento&lt;/a&gt;, che la app verra' rilasciata sotto licenza &lt;strong&gt;Open Source (MPL 2.0)&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Conclusioni&lt;/h2&gt;
&lt;p&gt;Qualsiasi strada si decida di prendere, e' fondamentale che il processo decisionale che ha portato a tale scelta sia quanto piu' &lt;strong&gt;trasparente&lt;/strong&gt; possibile. Solo in questo modo si potra' ottenere la fiducia del maggior numero di persone e cercare di raggiungere l'effetto desiderato. Per il momento, tutta questa trasparenza non c'e' stata.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Mon, 20 Apr 2020 19:30:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-04-20:/2020/04/20/contact-tracing-non-solo-un-problema-di-privacy/</guid><category>Privacy</category><category>privacy</category><category>trasparenza</category><category>immuni</category><category>app</category><category>contact</category><category>tracing</category><category>covid</category><category>covid19</category></item><item><title>covid-api - a free and open source API service for COVID-19 data</title><link>https://www.andreagrandi.it/2020/04/10/covid-api-free-and-open-source-api-service-for-covid19-data/</link><description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In this period of COVID-19 emergency, many countries are publishing COVID related data that is being used by many existing projects and researchers.&lt;/p&gt;
&lt;p&gt;The main problem with these data is that they are being released in CSV format on some GitHub repository. While we fully appreciate the opennes of this format, unfortunataly it can introduce an additional work to be done (downloading the data, cleaning it, importing the data into a database, keeping it updated etc...) before someone can consume and analyse the data.&lt;/p&gt;
&lt;h2&gt;covid-api&lt;/h2&gt;
&lt;p&gt;covid-api project is a &lt;strong&gt;free&lt;/strong&gt; and &lt;strong&gt;open source&lt;/strong&gt; API service which automatically imports the data from various sources (at the moment we support the &lt;a href="https://github.com/CSSEGISandData/COVID-19"&gt;John Hopkins CSSE&lt;/a&gt; data source) and makes it available as a REST API.&lt;/p&gt;
&lt;p&gt;The service is still under development, but an initial version (with regularly updated data) is already available at &lt;a href="https://api.covid19data.cloud"&gt;https://api.covid19data.cloud&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;How to use the data&lt;/h2&gt;
&lt;p&gt;To consume the API you don't need an account nor you need to authenticate in any way. You just need to request the right endpoint using the supported parameters.&lt;/p&gt;
&lt;p&gt;Here is an example for Python language:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://api.covid19data.cloud/v1/jh/daily-reports?last_update_from=2020-04-01&amp;amp;last_update_to=2020-04-03&amp;amp;country=Italy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;35343&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;country_region&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Italy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;province_state&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;fips&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;admin2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;last_update&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2020-04-01T21:58:34&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;confirmed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;110574&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;deaths&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13155&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;recovered&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16847&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;37895&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;country_region&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Italy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;province_state&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;fips&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;admin2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;last_update&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2020-04-02T23:25:14&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;confirmed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;115242&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;deaths&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13915&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;recovered&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18278&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Further API documentation is available at https://api.covid19data.cloud/docs&lt;/p&gt;
&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;While we keep polishing the code and &lt;a href="https://github.com/andreagrandi/covid-api/issues/43"&gt;improving the existing data import&lt;/a&gt; procedure, we are planning to support additional data sources. The next one we are going to support is the &lt;a href="https://github.com/andreagrandi/covid-api/issues/46"&gt;&lt;strong&gt;Italian Protezione Civile&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are aware of an additional data source that you would like to see covered, please let us know (creating a new Issue on GitHub) or send us a pull request.&lt;/p&gt;
&lt;h2&gt;Contribute to the project&lt;/h2&gt;
&lt;p&gt;If you are a Python developer and would like to contribute to the project, my advice is to first have a look at the main documentation available in the &lt;a href="https://github.com/andreagrandi/covid-api/blob/master/README.md"&gt;README&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then I suggest to have a look at the existing &lt;a href="https://github.com/andreagrandi/covid-api/issues"&gt;Issues&lt;/a&gt; and see where help is needed or in alternative you can open a new Issue or send a pull request with fixes and improvements.&lt;/p&gt;
&lt;p&gt;I also recommend to become familiar with our &lt;a href="https://github.com/andreagrandi/covid-api/blob/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; before sending any contribution.&lt;/p&gt;
&lt;h2&gt;Sponsors and Thanks&lt;/h2&gt;
&lt;p&gt;I want to thank &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt; for accepting to sponsor the hosting of this service.&lt;/p&gt;
&lt;p&gt;I also want to thank all the &lt;a href="https://github.com/andreagrandi/covid-api/graphs/contributors"&gt;volunteers&lt;/a&gt; involved in the project for their help and contributions.&lt;/p&gt;
&lt;h2&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;We are doing our best to keep the available data updated, clean (removing duplicates), and to provide a reliable service, 
but we are not in any way responsible for the accuracy of the data nor for the availability of the service itself. 
Please &lt;strong&gt;use it at your own risk&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abuse notice&lt;/strong&gt;: we are currently not requiring any registration or authentication to use this service because 
we would like to keep it as simple as possible. 
Please do not abuse the service or you will force us to require a registration (subject to approval) to continue using it.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 10 Apr 2020 22:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-04-10:/2020/04/10/covid-api-free-and-open-source-api-service-for-covid19-data/</guid><category>Development</category><category>covid</category><category>api</category><category>rest</category><category>data</category><category>covid-19</category><category>service</category><category>free</category><category>open</category><category>source</category></item><item><title>Google is moving some EU citizens data to US</title><link>https://www.andreagrandi.it/2020/02/25/google-is-moving-eu-citizens-data-to-us/</link><description>&lt;h2&gt;What is going on&lt;/h2&gt;
&lt;p&gt;As you may have heard already, because of &lt;strong&gt;brexit&lt;/strong&gt;, &lt;a href="https://www.independent.co.uk/life-style/gadgets-and-tech/news/google-uk-us-data-brexit-gdpr-trump-protection-information-a9348191.html"&gt;Google is moving UK citizens data&lt;/a&gt; from the Northern Ireland data controller to the US one (Google LLC).
Leaving the EU, UK citizens are not protected anymore by GDPR, and while this may be unfair, Google is legally allowed to do it.&lt;/p&gt;
&lt;h2&gt;The problem&lt;/h2&gt;
&lt;p&gt;Even if I'm an Italian citizen and I live in Italy, a few days ago I received this email from them:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2020/02/google-data-controller-email.png"&gt;&lt;img alt="google data controller" src="https://www.andreagrandi.it/images/2020/02/google-data-controller-email.png" width="90%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;What's wrong with it?&lt;/h2&gt;
&lt;p&gt;The point is that I'm an &lt;strong&gt;Italian citizen&lt;/strong&gt;, living in &lt;strong&gt;Italy&lt;/strong&gt;. 
I &lt;strong&gt;have nothing to do with UK&lt;/strong&gt; (even if I lived there for a few years in the past, my account was created from Italy).&lt;/p&gt;
&lt;p&gt;Why do they mention "UK leaving EU" to me, if I don't live in UK?&lt;/p&gt;
&lt;p&gt;I tried to contact them multiple times on their &lt;a href="https://twitter.com/Google"&gt;@Google&lt;/a&gt; account on Twitter, but I got no reply at all. I tried to search online and it looks like I'm not alone, they are doing this to many other people: &lt;a href="https://support.google.com/accounts/thread/29317992?hl=en&amp;amp;authuser=1"&gt;https://support.google.com/accounts/thread/29317992?hl=en&amp;amp;authuser=1&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Looking for help&lt;/h2&gt;
&lt;p&gt;What should I do? Is this legally allowed?&lt;/p&gt;
&lt;p&gt;If there was an easy way to complain with them, I would have done it already, but I've tried to search on their website 
(even googling it... no pun intended) but &lt;strong&gt;I couldn't find a single contact form&lt;/strong&gt; to report this issue and of course &lt;strong&gt;they are ignoring&lt;/strong&gt; both Twitter and that forum I linked previously.&lt;/p&gt;
&lt;p&gt;Should I &lt;strong&gt;report them&lt;/strong&gt; to the &lt;strong&gt;Privacy Authority&lt;/strong&gt;? If yes, how?&lt;/p&gt;
&lt;h2&gt;Full text of the email&lt;/h2&gt;
&lt;p&gt;Here is the full text of the email I received:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;We’re improving our Terms of Service and making them easier for you to understand. 
The changes will take effect on 31 March 2020, and they won’t impact the way that you use 
Google services. And, because the United Kingdom (UK) is leaving the European Union (EU), 
Google LLC will now be the service provider and the data controller responsible for your 
information and for complying with applicable privacy laws for UK consumer users.

For more details, we’ve provided a summary of the key changes and Frequently asked questions. 
And the next time that you visit Google, you’ll have the chance to review and accept the new Terms. 
At a glance, here’s what this update means for you:

•   Improved readability: While our Terms remain a legal document, we’ve done our best to make them 
    easier to understand, including by adding links to useful information and providing definitions.
•   Better communication: We’ve clearly explained when we’ll make changes to our services 
    (like adding or removing a feature) and when we’ll restrict or end a user’s access. 
    And we’ll do more to notify you when a change negatively impacts your experience on our services.
•   Adding Google Chrome, Google Chrome OS and Google Drive to the Terms: Our improved Terms now 
    cover Google Chrome, Google Chrome OS and Google Drive, which also have service-specific terms 
    and policies to help you understand what’s unique to those services.
•   Your service provider and data controller is now Google LLC: Because the UK is leaving the EU, 
    we’ve updated our Terms so that a United States-based company, Google LLC, is now your service 
    provider instead of Google Ireland Limited. Google LLC will also become the data controller 
    responsible for your information and complying with applicable privacy laws. 
    We’re making similar changes to the Terms of Service for YouTube, YouTube Paid Services and 
    Google Play. These changes to our Terms and privacy policy don’t affect your privacy settings 
    or the way that we treat your information (see the privacy policy for details). 
    As a reminder, you can always visit your Google Account to review your privacy settings and 
    manage how your data is used.

If you’re the guardian of a child under the age required to manage their own Google Account and 
you use Family Link to manage their use of Google services, please note that when you accept 
our new Terms, you do so on their behalf as well, and you may want to discuss these changes with them.

And of course, if you don’t agree to our new Terms and what we can expect from each other as you 
use our services, you can find more information about your options in our Frequently asked questions.

Thank you for using Google’s services.
Your Google team
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 25 Feb 2020 18:30:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2020-02-25:/2020/02/25/google-is-moving-eu-citizens-data-to-us/</guid><category>Privacy</category><category>privacy</category><category>google</category><category>gdpr</category><category>eu</category><category>brexit</category><category>citizens</category><category>data</category><category>controller</category></item><item><title>How to deploy a static website to Github Pages using CircleCI</title><link>https://www.andreagrandi.it/2019/02/24/how-to-deploy-static-website-github-pages-circleci/</link><description>&lt;p&gt;Since I created my blog with a static pages generator, I've been using TravisCI to automate the pages build and deployment.
My desire to learn something new (we are using CircleCI at work, but I never configured it from scratch) and the recent news about
TravisCI &lt;a href="https://blog.travis-ci.com/2019-01-23-travis-ci-joins-idera-inc"&gt;acquisition&lt;/a&gt; and employees &lt;a href="https://twitter.com/alicegoldfuss/status/1098604563664420865"&gt;layoff&lt;/a&gt;, led me to think about moving to a different service.&lt;/p&gt;
&lt;h2&gt;Github Pages&lt;/h2&gt;
&lt;p&gt;Every account on Github can use a special repository to publish static pages. In my case, since I have &lt;code&gt;github.com/andreagrandi&lt;/code&gt;, my special repository is
named &lt;code&gt;github.com/andreagrandi.github.io&lt;/code&gt;. Once I publish my pages there, they will be accessible from &lt;code&gt;https://andreagrandi.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You will need to use the &lt;strong&gt;master&lt;/strong&gt; branch of the special repository directly and not the &lt;strong&gt;gh-pages&lt;/strong&gt; branch which is available to each repository.&lt;/p&gt;
&lt;h2&gt;CircleCI&lt;/h2&gt;
&lt;p&gt;CircleCI is a very flexible and powerful continuous integration tool, which is also &lt;strong&gt;free&lt;/strong&gt; for open source projects. As long as your static website is located on a public repository on Github, you won't have to pay anything to use it. In my case, the surce code of this website is available at &lt;a href="https://github.com/andreagrandi/andreagrandi.it"&gt;https://github.com/andreagrandi/andreagrandi.it&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Configuration&lt;/h3&gt;
&lt;p&gt;You can find the complete configuration at &lt;a href="https://github.com/andreagrandi/andreagrandi.it/blob/master/.circleci/config.yml"&gt;this address&lt;/a&gt;.
The only value you won't find is &lt;strong&gt;GH_TOKEN&lt;/strong&gt;. You need to generate this token on Github, at this address: &lt;a href="https://github.com/settings/tokens"&gt;https://github.com/settings/tokens&lt;/a&gt;. Give it a nice description like "CircleCI deployment token", select &lt;strong&gt;repo&lt;/strong&gt; scope and finally click &lt;strong&gt;Generate token&lt;/strong&gt; button. This token will be used to &lt;code&gt;git push...&lt;/code&gt;
your pages once they are built. Please remember to keep this token &lt;strong&gt;secret&lt;/strong&gt; and not to publish it anywhere.&lt;/p&gt;
&lt;p&gt;In my configuration you may notice that I'm using &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; static websites generator, but apart from a few changes, the structure of the configuration should be very similar even if you use Jekill, Hugo etc... it doesn't really matter how you generate the pages, the &lt;strong&gt;deployment phase will be the same&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;Deployment script&lt;/h3&gt;
&lt;p&gt;You will notice that there is a complete bash script embedded in the CircleCI configuration. This script configures git, fetches the existing &lt;code&gt;andreagrandi.github.io&lt;/code&gt; repository,
and sync the built pages with the existing ones (this avoid creating a commit which contains all the pages so it will contain just the added content). Once the commit is made, the script will finally push the changes to the repository.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; regardless of CircleCI settings, the deployment will only happens if we are pushing (or merging a pull request) to &lt;strong&gt;master&lt;/strong&gt; (&lt;code&gt;if [ "${CIRCLE_BRANCH}" = "master" ]; then&lt;/code&gt;) and it will actually commit and push pages only if there is something new to commit (&lt;code&gt;if git commit -m "CircleCI build $CIRCLE_BUILD_NUM pushed to Github Pages" ; then&lt;/code&gt;). For example if I'm just updating something in the CircleCI configuration, which doesn't change anything in the content, the pages won't be deployed again.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;My first impression of CircleCI is that is faster than TravisCI and this means that I can publish my content more quickly. The possibility of using Docker containers as base image is really powerful and in more complex scenarios we can reproduce the building environment locally on our machine. If you have any advices about how to improve my build script, feel free to leave a comment here.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 24 Feb 2019 11:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2019-02-24:/2019/02/24/how-to-deploy-static-website-github-pages-circleci/</guid><category>Web</category><category>ci</category><category>circleci</category><category>github</category><category>static</category><category>website</category><category>deploy</category></item><item><title>Skipping tests depending on the Python version</title><link>https://www.andreagrandi.it/2019/02/21/skipping-tests-depending-python-version/</link><description>&lt;p&gt;Sometimes we want to run certain tests only on a specific version of Python.&lt;/p&gt;
&lt;p&gt;Suppose you are migrating a large project from Python 2 to Python 3 and you know in advance that certain tests won't run
under Python 3.&lt;/p&gt;
&lt;p&gt;Chances are that during the migration you are already using the &lt;a href="https://pythonhosted.org/six/"&gt;six&lt;/a&gt; library. The &lt;strong&gt;six&lt;/strong&gt; libraries have
two boolean properties which are initialised to &lt;code&gt;True&lt;/code&gt; depending on the Python version which is being used: &lt;code&gt;PY2&lt;/code&gt; when running under Python 2
and &lt;code&gt;PY3&lt;/code&gt; when running under Python 3.&lt;/p&gt;
&lt;p&gt;This library, combined with the &lt;strong&gt;skipIf&lt;/strong&gt; method of &lt;a href="https://docs.python.org/3/library/unittest.html#skipping-tests-and-expected-failures"&gt;unittest library&lt;/a&gt;
can be used to easily skip tests when using Python 3:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;six&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unittest&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyTestCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;


    &lt;span class="nd"&gt;@unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;skipIf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;six&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PY3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not compatible with Python 3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_example&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# This test won&amp;#39;t run under Python 3&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Credits&lt;/h2&gt;
&lt;p&gt;Thanks to my colleague &lt;strong&gt;&lt;a href="https://github.com/valnico"&gt;Nicola&lt;/a&gt;&lt;/strong&gt; for giving me the inspiration to write this post.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 21 Feb 2019 20:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2019-02-21:/2019/02/21/skipping-tests-depending-python-version/</guid><category>Python</category><category>python</category><category>test</category><category>programming</category><category>software</category><category>development</category><category>testing</category></item><item><title>Installing Python and virtualenv on MacOS</title><link>https://www.andreagrandi.it/2018/12/19/installing-python-and-virtualenv-on-osx/</link><description>&lt;p&gt;How to install Python and virtualenv on MacOS&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 19 Dec 2018 15:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2018-12-19:/2018/12/19/installing-python-and-virtualenv-on-osx/</guid><category>Python</category><category>python</category><category>osx</category><category>programming</category><category>software</category><category>development</category><category>macos</category><category>virtualenv</category><category>venv</category><category>version</category><category>installing</category><category>installation</category><category>brew</category><category>mkvirtualenv</category><category>virtualenvwrapper</category></item><item><title>Why I mentor on Exercism.io</title><link>https://www.andreagrandi.it/2018/11/04/why-i-mentor-on-exercism/</link><description>&lt;p&gt;Exercism (&lt;a href="https://exercism.io"&gt;https://exercism.io&lt;/a&gt;) is a platform that has been created to help people improving their coding skills, thanks to the volunteers mentoring the students. There are tracks for almost all the popular languages and each track has coding tests that the students can download, solve offline using their preferred editor, and test the solution against the provided unit tests. Once the solution is ready to be reviewed (or even if it's not complete but the student needs help), it can be submitted to the website and it will go in a queue where the first available mentor will pick it and start mentoring.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;service is free&lt;/strong&gt; to use for all the students and &lt;strong&gt;the mentors are all volunteers&lt;/strong&gt; (this doesn't mean that the platform doesn't have any costs. If you are curious about the resources needed to keep the platform alive, you can give a look at &lt;a href="https://www.reddit.com/r/Python/comments/9tugvn/exercismio_needs_python_mentors/e8zy5mq/"&gt;this answer on Reddit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When I found out about the platform, I decided to use it (as student) to &lt;strong&gt;improve my Go coding skills&lt;/strong&gt;. I must say that I've been learning a lot from the mentors and some of them are putting a lot of effort to give you all the possible advices to improve your coding style. In a single exercise once, I learnt at least five things about Go I didn't know before!&lt;/p&gt;
&lt;p&gt;I've been a Python developer (professionally) for the last 5 years, but I've never considered myself an "expert". I decided to give it a try with mentoring, because I felt I wanted to &lt;strong&gt;give something back to the community&lt;/strong&gt;, so I registered as mentor too and started mentoring in the Python track.&lt;/p&gt;
&lt;p&gt;The first surprise has been that mentoring other students, I was probably learning more than how much I was teaching. First of all, once you already know how to solve a problem, it's always interesting to look at other possible solutions. I've found sometimes that students were providing better (more concise and readable) solutions than mine. Last but not least, before advising someone about conding style or a more idiomatic solution, I always double check things from different sources. There is nothing wrong making mistakes, especially if you are learning... but it would be damaging for the student if I was teaching them something wrong, so I need to be sure about what I say. This of course makes me study, even the basic things, again and again and at the end of the day, my skills are better too.&lt;/p&gt;
&lt;p&gt;Once you join the mentors group, you are invited to a private Slack where you can count on the help of other mentors (we have channels for each track/language) or ask questions. So, if you are not sure about something, you can always ask around.&lt;/p&gt;
&lt;p&gt;If my story and experience convinced you, &lt;strong&gt;Exercism is looking for more mentors!&lt;/strong&gt; The more we have available, the less time the students have to wait in a queue to be mentored. You can find all the instructions at this address &lt;a href="https://mentoring.exercism.io/"&gt;https://mentoring.exercism.io&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 04 Nov 2018 13:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2018-11-04:/2018/11/04/why-i-mentor-on-exercism/</guid><category>Python</category><category>python</category><category>mentoring</category><category>programming</category><category>software</category><category>development</category><category>exercism</category><category>student</category></item><item><title>Using ipdb with Python 3.7.x breakpoint</title><link>https://www.andreagrandi.it/2018/10/16/using-ipdb-with-python-37-breakpoint/</link><description>&lt;p&gt;Python 3.7.x introduced a &lt;a href="https://docs.python.org/3/whatsnew/3.7.html#pep-553-built-in-breakpoint"&gt;new method to insert a breakpoint&lt;/a&gt; in the code.
Before Python 3.7.x to insert a debugging point we had to write &lt;code&gt;import pdb; pdb.set_trace()&lt;/code&gt; which honestly I could never remember (and I also created a snippet on VS Code to auto complete it).&lt;/p&gt;
&lt;p&gt;Now you can just write &lt;code&gt;breakpoint()&lt;/code&gt; that's it!&lt;/p&gt;
&lt;p&gt;Now... the only problem is that by default that command will use &lt;strong&gt;pdb&lt;/strong&gt; which is not exactly the best debugger you can have. I usually use &lt;strong&gt;ipdb&lt;/strong&gt; but there wasn't an intuitive way of using it... and no, just installing it in your virtual environment, it won't be used by default.&lt;/p&gt;
&lt;p&gt;How to use it then? It's very simple. The new debugging command will read an environment variable named &lt;strong&gt;PYTHONBREAKPOINT&lt;/strong&gt;. If you set it properly, you will be able to use ipdb instead of pdb.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;export PYTHONBREAKPOINT=ipdb.set_trace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At this point, any time you use &lt;code&gt;breakpoint()&lt;/code&gt; in your code, &lt;strong&gt;ipdb&lt;/strong&gt; will be used instead of &lt;strong&gt;pdb&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c"&gt;https://hackernoon.com/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 16 Oct 2018 22:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2018-10-16:/2018/10/16/using-ipdb-with-python-37-breakpoint/</guid><category>Python</category><category>python</category><category>debugging</category><category>programming</category><category>software</category><category>development</category></item><item><title>Keybase: PGP encryption made easy</title><link>https://www.andreagrandi.it/2017/10/21/keybase-pgp-encryption-made-easy/</link><description>&lt;p&gt;Using PGP can be quite hard, even if you have a lot of experience with computers.
By the way encryption is what gives us privacy and permits us to safely transmit information
and for this reason it should be easy to use, for everyone.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://keybase.io"&gt;Keybase&lt;/a&gt; really makes encryption easy to use.&lt;/p&gt;
&lt;h3&gt;PGP identity&lt;/h3&gt;
&lt;p&gt;When Keybase was launched it was mainly a wrapper for PGP commands
to encrypt and decrypt a message for a certain user, but it also introduced a very nice
chain of trust.&lt;/p&gt;
&lt;p&gt;In Keybase it's possible to either generate a new PGP key or import an existing one
but the most important thing is being able to verify our own identity using multiple proofs.&lt;/p&gt;
&lt;p&gt;Many of us have a personal blog, a Twitter or Facebook accounts, a GitHub account etc...
All these accounts combined together make our online identity.&lt;/p&gt;
&lt;p&gt;Every Keybase account can be verified by other online identities. In Keybase
you don't just say "I'm Andrea Grandi, this is my PGP key...". In Keybase you
can link your existing online accounts to your Keybase account and show additional
proofs of your identity.&lt;/p&gt;
&lt;p&gt;Unless an attacker controls all your social accounts, they cannot impersonate and verify
themselves as if they were you.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2017/10/keybase_identity.png"&gt;&lt;img alt="keybase identity" src="https://www.andreagrandi.it/images/2017/10/keybase_identity.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you are on Keybase, other users can look for you even using your GitHub or Twitter username
without having to know your email address or Keybase username. This concept can be
very useful in some situations, we will see it later.&lt;/p&gt;
&lt;h3&gt;Encrypted Filesystem&lt;/h3&gt;
&lt;p&gt;One of the first features launched by Keybase was their encrypted filesystem.
There is a virtual folder located at &lt;strong&gt;/keybase&lt;/strong&gt; (on OSX/Linux or k:\keybase on Windows)
where you will find at least three other folders: &lt;strong&gt;public&lt;/strong&gt;, &lt;strong&gt;private&lt;/strong&gt;, &lt;strong&gt;team&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;Public folders&lt;/h4&gt;
&lt;p&gt;Anything you place inside the /public folder can be accessed by any Keybase user and it's
automatically signed. Every user public folder/file can be accessed using their Keybase username,
like for example &lt;strong&gt;/keybase/public/andreagrandi/hello.txt&lt;/strong&gt; but you can also use any other identity like
&lt;strong&gt;/keybase/public/andreagrandi@github/hello.txt&lt;/strong&gt; or &lt;strong&gt;/keybase/public/andreagrandi@twitter/hello.txt&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is very useful if you only know a person on Twitter (or GitHub etc...) and you want to
share a file with them (or send a message, as we will see later) but you don't follow each other
and you can't reach them privately.&lt;/p&gt;
&lt;p&gt;This is a public folder example of one of the Keybase developers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2017/10/keybase_chris_folder.png"&gt;&lt;img alt="keybase chris folder" src="https://www.andreagrandi.it/images/2017/10/keybase_chris_folder.png" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can put whatever you want in these folders: your public PGP key, your official avatar,
your Signal fingerprint etc... the other users will access these files with the assurance they
haven't been changed by anyone else in the middle.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; please keep in mind that Keybase doesn't work like Dropbox or similar. Files are not
synced between your devices and Keybase servers. Files are streamed on demand, so &lt;strong&gt;you won't be able to access these files without a working Internet connection&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;Private folders&lt;/h4&gt;
&lt;p&gt;Hey but... where is the encryption here?! Whatever you put inside your &lt;strong&gt;private&lt;/strong&gt;
folder can only be read by you and only you. &lt;strong&gt;Not even Keybase employees can access the content of your files&lt;/strong&gt;,
because they are encrypted before leaving your devices and decrypted on demand
when you want to access them.&lt;/p&gt;
&lt;p&gt;Do you want to share files with &lt;strong&gt;anotheruser&lt;/strong&gt;? No problem. Just create a file inside &lt;strong&gt;/keybase/private/andreagrandi,anotheruser&lt;/strong&gt;
(the folder &lt;strong&gt;andreagrandi,anotheruser&lt;/strong&gt; will implicitely exist already) and that file will only be readable by you and &lt;strong&gt;anotheruser&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;Security and other information&lt;/h4&gt;
&lt;p&gt;Keybase employes only have access to: 1) your top level folder names (like: "andreagrandi,anotheruser"),
2) when and for how long you are reading/writing, 3) how much space you are using.&lt;/p&gt;
&lt;p&gt;They won't be able to access the content of your files and not even the files or folders names.&lt;/p&gt;
&lt;p&gt;Every user initially had 10GB quota available, but a few hints (including one of their &lt;a href="https://www.andreagrandi.it/images/2017/10/teams-splash-announcement.png"&gt;recent screenshots&lt;/a&gt;)
say that now &lt;strong&gt;users have 250GB available&lt;/strong&gt; to store their files.&lt;/p&gt;
&lt;p&gt;You can find more technical information about Keybase encrypted folders in this article: &lt;a href="https://keybase.io/docs/kbfs"&gt;https://keybase.io/docs/kbfs&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Encrypted Chat&lt;/h3&gt;
&lt;p&gt;A few months ago Keybase introduced the encrypted chat. Messages between users
are &lt;strong&gt;end to end encrypted&lt;/strong&gt; and cannot be read by anyone else, not even having access to Keybase
servers.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2017/10/keybase_chat.png"&gt;&lt;img alt="kybase chat" src="https://www.andreagrandi.it/images/2017/10/keybase_chat.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;A better address book&lt;/h4&gt;
&lt;p&gt;When we use services like WhatsApp or Signal, we are forced to share our telephone number if we want
the other person to be able to contact us.&lt;/p&gt;
&lt;p&gt;On Keybase I don't need to share my telephone number. Anyone can reach me using one of my online
identities: &lt;strong&gt;andreagrandi@twitter&lt;/strong&gt;, &lt;strong&gt;andreagrandi@github&lt;/strong&gt; etc...&lt;/p&gt;
&lt;p&gt;You can even send a message to a person who is &lt;strong&gt;not on Keybase yet&lt;/strong&gt;: if you send a message to
randomuser@twitter, when randomuser joins Keybase and verify their Twitter account, the message
will be encrypted for them and will be safely delivered.&lt;/p&gt;
&lt;h4&gt;Security&lt;/h4&gt;
&lt;p&gt;Keybase doesn't use PGP to encrypt chat or files. Transmitting the key across all devices
wouldn't be safe so each message is encrypted using the public key of every device connected
to the account.&lt;/p&gt;
&lt;h4&gt;Command line&lt;/h4&gt;
&lt;p&gt;Keybase works from the command line too. There is no need to use the graphic
client to send a message to another user, you can do something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;keybase&lt;span class="w"&gt; &lt;/span&gt;chat&lt;span class="w"&gt; &lt;/span&gt;send&lt;span class="w"&gt; &lt;/span&gt;andreagrandi&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello mate!&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can integrate messages in any script and it's even available a JSON API:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;keybase&lt;span class="w"&gt; &lt;/span&gt;chat&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;api
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more details you can have a look a this blog post on their website: &lt;a href="https://keybase.io/blog/keybase-chat"&gt;https://keybase.io/blog/keybase-chat&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Teams&lt;/h3&gt;
&lt;p&gt;Keybase has recently introduced Teams feature. The Chat becomes more similar to Slack, but with the difference that
only team members can read the content of messages and files: the server only knows about team names and users, nobody else can
access the content.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2017/10/teams-splash-announcement.png"&gt;&lt;img alt="teams announcement" src="https://www.andreagrandi.it/images/2017/10/teams-splash-announcement.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It's important to mention that in Keybase there aren't private channels like there are in Slack: if a team wants to have
channels accessible only from a restricted group of users, the admin needs to create a sub team. For example if you have a
team called &lt;strong&gt;keybaselovers&lt;/strong&gt; you can create a sub team for admins only called &lt;strong&gt;keybaselovers.admins&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Teams have a dedicated encrypter folder that you will find under &lt;strong&gt;/keybase/team/keybaselovers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At the moment the features available from the UI are quite limited and are only available from the command line. In the next
weeks these features will be available from the UI too. In the mean time you can have a look at the commandline help:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;keybase&lt;span class="w"&gt; &lt;/span&gt;team&lt;span class="w"&gt; &lt;/span&gt;--help&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# for admin&amp;#39;ing teams&lt;/span&gt;
keybase&lt;span class="w"&gt; &lt;/span&gt;chat&lt;span class="w"&gt; &lt;/span&gt;--help&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# for admin&amp;#39;ing chat channels&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Create a Team&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;keybase&lt;span class="w"&gt; &lt;/span&gt;team&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;keybaselovers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Add a user to a Team&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;keybase&lt;span class="w"&gt; &lt;/span&gt;team&lt;span class="w"&gt; &lt;/span&gt;add-member&lt;span class="w"&gt; &lt;/span&gt;keybaselovers&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="o"&gt;=&lt;/span&gt;alice&lt;span class="w"&gt; &lt;/span&gt;--role&lt;span class="o"&gt;=&lt;/span&gt;writer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more information you can have a look at the official announcement page: &lt;a href="https://keybase.io/blog/introducing-keybase-teams"&gt;https://keybase.io/blog/introducing-keybase-teams&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Git&lt;/h3&gt;
&lt;p&gt;Sometimes we have the need to store private information in a safe way and we want to be sure that nobody else is
able to access these information.&lt;/p&gt;
&lt;p&gt;Latest feature that has been added to Keybase is &lt;strong&gt;encrypted Git repositories&lt;/strong&gt;. They are like normal GitHub
repositories, but their content is stored in a safer way.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2017/10/keybase_git.png"&gt;&lt;img alt="keybase git" src="https://www.andreagrandi.it/images/2017/10/keybase_git.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Privacy and Security&lt;/h4&gt;
&lt;p&gt;What is the &lt;strong&gt;difference&lt;/strong&gt; with GitHub private repositories? In GitHub a private repository is used to store information that
only our account can access, but the files are accessible in plain text by GitHub employees. With encrypted Git repositories
instead, the &lt;strong&gt;information are encrypted before they leave our device&lt;/strong&gt; and they are stored encrypted. Nobody, without having our
private key can read them, not even Keybase employees.&lt;/p&gt;
&lt;h4&gt;Teams and Quota&lt;/h4&gt;
&lt;p&gt;Encrypted Git repositories are of course available for teams too. Creating a team repository, it will be available to
all the members of the team.&lt;/p&gt;
&lt;p&gt;Both teams and single users have &lt;strong&gt;100GB of space&lt;/strong&gt; available (which is separate from Folders quota).&lt;/p&gt;
&lt;h4&gt;Usage&lt;/h4&gt;
&lt;p&gt;If I create my personal repository called &lt;strong&gt;documents&lt;/strong&gt; all I have to do to clone it and use it is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;keybase://private/andreagrandi/documents
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and I can use it as a normal git repository. Every time I commit and push something, the content will be &lt;strong&gt;signed and encrypted&lt;/strong&gt;
and only available to the repository owner (which is me) or to the whole team if it's a team repository.&lt;/p&gt;
&lt;p&gt;For more information, please have a look at the official announcement here: &lt;a href="https://keybase.io/blog/encrypted-git-for-everyone"&gt;https://keybase.io/blog/encrypted-git-for-everyone&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Keybase is still in continuous development but it already offers a few interesting features which can help people
in their every day life. I strongly advise anyone to &lt;a href="https://keybase.io"&gt;&lt;strong&gt;get an account&lt;/strong&gt;&lt;/a&gt;, play with the available features and &lt;strong&gt;report any bug&lt;/strong&gt;
so the developers will be able to fix them and build an even better product. I can't wait to see the features they will
announce in the next months!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 21 Oct 2017 12:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2017-10-21:/2017/10/21/keybase-pgp-encryption-made-easy/</guid><category>HowTo</category><category>GnuPG</category><category>PGP</category><category>Security</category><category>Encryption</category><category>Keybase</category></item><item><title>Configuring an offline GnuPG master key and subkeys on YubiKey</title><link>https://www.andreagrandi.it/2017/09/30/configuring-offline-gnupg-masterkey-subkeys-on-yubikey/</link><description>&lt;p&gt;I've recently bought a &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey 4&lt;/a&gt; and 
decided to use it for GnuPG too, other than using it as hardware 2FA.&lt;/p&gt;
&lt;p&gt;I've also decided to make my GnuPG configuration much more safe, generating the &lt;strong&gt;master key&lt;/strong&gt;
on an &lt;strong&gt;offline&lt;/strong&gt; computer (in my case a simple RaspberryPi not connected to Internet) and &lt;strong&gt;generating a subkey&lt;/strong&gt;
that will be moved to my &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Disclaimer&lt;/h4&gt;
&lt;p&gt;Always think about what your &lt;strong&gt;threat model&lt;/strong&gt; is before deciding something is 100% safe for you.
I'm not claiming this setup/configuration is bullet proof. If you want to protect your GnuPG key from most of the hackers,
keyloggers and if you want to use it on different computers without ever compromising your secret key, this setup
can be what you are looking for. If you think you may be victim of a targeted state sponsored attack, I'm not sure this
setup could be enough.&lt;/p&gt;
&lt;h4&gt;Why keeping offline the master key?&lt;/h4&gt;
&lt;p&gt;If you only use your master key on a computer that never connects to Internet (I reckon you will want to update/patch it
from time to time, that's why we are going to keep the master key on an external USB key) you are at least safe from remote attacks.&lt;/p&gt;
&lt;h4&gt;Why using subkeys?&lt;/h4&gt;
&lt;p&gt;Your GnuPG master key is also your "identity" among every PGP user. If you loose your master key or if your key is compromised
you need to rebuild your identity and reputation from scratch. Instead, if a subkey is compromised, you can revoke the subkey (using your
master key) and generate a new subkey.&lt;/p&gt;
&lt;h4&gt;How a YubiKey makes things safer?&lt;/h4&gt;
&lt;p&gt;If you always use your subkey from a &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt;, it's very unlikely that your
private key can be stolen: it's impossible to read it from the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt; and if you loose your YubiKey
or if it's physically stolen, the attacker will still need your passphrase and your YubiKey PIN.&lt;/p&gt;
&lt;h3&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1 &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 USB keys (in theory you only need one, but I strongly suggest you have another one as backup)&lt;/li&gt;
&lt;li&gt;1 offline computer (a simple RaspberryPi with no Internet connection will be fine)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Initial setup&lt;/h3&gt;
&lt;p&gt;From now on, I will assume that you have prepared a computer for offline use (in my case I'm using a RaspberryPi 2 with
Raspbian) and you will type the next commands there and only there.&lt;/p&gt;
&lt;p&gt;Plug one of the &lt;strong&gt;USB key&lt;/strong&gt; (you can format it with VFAT for simplicity) in the offline computer and wait for the system to mount it.
At this point it should be mounted in a path like this: &lt;strong&gt;/media/AABB-BAAC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now set the GnuPG working directory and create it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ export GNUPGHOME=/media/AABB-BAAC/gnupghome
user@debian:~$ mkdir $GNUPGHOME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Second disclaimer&lt;/h4&gt;
&lt;p&gt;If you think your threat model doesn't include someone can hack your computer from remote,
you can ignore my advice and type these commands on your main laptop (at your own risk).&lt;/p&gt;
&lt;h4&gt;Note&lt;/h4&gt;
&lt;p&gt;For my own convenience, to write this tutorial I reproduced all these steps on my MacBook because it was easier to copy/paste
commands and outputs but I've tested it with the exact setup I'm describing, and it
should be compatible with OSX and Linux.
When you see something has been masked it's just to hide (from spam) things like my email or to protect the serial number
of my &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt;. Last but not least, the output shown here could not match exactly the one you get on your own PC and this also
depends on the GnuPG version you are using.&lt;/p&gt;
&lt;h3&gt;Generating the master key&lt;/h3&gt;
&lt;p&gt;The master key must be generated using the advanced mode, because by default when a new master key is generated, also a new subkey
is created with all the capabilities (Authentication + Signing + Encryption), while we want something different.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; PGP keys up to &lt;strong&gt;4096 bits&lt;/strong&gt; are only supported in &lt;strong&gt;YubiKey 4&lt;/strong&gt; models. If you have a &lt;strong&gt;YubiKey NEO&lt;/strong&gt; you must use
a &lt;strong&gt;2048 bits&lt;/strong&gt; key because it's the maximum size supported. Here you will create a PGP key with &lt;strong&gt;only
the Authentication capability&lt;/strong&gt;. If your GnuPG version doesn't allow this, choose "sign only", just don't
create the encryption capability at this time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg --expert --gen-key
gpg (GnuPG) 2.0.30; Copyright (C) 2015 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

gpg: directory `/media/AABB-BAAC/gnupghome&amp;#39; created
gpg: new configuration file `/media/AABB-BAAC/gnupghome/gpg.conf&amp;#39; created
gpg: WARNING: options in `/media/AABB-BAAC/gnupghome/gpg.conf&amp;#39; are not yet active during this run
gpg: keyring `/media/AABB-BAAC/gnupghome/secring.gpg&amp;#39; created
gpg: keyring `/media/AABB-BAAC/gnupghome/pubring.gpg&amp;#39; created
Please select what kind of key you want:
(1) RSA and RSA (default)
(2) DSA and Elgamal
(3) DSA (sign only)
(4) RSA (sign only)
(7) DSA (set your own capabilities)
(8) RSA (set your own capabilities)
Your selection? 8

Possible actions for a RSA key: Sign Certify Encrypt Authenticate
Current allowed actions: Sign Certify Encrypt

(S) Toggle the sign capability
(E) Toggle the encrypt capability
(A) Toggle the authenticate capability
(Q) Finished

Your selection? s

Possible actions for a RSA key: Sign Certify Encrypt Authenticate
Current allowed actions: Certify Encrypt

(S) Toggle the sign capability
(E) Toggle the encrypt capability
(A) Toggle the authenticate capability
(Q) Finished

Your selection? e

Possible actions for a RSA key: Sign Certify Encrypt Authenticate
Current allowed actions: Certify

(S) Toggle the sign capability
(E) Toggle the encrypt capability
(A) Toggle the authenticate capability
(Q) Finished

Your selection? q
RSA keys may be between 1024 and 4096 bits long.
What keysize do you want? (2048) 4096
Requested keysize is 4096 bits
Please specify how long the key should be valid.
        0 = key does not expire
    &amp;lt;n&amp;gt;  = key expires in n days
    &amp;lt;n&amp;gt;w = key expires in n weeks
    &amp;lt;n&amp;gt;m = key expires in n months
    &amp;lt;n&amp;gt;y = key expires in n years
Key is valid for? (0) 2y
Key expires at Wed 25 Sep 18:39:49 2019 BST
Is this correct? (y/N) y

GnuPG needs to construct a user ID to identify your key.

Real name: Andrea Grandi
Email address: user@email.com
Comment:
You selected this USER-ID:
    &amp;quot;Andrea Grandi &amp;lt;user@email.com&amp;gt;&amp;quot;

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o
You need a Passphrase to protect your secret key.

We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.
gpg: /media/AABB-BAAC/gnupghome/trustdb.gpg: trustdb created
gpg: key 2240402E marked as ultimately trusted
public and secret key created and signed.

gpg: checking the trustdb
gpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model
gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u
gpg: next trustdb check due at 2019-09-25
pub   4096R/2240402E 2017-09-25 [expires: 2019-09-25]
    Key fingerprint = 7D4C 4090 DB50 1693 4614  F6FC 6206 9DE9 2240 402E
uid       [ultimate] Andrea Grandi &amp;lt;user@email.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; please remember to save your passphrase in a safe place. Choose something you
can remember because you will need it every time you need to sign, encrypt or decrypt something.&lt;/p&gt;
&lt;h3&gt;Creating a revocation certificate&lt;/h3&gt;
&lt;p&gt;It's very important to create a revocation certificate to be used if and when 
in the future you want to change your master key and revoke the existing one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg --gen-revoke 2240402E &amp;gt; 2240402E-revocation-certificate.asc

sec  4096R/2240402E 2017-09-25 Andrea Grandi &amp;lt;user@email.com&amp;gt;

Create a revocation certificate for this key? (y/N) y
Please select the reason for the revocation:
0 = No reason specified
1 = Key has been compromised
2 = Key is superseded
3 = Key is no longer used
Q = Cancel
(Probably you want to select 1 here)
Your decision? 3
Enter an optional description; end it with an empty line:
&amp;gt;
Reason for revocation: Key is no longer used
(No description given)
Is this okay? (y/N) y

You need a passphrase to unlock the secret key for
user: &amp;quot;Andrea Grandi &amp;lt;user@email.com&amp;gt;&amp;quot;
4096-bit RSA key, ID 2240402E, created 2017-09-25

ASCII armored output forced.
Revocation certificate created.

Please move it to a medium which you can hide away; if Mallory gets
access to this certificate he can use it to make your key unusable.
It is smart to print this certificate and store it away, just in case
your media become unreadable.  But have some caution:  The print system of
your machine might store the data and make it available to others!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Creating Encryption subkey&lt;/h3&gt;
&lt;p&gt;To create a subkey we need to edit the existing key (please note that &lt;strong&gt;2240402E&lt;/strong&gt;
is the last 8 chars from the fingerprint of the previously generated master key)
and specify we want to create an Encryption only key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg --edit-key 2240402E
gpg (GnuPG) 2.0.30; Copyright (C) 2015 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Secret key is available.

pub  4096R/2240402E  created: 2017-09-25  expires: 2019-09-25  usage: C
                    trust: ultimate      validity: ultimate
[ultimate] (1). Andrea Grandi &amp;lt;user@email.com&amp;gt;

gpg&amp;gt; addkey
Key is protected.

You need a passphrase to unlock the secret key for
user: &amp;quot;Andrea Grandi &amp;lt;user@email.com&amp;gt;&amp;quot;
4096-bit RSA key, ID 2240402E, created 2017-09-25

Please select what kind of key you want:
(3) DSA (sign only)
(4) RSA (sign only)
(5) Elgamal (encrypt only)
(6) RSA (encrypt only)
Your selection? 6
RSA keys may be between 1024 and 4096 bits long.
What keysize do you want? (2048) 4096
Requested keysize is 4096 bits
Please specify how long the key should be valid.
        0 = key does not expire
    &amp;lt;n&amp;gt;  = key expires in n days
    &amp;lt;n&amp;gt;w = key expires in n weeks
    &amp;lt;n&amp;gt;m = key expires in n months
    &amp;lt;n&amp;gt;y = key expires in n years
Key is valid for? (0) 2y
Key expires at Wed 25 Sep 18:47:21 2019 BST
Is this correct? (y/N) y
Really create? (y/N) y
We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.

pub  4096R/2240402E  created: 2017-09-25  expires: 2019-09-25  usage: C
                    trust: ultimate      validity: ultimate
sub  4096R/01731555  created: 2017-09-25  expires: 2019-09-25  usage: E
[ultimate] (1). Andrea Grandi &amp;lt;user@email.com&amp;gt;

gpg&amp;gt; save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Export a backup of the secret keys&lt;/h3&gt;
&lt;p&gt;It's very important to export a backup of the secret keys at this point.
Writing the secret subkey to the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt; is a destructive process: keys are moved
to the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt;, they are not copied.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg --export-secret-key 2240402E &amp;gt; 2240402E-secret.pgp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this backup includes both the secret master key and the secret subkey.
Please remember to &lt;strong&gt;save a backup of this key&lt;/strong&gt; on a couple of separate USB keys: you will need
this keys to generate future subkeys and/or to revoke the existing ones.&lt;/p&gt;
&lt;h3&gt;Programming the YubiKey with all GnuPG keys&lt;/h3&gt;
&lt;p&gt;We have previously created the &lt;strong&gt;master key&lt;/strong&gt; and the &lt;strong&gt;encryption subkey&lt;/strong&gt;. Now we will
create the &lt;strong&gt;authentication&lt;/strong&gt; and &lt;strong&gt;signing&lt;/strong&gt; keys directly on the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt; (we don't
need to have a copy of these keys) and we will move the secret encryption key
to the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg --edit-key 2240402E
gpg (GnuPG) 2.0.30; Copyright (C) 2015 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Secret key is available.

pub  4096R/2240402E  created: 2017-09-25  expires: 2019-09-25  usage: C
                    trust: ultimate      validity: ultimate
sub  4096R/01731555  created: 2017-09-25  expires: 2019-09-25  usage: E
[ultimate] (1). Andrea Grandi &amp;lt;user@email.com&amp;gt;

gpg&amp;gt; addcardkey
Signature key ....: [none]
Encryption key....: [none]
Authentication key: [none]

Please select the type of key to generate:
(1) Signature key
(2) Encryption key
(3) Authentication key
Your selection? 1

What keysize do you want for the Signature key? (4096)
Key is protected.

You need a passphrase to unlock the secret key for
user: &amp;quot;Andrea Grandi &amp;lt;user@email.com&amp;gt;&amp;quot;
4096-bit RSA key, ID 2240402E, created 2017-09-25

Please specify how long the key should be valid.
        0 = key does not expire
    &amp;lt;n&amp;gt;  = key expires in n days
    &amp;lt;n&amp;gt;w = key expires in n weeks
    &amp;lt;n&amp;gt;m = key expires in n months
    &amp;lt;n&amp;gt;y = key expires in n years
Key is valid for? (0) 2y
Key expires at Wed 25 Sep 18:50:42 2019 BST
Is this correct? (y/N) y
Really create? (y/N) y

pub  4096R/2240402E  created: 2017-09-25  expires: 2019-09-25  usage: C
                    trust: ultimate      validity: ultimate
sub  4096R/01731555  created: 2017-09-25  expires: 2019-09-25  usage: E
sub  4096R/771B0554  created: 2017-09-25  expires: 2019-09-25  usage: S
[ultimate] (1). Andrea Grandi &amp;lt;user@email.com&amp;gt;

gpg&amp;gt; addcardkey
Signature key ....: 6FAB DC46 1847 3550 3769  2D32 0DE1 36B4 771B 0554
Encryption key....: [none]
Authentication key: [none]

Please select the type of key to generate:
(1) Signature key
(2) Encryption key
(3) Authentication key
Your selection? 3

What keysize do you want for the Authentication key? (4096)
Key is protected.

You need a passphrase to unlock the secret key for
user: &amp;quot;Andrea Grandi &amp;lt;user@email.com&amp;gt;&amp;quot;
4096-bit RSA key, ID 2240402E, created 2017-09-25

Please specify how long the key should be valid.
        0 = key does not expire
    &amp;lt;n&amp;gt;  = key expires in n days
    &amp;lt;n&amp;gt;w = key expires in n weeks
    &amp;lt;n&amp;gt;m = key expires in n months
    &amp;lt;n&amp;gt;y = key expires in n years
Key is valid for? (0) 2y
Key expires at Wed 25 Sep 18:54:51 2019 BST
Is this correct? (y/N) y
Really create? (y/N) y

pub  4096R/2240402E  created: 2017-09-25  expires: 2019-09-25  usage: C
                    trust: ultimate      validity: ultimate
sub  4096R/01731555  created: 2017-09-25  expires: 2019-09-25  usage: E
sub  4096R/771B0554  created: 2017-09-25  expires: 2019-09-25  usage: S
sub  4096R/A9B5334C  created: 2017-09-25  expires: 2019-09-25  usage: A
[ultimate] (1). Andrea Grandi &amp;lt;user@email.com&amp;gt;

gpg&amp;gt; toggle

sec  4096R/2240402E  created: 2017-09-25  expires: 2019-09-25
ssb  4096R/01731555  created: 2017-09-25  expires: never
ssb  4096R/771B0554  created: 2017-09-25  expires: 2019-09-25
                    card-no: 0006 05672181
ssb  4096R/A9B5334C  created: 2017-09-25  expires: 2019-09-25
                    card-no: 0006 05672181
(1)  Andrea Grandi &amp;lt;user@email.com&amp;gt;

gpg&amp;gt; key 1

sec  4096R/2240402E  created: 2017-09-25  expires: 2019-09-25
ssb* 4096R/01731555  created: 2017-09-25  expires: never
ssb  4096R/771B0554  created: 2017-09-25  expires: 2019-09-25
                    card-no: 0006 05672181
ssb  4096R/A9B5334C  created: 2017-09-25  expires: 2019-09-25
                    card-no: 0006 05672181
(1)  Andrea Grandi &amp;lt;user@email.com&amp;gt;

gpg&amp;gt; keytocard
Signature key ....: 6FAB DC46 1847 3550 3769  2D32 0DE1 36B4 771B 0554
Encryption key....: [none]
Authentication key: BD26 3AD8 985E CAB0 9F32  7307 DF7C F7C0 A9B5 334C

Please select where to store the key:
(2) Encryption key
Your selection? 2

You need a passphrase to unlock the secret key for
user: &amp;quot;Andrea Grandi &amp;lt;user@email.com&amp;gt;&amp;quot;
4096-bit RSA key, ID 01731555, created 2017-09-25


sec  4096R/2240402E  created: 2017-09-25  expires: 2019-09-25
ssb* 4096R/01731555  created: 2017-09-25  expires: never
                    card-no: 0006 05672181
ssb  4096R/771B0554  created: 2017-09-25  expires: 2019-09-25
                    card-no: 0006 05672181
ssb  4096R/A9B5334C  created: 2017-09-25  expires: 2019-09-25
                    card-no: 0006 05672181
(1)  Andrea Grandi &amp;lt;user@email.com&amp;gt;

gpg&amp;gt; save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Check public keys&lt;/h4&gt;
&lt;p&gt;Just to verify everything has been created correctly, we check the public keys.
We should see one &lt;strong&gt;pub&lt;/strong&gt; key and three &lt;strong&gt;sub&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg -k
/media/AABB-BAAC/gnupghome/pubring.gpg
--------------------------------
pub   4096R/2240402E 2017-09-25 [expires: 2019-09-25]
uid       [ultimate] Andrea Grandi &amp;lt;user@email.com&amp;gt;
sub   4096R/01731555 2017-09-25 [expires: 2019-09-25]
sub   4096R/771B0554 2017-09-25 [expires: 2019-09-25]
sub   4096R/A9B5334C 2017-09-25 [expires: 2019-09-25]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Check private keys&lt;/h4&gt;
&lt;p&gt;When we check the private keys we should see that one key is still local, marked as &lt;strong&gt;sec&lt;/strong&gt; (it's
the private key of the master key), while three other keys are marked as &lt;strong&gt;ssb&amp;gt;&lt;/strong&gt;
which means they have been moved to the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg -K
/media/AABB-BAAC/gnupghome/secring.gpg
--------------------------------
sec   4096R/2240402E 2017-09-25 [expires: 2019-09-25]
uid                  Andrea Grandi &amp;lt;user@email.com&amp;gt;
ssb&amp;gt;  4096R/01731555 2017-09-25
ssb&amp;gt;  4096R/771B0554 2017-09-25
ssb&amp;gt;  4096R/A9B5334C 2017-09-25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Import back secret keys from backup (only for multiple YubiKeys)&lt;/h4&gt;
&lt;p&gt;As previously said, when we write the encryption subkey to the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt;, the key
is &lt;strong&gt;moved&lt;/strong&gt; and not just copied, so we need to import back the secret key into
the keyring. It's important to have a backup of the subkey too, not because we need it
in case the key is compromised etc... but because we need it in case we want to write
multiple YubiKeys with the same encryption key, so that we have a backup key to use.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg --import &amp;lt; 2240402E-secret.pgp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Completely remove secret keys from laptop&lt;/h4&gt;
&lt;p&gt;Once you have programmed the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt; and you are sure the secret keys are
backed up on a couple of USB keys, you are ready to remove the secret keys from your laptop.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you don't need to remove anything if you have conducted the whole setup
on a spare offline PC (or on a RaspberryPi) because that's not your every day computer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg --delete-secret-key 2240402E
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Exporting the public PGP key&lt;/h3&gt;
&lt;p&gt;As you know, PGP keys are composed by a secret part and a public one. The public one
must be distributed publicly and it's the one people will use to encrypt messages directed
to you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg --armor --export 2240402E &amp;gt; 2240402E.asc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you have a personal blog/website I suggest to upload it there (for example mine
can be found here &lt;a href="https://www.andreagrandi.it/2240402E.asc"&gt;https://www.andreagrandi.it/2240402E.asc&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Change YubiKey PINs and complete configuration&lt;/h3&gt;
&lt;p&gt;Every &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt; is sold with a certain default configuration: there is a &lt;strong&gt;user PIN&lt;/strong&gt;
that is required every time we need to use the key to sign/decrypt something (in addition
to our passphrase) and there is an &lt;strong&gt;admin PIN&lt;/strong&gt; that is required every time we change
certain settings on the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The default values are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;user PIN: 123456&lt;/li&gt;
&lt;li&gt;admin PIN: 12345678&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I strongly recommend you to change them following this example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$ gpg --card-edit

Reader ...........: Yubico Yubikey 4 OTP U2F CCID
Application ID ...: D000000000000000000000000000000000
Version ..........: 2.1
Manufacturer .....: Yubico
Serial number ....: 012345678
Name of cardholder: [not set]
Language prefs ...: [not set]
Sex ..............: unspecified
URL of public key : [not set]
Login data .......: [not set]
Signature PIN ....: not forced
Key attributes ...: rsa4096 rsa4096 rsa4096
Max. PIN lengths .: 127 127 127
PIN retry counter : 3 0 3
Signature counter : 3
Signature key ....: 6FAB DC46 1847 3550 3769  2D32 0DE1 36B4 771B 0554
    created ....: 2017-09-25 17:50:37
Encryption key....: FC6F 40BC 4173 8D13 2D7C  E958 BCDC EA84 0173 1555
    created ....: 2017-09-25 17:47:09
Authentication key: BD26 3AD8 985E CAB0 9F32  7307 DF7C F7C0 A9B5 334C
    created ....: 2017-09-25 17:54:49
General key info..: sub  rsa4096/0DE136B4771B0554 2017-09-25 Andrea Grandi &amp;lt;user@email.com&amp;gt;
sec#  rsa4096/62069DE92240402E  created: 2017-09-25  expires: 2019-09-25
ssb&amp;gt;  rsa4096/BCDCEA8401731555  created: 2017-09-25  expires: 2019-09-25
                                card-no: 0006 05672181
ssb&amp;gt;  rsa4096/0DE136B4771B0554  created: 2017-09-25  expires: 2019-09-25
                                card-no: 0006 05672181
ssb&amp;gt;  rsa4096/DF7CF7C0A9B5334C  created: 2017-09-25  expires: 2019-09-25
                                card-no: 0006 05672181

gpg/card&amp;gt; admin
Admin commands are allowed

# Change the PIN and Admin PINs
gpg/card&amp;gt; passwd
gpg: OpenPGP card no. D000000000000000000000000000000000 detected

1 - change PIN
2 - unblock PIN
3 - change Admin PIN
4 - set the Reset Code
Q - quit

Your selection? 1
PIN changed.

1 - change PIN
2 - unblock PIN
3 - change Admin PIN
4 - set the Reset Code
Q - quit

Your selection? 3
PIN changed.

1 - change PIN
2 - unblock PIN
3 - change Admin PIN
4 - set the Reset Code
Q - quit

Your selection? q

# Make sure the PIN is entered before signing
gpg/card&amp;gt; forcesig

# Set the URL where the OpenPGP public key can be found.
gpg/card&amp;gt; url
URL to retrieve public key: https://www.andreagrandi.it/2240402E.asc

# Fetch the public key into the local keyring
gpg/card&amp;gt; fetch

gpg/card&amp;gt; quit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; when you want to use your &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt; on any computer (for example your work laptop)
you need to at least import your public PGP key into the keyring. If the key is not
read automatically, you may need to give it a refresh using this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;user@debian:~$&lt;span class="w"&gt; &lt;/span&gt;gpg&lt;span class="w"&gt; &lt;/span&gt;--card-status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Careful with PINs&lt;/h4&gt;
&lt;p&gt;Please remember that you can only digit a wrong user PIN for a maximum of three times.
After three time you will need to edit the &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt; (with &lt;strong&gt;gpg --card-edit&lt;/strong&gt;) become admin
and use the &lt;strong&gt;unblock PIN&lt;/strong&gt; option. If you digit the wrong admin PIN for three time, you will have
to follow a quite complicated procedure (explained at this address: &lt;a href="https://developers.yubico.com/ykneo-openpgp/ResetApplet.html"&gt;https://developers.yubico.com/ykneo-openpgp/ResetApplet.html&lt;/a&gt;)
and your &lt;a href="https://www.amazon.co.uk/Yubico-Y-158-YubiKey-4-Black/dp/B018Y1Q71M/ref=as_li_ss_tl?ie=UTF8&amp;amp;qid=1507054059&amp;amp;sr=8-1&amp;amp;keywords=yubico+4&amp;amp;linkCode=ll1&amp;amp;tag=andreagrandi-21&amp;amp;linkId=6da97357c6fe86ca94df918c172f6605"&gt;YubiKey&lt;/a&gt; will be reset with factory settings, deleting your PGP keys from it.&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;To write this tutorial I originally followed other articles online. The main ones are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.esev.com/blog/post/2015-01-pgp-ssh-key-on-yubikey-neo/"&gt;https://www.esev.com/blog/post/2015-01-pgp-ssh-key-on-yubikey-neo/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.josefsson.org/2014/06/23/offline-gnupg-master-key-and-subkeys-on-yubikey-neo-smartcard/"&gt;https://blog.josefsson.org/2014/06/23/offline-gnupg-master-key-and-subkeys-on-yubikey-neo-smartcard/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.debian.org/Subkeys"&gt;https://wiki.debian.org/Subkeys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.paulfurley.com/gpg-for-humans-preparing-an-offline-machine/"&gt;https://www.paulfurley.com/gpg-for-humans-preparing-an-offline-machine/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spin.atomicobject.com/2013/11/24/secure-gpg-keys-guide/"&gt;https://spin.atomicobject.com/2013/11/24/secure-gpg-keys-guide/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rnorth.org/gpg-and-ssh-with-yubikey-for-mac"&gt;https://rnorth.org/gpg-and-ssh-with-yubikey-for-mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Amazon Association disclaimer&lt;/h4&gt;
&lt;p&gt;I'm trying a little experiment with the Amazon Association program. Basically, if you click
on any of the YubiKey links and decide to buy it, I will get a little commission from it.
I've never tried this before and I've no idea if it works or not. I'm writing this here just for the
sake of transparency.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 30 Sep 2017 14:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2017-09-30:/2017/09/30/configuring-offline-gnupg-masterkey-subkeys-on-yubikey/</guid><category>HowTo</category><category>GnuPG</category><category>PGP</category><category>Security</category><category>YubiKey</category><category>Encryption</category></item><item><title>Getting latest Ubuntu AMI with Terraform</title><link>https://www.andreagrandi.it/2017/08/25/getting-latest-ubuntu-ami-with-terraform/</link><description>&lt;p&gt;When we need to create an EC2 resource on AWS using Terraform, we need to specify the AMI id to get the correct image.
The id is not easy to memorise and it changes depending on the zone we are working one. On every new release the id changes again.
So, how can we be sure to get the correct ID for our region, of the latest image available for a given Linux distribution?&lt;/p&gt;
&lt;h3&gt;Getting latest Ubuntu AMI id&lt;/h3&gt;
&lt;p&gt;In this example I will show how to get the ID for the latest version of Ubuntu 16.04 server, for the London region and create an EC2 instance using that ID.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;variable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;aws_region&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;eu-west-2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="c1"&gt; # London&lt;/span&gt;

&lt;span class="kr"&gt;provider&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;aws&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${var.aws_region}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;access_key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;youraccesskey&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;secret_key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yoursecretkey&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_ami&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;ubuntu&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;most_recent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;virtualization-type&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hvm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;owners&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;099720109477&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="c1"&gt; # Canonical&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_instance&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;web&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;ami&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${data.aws_ami.ubuntu.id}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;instance_type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;t2.micro&amp;quot;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;tags&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;HelloUbuntu&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;image_id&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${data.aws_ami.ubuntu.id}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After we have initialised our script using &lt;strong&gt;terraform init&lt;/strong&gt; if we run it, we will get the AMI id and the instance will be created:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;➜&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;example1&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;terraform&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;
&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_ami&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ubuntu&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Refreshing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;aws_instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;web&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Creating&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;ami&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                          &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ami-03998867&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;associate_public_ip_address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;availability_zone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;ebs_block_device&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;ephemeral_block_device&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;instance_state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;instance_type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;t2.micro&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;ipv6_address_count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;ipv6_addresses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;key_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;network_interface&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;network_interface_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;placement_group&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;primary_network_interface_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;private_dns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;private_ip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;public_dns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;public_ip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;root_block_device&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;security_groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;source_dest_check&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;subnet_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HelloUbuntu&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;tenancy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;volume_tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;vpc_security_group_ids&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;lt;computed&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;aws_instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;web&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Still&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;creating&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;elapsed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;aws_instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;web&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Still&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;creating&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;elapsed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;aws_instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;web&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Still&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;creating&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;elapsed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;aws_instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;web&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Creation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;f58f8bd55b3a7e38&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;Apply&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;added&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;changed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;destroyed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nx"&gt;Outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="nx"&gt;image_id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ami&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03998867&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's all we need to spin up an EC2 instance on AWS using latest Ubuntu image available.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 25 Aug 2017 11:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2017-08-25:/2017/08/25/getting-latest-ubuntu-ami-with-terraform/</guid><category>Development</category><category>AWS</category><category>Terraform</category><category>Ubuntu</category><category>devops</category></item><item><title>Creating a production ready API with Python and Django Rest Framework – part 4</title><link>https://www.andreagrandi.it/2017/08/17/creating-a-production-ready-api-with-python-and-django-rest-framework-part-4/</link><description>&lt;p&gt;In the &lt;a href="https://www.andreagrandi.it/2017/03/12/creating-a-production-ready-api-with-python-and-django-rest-framework-part-3/"&gt;previous
part&lt;/a&gt;
of the tutorial we implemented &lt;strong&gt;details&lt;/strong&gt; management, &lt;strong&gt;relations&lt;/strong&gt;
between models, &lt;strong&gt;nested APIs&lt;/strong&gt; and a different level of permissions.
Our API is basically complete but it is working properly? Is the source
code free of bugs? Would you feel confident to refactor the code without
breaking something? The answer to all our question is probably no. &lt;strong&gt;I
can't be sure if the code behaves properly nor I would feel confident
refactoring anything without having some tests coverage&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As I mentioned previously, we should have written tests since the
beginning, but I really didn't want to mix too many concepts together
and I wanted to let the user concentrate on the Rest Framework instead.&lt;/p&gt;
&lt;h3&gt;Test structure and configuration&lt;/h3&gt;
&lt;p&gt;Before beginning the fourth part of this tutorial, make sure you have
grabbed the latest source code
from &lt;a href="https://github.com/andreagrandi/drf-tutorial"&gt;https://github.com/andreagrandi/drf-tutorial&lt;/a&gt; and you have checked
out the previous git tag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.14
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Django has an integrated test runner but my personal choice is to use
&lt;a href="https://doc.pytest.org/en/latest/"&gt;&lt;strong&gt;pytest&lt;/strong&gt;&lt;/a&gt;, so as first thing let's
install the needed libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pytest&lt;span class="w"&gt; &lt;/span&gt;pytest-django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As long as we respect a minimum of conventions (test files must start
with &lt;strong&gt;test_&lt;/strong&gt; prefix), tests can be placed anywhere in the code. My
advice is to put them all together in a separate folder and divide them
according to app names. In our case we are going to create a folder
named "&lt;strong&gt;tests&lt;/strong&gt;" at the same level of &lt;strong&gt;manage.py&lt;/strong&gt; file. Inside this
folder we need to create a &lt;strong&gt;__init__.py&lt;/strong&gt; file and another folder
called &lt;strong&gt;catalog&lt;/strong&gt; with an additional &lt;strong&gt;__init__.py&lt;/strong&gt; inside. Now,
still at the same level of &lt;strong&gt;manage.py&lt;/strong&gt; create a file called
&lt;strong&gt;pytest.ini&lt;/strong&gt; with this content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pytest&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;drftutorial&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Are you feeling confused? No problem. You can checkout the source code
containing these changes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can check if you have done everything correctly going inside the
drftutorial folder (the one containing &lt;strong&gt;manage.py&lt;/strong&gt;) and launching
&lt;strong&gt;pytest&lt;/strong&gt;. If you see something like this, you did your changes
correctly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;drf-tutorial&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;drftutorial&lt;span class="w"&gt; &lt;/span&gt;git:&lt;span class="o"&gt;(&lt;/span&gt;master&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pytest&lt;/span&gt;
&lt;span class="o"&gt;=============================================================================================================================&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;session&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;starts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==============================================================================================================================&lt;/span&gt;
platform&lt;span class="w"&gt; &lt;/span&gt;darwin&lt;span class="w"&gt; &lt;/span&gt;--&lt;span class="w"&gt; &lt;/span&gt;Python&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.7.13,&lt;span class="w"&gt; &lt;/span&gt;pytest-3.0.6,&lt;span class="w"&gt; &lt;/span&gt;py-1.4.32,&lt;span class="w"&gt; &lt;/span&gt;pluggy-0.4.0
Django&lt;span class="w"&gt; &lt;/span&gt;settings:&lt;span class="w"&gt; &lt;/span&gt;drftutorial.settings&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;ini&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="o"&gt;)&lt;/span&gt;
rootdir:&lt;span class="w"&gt; &lt;/span&gt;/Users/andrea/Projects/drf-tutorial/drftutorial,&lt;span class="w"&gt; &lt;/span&gt;inifile:&lt;span class="w"&gt; &lt;/span&gt;pytest.ini
plugins:&lt;span class="w"&gt; &lt;/span&gt;django-3.1.2
collected&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;items&lt;/span&gt;

&lt;span class="o"&gt;=========================================================================================================================&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;tests&lt;span class="w"&gt; &lt;/span&gt;ran&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;seconds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=========================================================================================================================&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;drf-tutorial&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;drftutorial&lt;span class="w"&gt; &lt;/span&gt;git:&lt;span class="o"&gt;(&lt;/span&gt;master&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Writing the first test&lt;/h3&gt;
&lt;p&gt;To begin with, I will show you how to write a simple test that will
verify if the API can return the products list. If you remember we
implemented this API in the first part of the tutorial. First of all
create a file called &lt;strong&gt;test_views.py&lt;/strong&gt; under the folder
&lt;strong&gt;drftutorial/tests/catalog/&lt;/strong&gt; and add this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytest&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.test&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;APITestCase&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestProductList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;APITestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django_db&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_can_get_product_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;product-list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_200_OK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;before being able to run this test we need to change a little thing in
the &lt;strong&gt;catalog/urls.py&lt;/strong&gt; file, something we should have done since the
beginning. Please change the first url in this way, adding the &lt;strong&gt;name&lt;/strong&gt;
parameter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;product-list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;at this point we are able to run our test suite again and verify the
test is passing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;drf-tutorial&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;drftutorial&lt;span class="w"&gt; &lt;/span&gt;git:&lt;span class="o"&gt;(&lt;/span&gt;test-productlist&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;✗&lt;span class="w"&gt; &lt;/span&gt;pytest&lt;span class="w"&gt; &lt;/span&gt;-v
&lt;span class="o"&gt;=============================================================================================================================&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;session&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;starts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==============================================================================================================================&lt;/span&gt;
platform&lt;span class="w"&gt; &lt;/span&gt;darwin&lt;span class="w"&gt; &lt;/span&gt;--&lt;span class="w"&gt; &lt;/span&gt;Python&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.7.13,&lt;span class="w"&gt; &lt;/span&gt;pytest-3.0.6,&lt;span class="w"&gt; &lt;/span&gt;py-1.4.32,&lt;span class="w"&gt; &lt;/span&gt;pluggy-0.4.0&lt;span class="w"&gt; &lt;/span&gt;--&lt;span class="w"&gt; &lt;/span&gt;/Users/andrea/.virtualenvs/drf-tutorial/bin/python2.7
cachedir:&lt;span class="w"&gt; &lt;/span&gt;.cache
Django&lt;span class="w"&gt; &lt;/span&gt;settings:&lt;span class="w"&gt; &lt;/span&gt;drftutorial.settings&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;ini&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="o"&gt;)&lt;/span&gt;
rootdir:&lt;span class="w"&gt; &lt;/span&gt;/Users/andrea/Projects/drf-tutorial/drftutorial,&lt;span class="w"&gt; &lt;/span&gt;inifile:&lt;span class="w"&gt; &lt;/span&gt;pytest.ini
plugins:&lt;span class="w"&gt; &lt;/span&gt;django-3.1.2
collected&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;items

tests/catalog/test_views.py::TestProductList::test_can_get_product_list&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;PASSED&lt;/span&gt;

&lt;span class="o"&gt;===========================================================================================================================&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;passed&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.98&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;seconds&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;===========================================================================================================================&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To checkout the source code at this point:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Explaining the test code&lt;/h3&gt;
&lt;p&gt;When we implement a test, the first thing to do is to create a
&lt;strong&gt;test_*&lt;/strong&gt; file and import the minimum necessary to write a test class
and method. Each test class must inherit from &lt;strong&gt;APITestCase&lt;/strong&gt; and have a
name that start with &lt;strong&gt;Test&lt;/strong&gt;, like &lt;strong&gt;TestProductList&lt;/strong&gt;. Since we use
&lt;a href="https://doc.pytest.org/en/latest/"&gt;pytest&lt;/a&gt;, we need to mark our method
with &lt;strong&gt;@pytest.mark.django_db decorator&lt;/strong&gt;, to tell the test suite our
code will explicitly access the database. We are going to use the &lt;strong&gt;client&lt;/strong&gt; object
that is integrated in APITestCase to perform the request. Before doing that we
first get the local &lt;strong&gt;url&lt;/strong&gt; using Django's &lt;strong&gt;reverse&lt;/strong&gt; function. At this point
we do the call using the client:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then we assert a couple of things that we expect to be true:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_200_OK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We check that our API returns the &lt;strong&gt;200&lt;/strong&gt; status code and that in the returned
JSON there are 8 elements.&lt;/p&gt;
&lt;p&gt;It's normally a good practice to create test data inside the tests, but in our case
we previously created a data migration that creates test data. Migrations are
run every time we run tests so when we call our API, the data will be already there.&lt;/p&gt;
&lt;h3&gt;Wrapping up&lt;/h3&gt;
&lt;p&gt;I've written a &lt;a href="https://github.com/andreagrandi/drf-tutorial/blob/master/drftutorial/tests/catalog/test_views.py"&gt;few tests&lt;/a&gt; 
for all the views we have implemented until now and they are available
if you checkout this version of the code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.17
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I've only tested the views but it would be nice to test even the permission class, for example.
Please remember to write your tests first, if possible: implementing the code will be much more natural
once the tests are already in place.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 17 Aug 2017 07:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2017-08-17:/2017/08/17/creating-a-production-ready-api-with-python-and-django-rest-framework-part-4/</guid><category>Development</category><category>API</category><category>Django</category><category>framework</category><category>Python</category><category>rest</category><category>tutorial</category></item><item><title>Migrating from WordPress to a static generated website</title><link>https://www.andreagrandi.it/2017/07/02/migrating-from-wordpress-to-static-generated-website/</link><description>&lt;p&gt;As you may have noticed, my website looks very different compared to a few days ago.
It's just a different theme or template, I completely changed how the pages are generated and
I'm hosting it in a completely different way.&lt;/p&gt;
&lt;h3&gt;A brief history&lt;/h3&gt;
&lt;p&gt;When I started this blog 10 years ago, I was hosting it on a shared hosting service and it was based on &lt;strong&gt;WordPress&lt;/strong&gt;.
I then decided to keep WordPress as backend (I don't like PHP very much but I wasn't even good at front end development at the time,
so using a tool that allowed me to concentrate on the content rather than on design was a natural choice for me) but to move my website
to a &lt;strong&gt;VPS&lt;/strong&gt; on &lt;strong&gt;DigitalOcean&lt;/strong&gt;, where I've self-hosted &lt;strong&gt;Nginx + PHP + MySQL&lt;/strong&gt; and even Postfix for email aliases until a few days ago.&lt;/p&gt;
&lt;h3&gt;Why moving to a static website?&lt;/h3&gt;
&lt;p&gt;In these three or four years I've been using a VPS, I must say I've been good enough (or maybe lucky?) at keeping "bad people" out
of my server, but it's true that &lt;strong&gt;maintaining a VPS can be very time consuming&lt;/strong&gt; and you can never be sure that your website is always safe.
I've heard about static website before, but I was a bit skeptic because I had not spent enough time investigating all the possibilities
(search and comments are still possible, thanks to external services and plugins).&lt;/p&gt;
&lt;p&gt;Another advantage of a static website is that I can perfectly "run" (preview) on my local computer without publishing it online. Pages can be rendered locally
and will appear in the browser exactly as they will appear once published online.&lt;/p&gt;
&lt;p&gt;If you use a tool like WordPress, you need to be constantly connected to Internet to write any change. With static pages &lt;strong&gt;I can write my content offline&lt;/strong&gt;
(so I can do it while commuting on the train or while I'm flying somewhere) and publish it once I'm back online.&lt;/p&gt;
&lt;h3&gt;Pelican&lt;/h3&gt;
&lt;p&gt;The tool that I'm using to generate this website is called &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;. 
There are many &lt;a href="https://www.staticgen.com/"&gt;static website generators&lt;/a&gt;, the reason why I chose Pelican is because it's written in &lt;strong&gt;Python&lt;/strong&gt;,
so if I need to do any change I can do them and because its templates use Jinja2 which I'm already familiar with. It can also import posts from WordPress
(and I had over 180 posts to import from my previous website) so if you are migrating from it it's a good choice. Please note that the import script is not perfect
and that you may have to adjust some formatting here and there.&lt;/p&gt;
&lt;h3&gt;A new deployment pipeline&lt;/h3&gt;
&lt;p&gt;When you use WordPress your website is already online and all you have to do is to login, use the integrated editor, write content and finally publish it.
A static website doesn't have any admin tool, it's just static pages. How do you publish content then? There are of course multiple solutions available.
In my case my website source code is hosted in &lt;a href="https://github.com/andreagrandi/andreagrandi.it"&gt;a repository on GitHub&lt;/a&gt;. When I commit on &lt;strong&gt;master&lt;/strong&gt; branch
there is a webhook that triggers a &lt;a href="https://github.com/andreagrandi/andreagrandi.it/blob/master/.travis.yml"&gt;build job&lt;/a&gt; on &lt;a href="https://travis-ci.org/"&gt;TravisCI&lt;/a&gt;.
TravisCI fetches the latest source code, installs Pelican on the CI and builds the static pages. Once the build is finished, a &lt;a href="https://github.com/andreagrandi/andreagrandi.it/blob/master/deploy.sh"&gt;bash script&lt;/a&gt; is used to &lt;strong&gt;publish&lt;/strong&gt;
the generated pages on the static website hosting service.&lt;/p&gt;
&lt;h3&gt;Hosting a static website&lt;/h3&gt;
&lt;p&gt;The good thing about hosting a static website is that you don't need a database so you can host it almost anywhere at a cheaper price or even for free.
In my case I've decided to use &lt;strong&gt;GitHub pages&lt;/strong&gt;, mainly for simplicity. Every GitHub user can have a static website hosted at &amp;lt;yourusername&amp;gt;.github.io for free.
To start using it, you just have to create a repository named &amp;lt;yourusername&amp;gt;.github.io under your GitHub account. In my case the repository is &lt;a href="https://github.com/andreagrandi/andreagrandi.github.io"&gt;https://github.com/andreagrandi/andreagrandi.github.io&lt;/a&gt;. My deploy script simply takes the generated content
that is in the output/ folder and &lt;strong&gt;git push&lt;/strong&gt; it on this repository. Once the website has been pushed to git, it's immediately available at &lt;strong&gt;https://andreagrandi.github.io&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;CloudFlare&lt;/h4&gt;
&lt;p&gt;GitHub Pages service has a little limitation: you can either have your website served from a URL similar to the one I've just mentioned, including SSL support &lt;em&gt;or&lt;/em&gt; you can use your own domain, but &lt;strong&gt;you can't have both things&lt;/strong&gt; (SSL + custom domain). To workaround this, you can instruct your domain registrar (in my case is &lt;a href="https://www.gandi.net/"&gt;Gandi.net&lt;/a&gt;) to let CloudFlare manage your domain and just enabling "Full SSL" support will do the trick. I won't repeat here how to use CloudFlare since they have a very nice tutorial explaining how to configure their service to be used with GitHub Pages: &lt;a href="https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/"&gt;https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/&lt;/a&gt;. Remember to include a &lt;strong&gt;CNAME&lt;/strong&gt; file containing your domain name and let your static generetor put it on the root of your website, otherwise GitHub pages won't serve the pages correctly.&lt;/p&gt;
&lt;h4&gt;Why not Amazon S3?&lt;/h4&gt;
&lt;p&gt;While I was looking for instructions about how to host a static websites, I found many examples of websites using Amazon S3. There is nothing wrong with using this service (just keep in mind that it's not free, Amazon charges you for space usage and requests, so keep an eye on the AWS bill) but the way these websites were using it was completely wrong. The most common error I noticed was the fact they were enabling the &lt;strong&gt;flexible SSL&lt;/strong&gt; option on CloudFlare: this means that the connection between the visitor and CloudFlare was encrypted (and visitor could see the the SSL enabled) but the connection between CloudFlare and Amazon S3 was being served with &lt;strong&gt;HTTP only&lt;/strong&gt;, meaning that potentially the pages could have been modified before being served. Infact Amazon doesn't serve the S3 website buckets with SSL, they use plain HTTP (Why are you doing this Amazon?!). To use the S3 bucket correctly one should also configure Route 53 (to manage DNS) and CloudFront (the Amazon equivalent of CloudFlare service, beware because this is also charged separately depending on usage/traffic), making the whole setup a bit more complicated.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;I finally moved away from my VPS and from now on I will be able to concentrate my time on content only instead of spending part of it to maintain my server. Last but not least, the possibility to write my content offline, will hopefully allow me to write from places (train, airplane) where I've never written from before. If you have any suggestion or if if you notice any error, feel free to leave a comment here below. In alternative, since now this blog is completely open source and on GitHub, you can fork it and make a pull request!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 02 Jul 2017 13:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2017-07-02:/2017/07/02/migrating-from-wordpress-to-static-generated-website/</guid><category>Development</category><category>Python</category><category>Pelican</category><category>static</category><category>website</category><category>migration</category><category>CloudFlare</category><category>GitHub</category></item><item><title>Creating a production ready API with Python and Django Rest Framework – part 3</title><link>https://www.andreagrandi.it/2017/03/12/creating-a-production-ready-api-with-python-and-django-rest-framework-part-3/</link><description>&lt;p&gt;In the &lt;a href="https://www.andreagrandi.it/2016/10/01/creating-a-production-ready-api-with-python-and-django-rest-framework-part-2/"&gt;previous
part&lt;/a&gt;
we implemented authentication, permissions and the possibility to POST
new products for admins. In this new episode we will see how to
implement &lt;strong&gt;details&lt;/strong&gt; management, &lt;strong&gt;relations&lt;/strong&gt; between models, &lt;strong&gt;nested
APIs&lt;/strong&gt; and a different level of permissions.&lt;/p&gt;
&lt;p&gt;If you haven't completed the previous parts or if you want to begin from
this one, checkout the right code first:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Handling Product Details&lt;/h3&gt;
&lt;p&gt;Our current API methods allow us to list all the products we have in our
catalog and to create a new one (if we have admin permissions), but what
if we wanted to delete or update a single one? What if we wanted to get
only a specific product? We need to handle details.&lt;/p&gt;
&lt;p&gt;As first thing we need to change the &lt;strong&gt;ProductSerializer&lt;/strong&gt; to return the
id of the product. Edit &lt;strong&gt;catalog/serializers.py&lt;/strong&gt; and change the class
in this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After changing the serializer we need to implement a new view called
&lt;strong&gt;ProductDetail&lt;/strong&gt;. Edit &lt;strong&gt;catalog/views.py&lt;/strong&gt; and add the following
imports:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Http404&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.response&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;APIView&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and the following class:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductDetail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;APIView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DoesNotExist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;Http404&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_400_BAD_REQUEST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_204_NO_CONTENT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;let's connect the new view to the urls, editing catalog/urls.py and
changing the code in this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/(?P&amp;lt;pk&amp;gt;[0-9]+)/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductDetail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we try to &lt;strong&gt;PUT&lt;/strong&gt;, &lt;strong&gt;DELETE&lt;/strong&gt; or &lt;strong&gt;GET&lt;/strong&gt; a product like
&lt;strong&gt;/products/1/&lt;/strong&gt; we can now update, delete or retrieve an existing item,
but there is a little problem: we haven't set any permission on this
class, so anyone can do it. The previous view was also more compact, why
don't we use a generic view to perform these basic operations? Let's
refactor &lt;strong&gt;ProductDetail&lt;/strong&gt; with a
&lt;a href="http://www.django-rest-framework.org/api-guide/generic-views/#retrieveupdatedestroyapiview"&gt;&lt;strong&gt;RetrieveUpdateDestroyAPIView&lt;/strong&gt;&lt;/a&gt;
generic class. Open &lt;strong&gt;catalog/views.py&lt;/strong&gt; and change the class code in
this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductDetail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RetrieveUpdateDestroyAPIView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;serializer_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;
    &lt;span class="n"&gt;permission_classes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IsAdminOrReadOnly&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's it! With just three lines of code we have now implemented the
same feature of the previous class, plus we have set the correct
permissions.&lt;/p&gt;
&lt;p&gt;To checkout the code at this point:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Reviews - Relations between models&lt;/h3&gt;
&lt;p&gt;As many online catalogs already have, it would be nice if our API had an
endpoint where it is possible to leave a review for a product and get a
list of reviews for a specific product. To implement this feature we
need to add a new model to our application. Edit &lt;strong&gt;catalog/models.py&lt;/strong&gt;
adding this import:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and this Django model:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Review&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;related_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;reviews&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;rating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;created_by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;after creating the model, please remember to create the related DB
&lt;strong&gt;migration&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;./manage.py&lt;span class="w"&gt; &lt;/span&gt;makemigrations&lt;span class="w"&gt; &lt;/span&gt;catalog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When the model is ready, we have to do some changes to the serializers.
First of all we need to write a new one, for our new &lt;strong&gt;Review&lt;/strong&gt; model.
Then we have to change our &lt;strong&gt;ProductSerializer&lt;/strong&gt; so that it will return
its related reviews. Each Product can have multiple Review. And each
Review will be always linked to a specific Product. Edit
&lt;strong&gt;catalog/serializers.py&lt;/strong&gt; and change it in this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ReviewSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;created_by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadOnlyField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created_by.username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;review&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;created_by&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;reviews&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ReviewSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;read_only&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;reviews&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; in &lt;strong&gt;ReviewSerializer&lt;/strong&gt; when we serialise the user contained
in &lt;strong&gt;created_by&lt;/strong&gt; field, return the username instead of the id (to make
it more human readable). Another important thing to notice is that the
value of the &lt;strong&gt;related_name&lt;/strong&gt; we have set in the &lt;strong&gt;Review&lt;/strong&gt; model must
match with the field name we have added in &lt;strong&gt;ProductSerializer fields&lt;/strong&gt;
property. In this case we have set it to &lt;strong&gt;reviews&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;At this point we need to add a new view. Edit &lt;strong&gt;catalog/views.py&lt;/strong&gt; and
add the following imports:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.permissions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;IsAuthenticatedOrReadOnly&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.serializers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ReviewSerializer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then add this class:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ReviewList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListCreateAPIView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;serializer_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ReviewSerializer&lt;/span&gt;
    &lt;span class="n"&gt;permission_classes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IsAuthenticatedOrReadOnly&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;perform_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;created_by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;product_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can notice, I had to customise the &lt;strong&gt;perform_create&lt;/strong&gt; method
because the default one doesn't know anything about the fact we want to
set the &lt;strong&gt;created_by&lt;/strong&gt; and &lt;strong&gt;product_id&lt;/strong&gt; fields. Finally we need to
bind this new view to a specific url, so we need to edit
&lt;strong&gt;catalog/urls.py&lt;/strong&gt; and add this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/(?P&amp;lt;pk&amp;gt;[0-9]+)/reviews/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReviewList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At this point any authenticated user should be able to &lt;strong&gt;POST a review&lt;/strong&gt;
for a product and anyone should be able to get the &lt;strong&gt;list of reviews&lt;/strong&gt;
for each product. If you have any problem with the code and want to move
to this point, please checkout this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Nested APIs details&lt;/h3&gt;
&lt;p&gt;To complete our API endpoints for Review, we need to add an additional
feature that will let users to edit/delete their own review. Before
implementing the new view, we need a little bit of refactoring and a new
permission class. Edit &lt;strong&gt;catalog/permissions.py&lt;/strong&gt; and add this new
class:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IsOwnerOrReadOnly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BasePermission&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;has_object_permission&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;SAFE_METHODS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;created_by&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Basically this will permit changes to the review only to its author. Now
we are going to add new urls and doing some refactoring at the same
time. Edit &lt;strong&gt;catalog/urls.py&lt;/strong&gt; and change the urls in this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/(?P&amp;lt;product_id&amp;gt;[0-9]+)/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductDetail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/(?P&amp;lt;product_id&amp;gt;[0-9]+)/reviews/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReviewList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/(?P&amp;lt;product_id&amp;gt;[0-9]+)/reviews/(?P&amp;lt;review_id&amp;gt;[0-9]+)/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReviewDetail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You may have noticed that I substituted &lt;strong&gt;pk&lt;/strong&gt; with &lt;strong&gt;product_id&lt;/strong&gt;. In
the latest url I added, we need to be able to identify two primary keys:
the one for the product and the one for the review. I renamed the
previous ones for consistency. Now it's time to add the new view for
Review details. Edit &lt;strong&gt;catalog/view.py&lt;/strong&gt; and add this class:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ReviewDetail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RetrieveUpdateDestroyAPIView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;serializer_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ReviewSerializer&lt;/span&gt;
    &lt;span class="n"&gt;permission_classes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IsAuthenticatedOrReadOnly&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IsOwnerOrReadOnly&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lookup_url_kwarg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;review_id&amp;#39;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_queryset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;review_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Review&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What are we doing here? You may have noticed that we set a new property
called &lt;strong&gt;lookup_url_kwarg&lt;/strong&gt;. That property is being used to determine
the keyword in &lt;strong&gt;urls.py&lt;/strong&gt; to be used for the primary key lookup.&lt;/p&gt;
&lt;p&gt;You will also need to do some refactoring to the other views, to adapt
them to the changes we just did to the urls. I suggest you to have a
look at the diffs
here: &lt;a href="https://github.com/andreagrandi/drf-tutorial/compare/tutorial-1.13...tutorial-1.14"&gt;https://github.com/andreagrandi/drf-tutorial/compare/tutorial-1.13...tutorial-1.14&lt;/a&gt;
or you can have a look at the whole file
here &lt;a href="https://github.com/andreagrandi/drf-tutorial/blob/541bf31c11fd1dbf2bcc1d31312086995e3e5b48/drftutorial/catalog/views.py"&gt;https://github.com/andreagrandi/drf-tutorial/blob/541bf31c11fd1dbf2bcc1d31312086995e3e5b48/drftutorial/catalog/views.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In alternative, you can fetch the whole source code at this point:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.14
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Wrapping Up&lt;/h3&gt;
&lt;p&gt;In this third part of the tutorial you learned how to handle model
details in the API and how relations between different model work. In
the &lt;a href="https://www.andreagrandi.it/2017/08/17/creating-a-production-ready-api-with-python-and-django-rest-framework-part-4/"&gt;next part of the tutorial&lt;/a&gt;
we will do something we should have done since the beginning: adding &lt;strong&gt;tests&lt;/strong&gt; to 
our code and learn how to properly
test the API.&lt;/p&gt;
&lt;h3&gt;Feedback Please&lt;/h3&gt;
&lt;p&gt;If you enjoyed this tutorial, please leave me some feedback!
I really want to improve my work, based on the users feedback so any little advice will be appreciated, thanks!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 12 Mar 2017 11:21:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2017-03-12:/2017/03/12/creating-a-production-ready-api-with-python-and-django-rest-framework-part-3/</guid><category>Development</category><category>API</category><category>Django</category><category>framework</category><category>Python</category><category>rest</category><category>tutorial</category></item><item><title>Creating a production ready API with Python and Django Rest Framework – part 2</title><link>https://www.andreagrandi.it/2016/10/01/creating-a-production-ready-api-with-python-and-django-rest-framework-part-2/</link><description>&lt;p&gt;In the &lt;a href="https://www.andreagrandi.it/2016/09/28/creating-production-ready-api-python-django-rest-framework-part-1/"&gt;first
part&lt;/a&gt;
of this tutorial we have seen how to create a basic API using &lt;strong&gt;Django
Rest Framework&lt;/strong&gt;. This second part will explain how to implement
&lt;strong&gt;POST&lt;/strong&gt; methods and add different levels of &lt;strong&gt;permissions&lt;/strong&gt; and
&lt;strong&gt;authentication&lt;/strong&gt;. If you are starting from part 2, you may want to
checkout the source code at this exact point:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;A step back&lt;/h3&gt;
&lt;p&gt;Before showing how easy it is to implement a &lt;strong&gt;POST&lt;/strong&gt; method for our
existing API, I want to do a step back and show you the "manual way",
using just the
&lt;a href="http://www.django-rest-framework.org/api-guide/views/"&gt;&lt;strong&gt;APIView&lt;/strong&gt;&lt;/a&gt;
class. Edit the file &lt;strong&gt;catalog/views.py&lt;/strong&gt; and change the code in this
way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.response&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;APIView&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.serializers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;APIView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we try to use the API again (from the browser of from the http
client), it will still work in the same way. The difference here is that
we are using the very basic &lt;strong&gt;APIView&lt;/strong&gt; class and we have explicitly
defined the &lt;strong&gt;GET&lt;/strong&gt; method for it.&lt;/p&gt;
&lt;h3&gt;Implementing a POST method with APIView&lt;/h3&gt;
&lt;p&gt;An API is not being used at its full potential if it's read only. We are
going to implement a POST method for the existing view and testing it
with &lt;a href="https://httpie.org/"&gt;&lt;strong&gt;httpie&lt;/strong&gt;&lt;/a&gt; client again. First of all we
need to add an import to &lt;strong&gt;catalog/views.py&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then we add this method to our &lt;strong&gt;ProductList&lt;/strong&gt; class:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_201_CREATED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTP_400_BAD_REQUEST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now let's test our &lt;strong&gt;POST&lt;/strong&gt; method we just implemented:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;http&lt;span class="w"&gt; &lt;/span&gt;--json&lt;span class="w"&gt; &lt;/span&gt;POST&lt;span class="w"&gt; &lt;/span&gt;http://127.0.0.1:8000/products/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Salamino&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Salamino Piccante&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.50&amp;quot;&lt;/span&gt;
HTTP/1.0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;201&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Created
Allow:&lt;span class="w"&gt; &lt;/span&gt;GET,&lt;span class="w"&gt; &lt;/span&gt;POST,&lt;span class="w"&gt; &lt;/span&gt;HEAD,&lt;span class="w"&gt; &lt;/span&gt;OPTIONS
Content-Type:&lt;span class="w"&gt; &lt;/span&gt;application/json
Date:&lt;span class="w"&gt; &lt;/span&gt;Thu,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;29&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Sep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2016&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;:48:48&lt;span class="w"&gt; &lt;/span&gt;GMT
Server:&lt;span class="w"&gt; &lt;/span&gt;WSGIServer/0.1&lt;span class="w"&gt; &lt;/span&gt;Python/2.7.10
Vary:&lt;span class="w"&gt; &lt;/span&gt;Accept,&lt;span class="w"&gt; &lt;/span&gt;Cookie
X-Frame-Options:&lt;span class="w"&gt; &lt;/span&gt;SAMEORIGIN

&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Salamino Piccante&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Salamino&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.50&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It works! In case something doesn't work, try to fetch the source code
at this point:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Implementing a POST method with ListCreateAPIView&lt;/h3&gt;
&lt;p&gt;Do you remember when I mentioned at the beginning that there is an easy
way to do the same thing? I wasn't cheating. Let's change again our old
code in &lt;strong&gt;catalog/views.py&lt;/strong&gt; but this time we will use a different base
class:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;generics&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.response&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.serializers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListCreateAPIView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;serializer_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;let's test this again with &lt;strong&gt;httpie&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;http&lt;span class="w"&gt; &lt;/span&gt;--json&lt;span class="w"&gt; &lt;/span&gt;POST&lt;span class="w"&gt; &lt;/span&gt;http://127.0.0.1:8000/products/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Pecorino&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Pecorino Sardo&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7.00&amp;quot;&lt;/span&gt;
HTTP/1.0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;201&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Created
Allow:&lt;span class="w"&gt; &lt;/span&gt;GET,&lt;span class="w"&gt; &lt;/span&gt;POST,&lt;span class="w"&gt; &lt;/span&gt;HEAD,&lt;span class="w"&gt; &lt;/span&gt;OPTIONS
Content-Type:&lt;span class="w"&gt; &lt;/span&gt;application/json
Date:&lt;span class="w"&gt; &lt;/span&gt;Thu,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;29&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Sep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2016&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;:21:20&lt;span class="w"&gt; &lt;/span&gt;GMT
Server:&lt;span class="w"&gt; &lt;/span&gt;WSGIServer/0.1&lt;span class="w"&gt; &lt;/span&gt;Python/2.7.10
Vary:&lt;span class="w"&gt; &lt;/span&gt;Accept,&lt;span class="w"&gt; &lt;/span&gt;Cookie
X-Frame-Options:&lt;span class="w"&gt; &lt;/span&gt;SAMEORIGIN

&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Pecorino Sardo&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Pecorino&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7.00&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We just POSTed some data on the API! How can it work? Well, we have
changed the base class from &lt;strong&gt;ListAPIView&lt;/strong&gt; to
&lt;a href="http://www.django-rest-framework.org/api-guide/generic-views/#listcreateapiview"&gt;&lt;strong&gt;ListCreateAPIView&lt;/strong&gt;&lt;/a&gt;.
This particular class implements &lt;strong&gt;a generic POST method&lt;/strong&gt; that will
accept and validate all the fields through the specified serializer.&lt;/p&gt;
&lt;h3&gt;Authentication&lt;/h3&gt;
&lt;p&gt;Now our API let us add products to the catalog, amazing! But... is it
exactly what we want? In a real scenario we don't want any random user
to be able to add products in our database, so we are going to protect
the POST method allowing only Admin users.&lt;/p&gt;
&lt;p&gt;Before digging into Django Rest Framework permissions, we need to setup
an authentication system. For simplicity we will implement
&lt;a href="http://www.django-rest-framework.org/api-guide/authentication/#tokenauthentication"&gt;&lt;strong&gt;TokenAuthentication&lt;/strong&gt;&lt;/a&gt;.
As first step we need to edit &lt;strong&gt;settings.py&lt;/strong&gt; and
insert &lt;strong&gt;rest_framework.authtoken&lt;/strong&gt; in the &lt;strong&gt;INSTALLED_APPS&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;rest_framework&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;rest_framework.authtoken&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;catalog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;after this, we need to add &lt;strong&gt;TokenAuthentication&lt;/strong&gt; as default
authentication class (append this in &lt;strong&gt;settings.py&lt;/strong&gt; at the end):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;REST_FRAMEWORK&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;DEFAULT_AUTHENTICATION_CLASSES&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;rest_framework.authentication.TokenAuthentication&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally we need to add a particular URL to the project so that clients
will be able to call an endpoint passing &lt;strong&gt;username&lt;/strong&gt; and &lt;strong&gt;password&lt;/strong&gt;
to get a &lt;strong&gt;token&lt;/strong&gt; back. Edit &lt;strong&gt;drftutorial/urls.py&lt;/strong&gt; and make it's like
this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.authtoken.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;obtain_auth_token&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^admin/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;catalog.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^api-token-auth/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obtain_auth_token&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Don't forget to re-run the &lt;strong&gt;migrations&lt;/strong&gt;, because TokenAuthorization
needs to change a couple of tables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;./manage.py&lt;span class="w"&gt; &lt;/span&gt;migrate
Operations&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;perform:
&lt;span class="w"&gt;    &lt;/span&gt;Apply&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="w"&gt; &lt;/span&gt;migrations:&lt;span class="w"&gt; &lt;/span&gt;admin,&lt;span class="w"&gt; &lt;/span&gt;auth,&lt;span class="w"&gt; &lt;/span&gt;authtoken,&lt;span class="w"&gt; &lt;/span&gt;catalog,&lt;span class="w"&gt; &lt;/span&gt;contenttypes,&lt;span class="w"&gt; &lt;/span&gt;sessions
Running&lt;span class="w"&gt; &lt;/span&gt;migrations:
&lt;span class="w"&gt;    &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;authtoken.0001_initial...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;    &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;authtoken.0002_auto_20160226_1747...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In case you had any problem changing the code up to this point, you can
always fetch the related git tag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Testing the Authentication&lt;/h4&gt;
&lt;p&gt;Before testing the authentication, make sure you created at least the
Django &lt;strong&gt;superuser&lt;/strong&gt; with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;./manage.py&lt;span class="w"&gt; &lt;/span&gt;createsuperuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;now let's try to &lt;strong&gt;obtain the token&lt;/strong&gt; we will need later for our API
calls:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;http&lt;span class="w"&gt; &lt;/span&gt;--json&lt;span class="w"&gt; &lt;/span&gt;POST&lt;span class="w"&gt; &lt;/span&gt;http://127.0.0.1:8000/api-token-auth/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yourusername&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yourpassword&amp;quot;&lt;/span&gt;
HTTP/1.0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;OK
Allow:&lt;span class="w"&gt; &lt;/span&gt;POST,&lt;span class="w"&gt; &lt;/span&gt;OPTIONS
Content-Type:&lt;span class="w"&gt; &lt;/span&gt;application/json
Date:&lt;span class="w"&gt; &lt;/span&gt;Fri,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Sep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2016&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;08&lt;/span&gt;:55:07&lt;span class="w"&gt; &lt;/span&gt;GMT
Server:&lt;span class="w"&gt; &lt;/span&gt;WSGIServer/0.1&lt;span class="w"&gt; &lt;/span&gt;Python/2.7.11
X-Frame-Options:&lt;span class="w"&gt; &lt;/span&gt;SAMEORIGIN

&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;token&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bc9514f0892368cfd0ea792a977aff55d53e3634&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We will need to pass this token in every API call we want to be
authenticated. The token is being passed through the "Authentication"
header parameter.&lt;/p&gt;
&lt;h3&gt;API Permissions&lt;/h3&gt;
&lt;p&gt;Authentication is something that identify the user with a particular
system. Permissions instead are the level of things that are allowed or
not allowed for a particular user. In our case we said we want to let
Admin users to be able to POST new products and we want to let even
anonymous users to GET the product list.&lt;/p&gt;
&lt;p&gt;Django Rest Framework has some built-in classes that we can apply to our
views to define the level of permissions. We could have used the
&lt;a href="http://www.django-rest-framework.org/api-guide/permissions/#isadminuser"&gt;&lt;strong&gt;IsAdminUser&lt;/strong&gt;&lt;/a&gt;
class, but it would not allow anonymous users to perform the GET
request. Or we could have used
&lt;a href="http://www.django-rest-framework.org/api-guide/permissions/#isauthenticatedorreadonly"&gt;&lt;strong&gt;IsAuthenticatedOrReadOnly&lt;/strong&gt;&lt;/a&gt;
class, but this would allow any registered user to add products (and we
want to let only admins).&lt;/p&gt;
&lt;p&gt;Or...we can define our own permission class and have exactly what we
want. Create a new file &lt;strong&gt;catalog/permissions.py&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.permissions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BasePermission&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SAFE_METHODS&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IsAdminOrReadOnly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BasePermission&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;has_permission&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;SAFE_METHODS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_staff&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Just as a side note, &lt;strong&gt;SAFE_METHODS&lt;/strong&gt; are &lt;strong&gt;GET&lt;/strong&gt;, &lt;strong&gt;HEAD&lt;/strong&gt; and
&lt;strong&gt;OPTIONS&lt;/strong&gt;. These method are considered "safe" because they don't
change any existing data. Open &lt;strong&gt;catalog/views.py&lt;/strong&gt; again, import this
at the beginning:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.permissions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;IsAdminOrReadOnly&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and set this as &lt;strong&gt;permission_classes&lt;/strong&gt; to &lt;strong&gt;ProductList&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;serializer_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;
&lt;span class="n"&gt;permission_classes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IsAdminOrReadOnly&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let's now try to add a new product using the &lt;strong&gt;token&lt;/strong&gt; we got before
(you will have to use your own token of course, mine only works on my
local db):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;http&lt;span class="w"&gt; &lt;/span&gt;--json&lt;span class="w"&gt; &lt;/span&gt;POST&lt;span class="w"&gt; &lt;/span&gt;http://127.0.0.1:8000/products/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lardo&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lardo di Colonnata&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;8.50&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Authorization: Token bc9514f0892368cfd0ea792a977aff55d53e3634&amp;#39;&lt;/span&gt;
HTTP/1.0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;201&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Created
Allow:&lt;span class="w"&gt; &lt;/span&gt;GET,&lt;span class="w"&gt; &lt;/span&gt;POST,&lt;span class="w"&gt; &lt;/span&gt;HEAD,&lt;span class="w"&gt; &lt;/span&gt;OPTIONS
Content-Type:&lt;span class="w"&gt; &lt;/span&gt;application/json
Date:&lt;span class="w"&gt; &lt;/span&gt;Fri,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Sep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2016&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;:04:13&lt;span class="w"&gt; &lt;/span&gt;GMT
Server:&lt;span class="w"&gt; &lt;/span&gt;WSGIServer/0.1&lt;span class="w"&gt; &lt;/span&gt;Python/2.7.11
Vary:&lt;span class="w"&gt; &lt;/span&gt;Accept
X-Frame-Options:&lt;span class="w"&gt; &lt;/span&gt;SAMEORIGIN

&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lardo di Colonnata&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Lardo&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;8.50&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It worked! We have now protected our API so that not admin people can't
create any product. If you have any problem with the code, you can check
it out with this tag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Wrapping Up&lt;/h3&gt;
&lt;p&gt;We have now implemented the POST method to add new products to our
catalog. In the &lt;a href="https://www.andreagrandi.it/2017/03/12/creating-a-production-ready-api-with-python-and-django-rest-framework-part-3/"&gt;next
episode&lt;/a&gt;
we will see how to implement endpoints to get a single product, to
update or delete products and finally we will allow registered users to
send a review for a specific product.&lt;/p&gt;
&lt;h3&gt;Feedback Please&lt;/h3&gt;
&lt;p&gt;I know, this blog doesn't have any "comment" feature (I was tired of
dealing with spam), but if you want to provide some feedback you can
still do it by email. Just visit my
&lt;a href="https://www.andreagrandi.it/about/"&gt;&lt;strong&gt;About&lt;/strong&gt;&lt;/a&gt; page, you will find my
email there.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 01 Oct 2016 11:12:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2016-10-01:/2016/10/01/creating-a-production-ready-api-with-python-and-django-rest-framework-part-2/</guid><category>Development</category><category>API</category><category>Django</category><category>framework</category><category>Python</category><category>rest</category><category>tutorial</category></item><item><title>Creating a production ready API with Python and Django Rest Framework - part 1</title><link>https://www.andreagrandi.it/2016/09/28/creating-production-ready-api-python-django-rest-framework-part-1/</link><description>&lt;p&gt;The aim if this tutorial is to show how to create a production ready
solution for a &lt;strong&gt;REST API&lt;/strong&gt;, using &lt;strong&gt;Python&lt;/strong&gt; and &lt;a href="http://www.django-rest-framework.org"&gt;Django Rest
Framework&lt;/a&gt;. I will show you how to
first create a very basic API, how to handle the authentication and
permissions and I will cover deployment and hosting of images. The full
source code of the tutorial is available
at: &lt;a href="https://github.com/andreagrandi/drf-tutorial"&gt;https://github.com/andreagrandi/drf-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Summary of the complete tutorial&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Create the basic structure for the API&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.andreagrandi.it/2016/10/01/creating-a-production-ready-api-with-python-and-django-rest-framework-part-2/"&gt;Add Authentication and POST
    methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.andreagrandi.it/2017/03/12/creating-a-production-ready-api-with-python-and-django-rest-framework-part-3/"&gt;Handling details and changes to existing
    data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.andreagrandi.it/2017/08/17/creating-a-production-ready-api-with-python-and-django-rest-framework-part-4/"&gt;Testing the API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Switching from Sqlite to PostgreSQL&lt;/li&gt;
&lt;li&gt;Hosting the API on Heroku&lt;/li&gt;
&lt;li&gt;Add an Image field and save images to S3&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Create the basic structure for the API&lt;/h3&gt;
&lt;p&gt;For this tutorial I will assume you have correctly installed at least
&lt;strong&gt;Python&lt;/strong&gt; (I will use Python 2.7.x),
&lt;a href="https://pypi.python.org/pypi/virtualenv"&gt;&lt;strong&gt;virtualenv&lt;/strong&gt;&lt;/a&gt; and
&lt;a href="https://virtualenvwrapper.readthedocs.io/en/latest/"&gt;&lt;strong&gt;virtualenvwrapper&lt;/strong&gt;&lt;/a&gt;
on your system and I will explain how to create everything else step by
step.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; at the time of writing, the tutorial has been based on
&lt;strong&gt;Django 1.10.1&lt;/strong&gt; and &lt;strong&gt;Django Rest Framework 3.4.7&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Creating the main project structure&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;drf-tutorial
mkvirtualenv&lt;span class="w"&gt; &lt;/span&gt;drf-tutorial
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;drf-tutorial
pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;django&lt;span class="w"&gt; &lt;/span&gt;djangorestframework
django-admin.py&lt;span class="w"&gt; &lt;/span&gt;startproject&lt;span class="w"&gt; &lt;/span&gt;drftutorial&lt;span class="w"&gt; &lt;/span&gt;.
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;drftutorial
django-admin.py&lt;span class="w"&gt; &lt;/span&gt;startapp&lt;span class="w"&gt; &lt;/span&gt;catalog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Data Model&lt;/h3&gt;
&lt;p&gt;We will create the API for a generic products catalog, using a very
simple structure (to keep things simple). Edit the file
&lt;strong&gt;catalog/models.py&lt;/strong&gt; adding these lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DecimalField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;decimal_places&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_digits&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;after creating the model, we need to add 'catalog' application to
&lt;strong&gt;INSTALLED_APPS&lt;/strong&gt;. Edit &lt;strong&gt;settings.py&lt;/strong&gt; and add the app at the end of
the list:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.admin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.contenttypes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.sessions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.messages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.staticfiles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;catalog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;at this point the Django application will be recognised by the project
and we can create and apply the schema migration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;drf-tutorial&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;drftutorial&lt;span class="w"&gt; &lt;/span&gt;git:&lt;span class="o"&gt;(&lt;/span&gt;235dfcc&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;✗&lt;span class="w"&gt; &lt;/span&gt;./manage.py&lt;span class="w"&gt; &lt;/span&gt;makemigrations
Migrations&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;catalog&amp;#39;&lt;/span&gt;:
&lt;span class="w"&gt;    &lt;/span&gt;catalog/migrations/0001_initial.py:
&lt;span class="w"&gt;        &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;Create&lt;span class="w"&gt; &lt;/span&gt;model&lt;span class="w"&gt; &lt;/span&gt;Product

&lt;span class="o"&gt;(&lt;/span&gt;drf-tutorial&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;drftutorial&lt;span class="w"&gt; &lt;/span&gt;git:&lt;span class="o"&gt;(&lt;/span&gt;235dfcc&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;✗&lt;span class="w"&gt; &lt;/span&gt;./manage.py&lt;span class="w"&gt; &lt;/span&gt;migrate
Operations&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;perform:
&lt;span class="w"&gt;    &lt;/span&gt;Apply&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="w"&gt; &lt;/span&gt;migrations:&lt;span class="w"&gt; &lt;/span&gt;admin,&lt;span class="w"&gt; &lt;/span&gt;auth,&lt;span class="w"&gt; &lt;/span&gt;catalog,&lt;span class="w"&gt; &lt;/span&gt;contenttypes,&lt;span class="w"&gt; &lt;/span&gt;sessions
&lt;span class="w"&gt;    &lt;/span&gt;Running&lt;span class="w"&gt; &lt;/span&gt;migrations:
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;contenttypes.0001_initial...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;auth.0001_initial...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;admin.0001_initial...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;admin.0002_logentry_remove_auto_add...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;contenttypes.0002_remove_content_type_name...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;auth.0002_alter_permission_name_max_length...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;auth.0003_alter_user_email_max_length...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;auth.0004_alter_user_username_opts...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;auth.0005_alter_user_last_login_null...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;auth.0006_require_contenttypes_0002...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;auth.0007_alter_validators_add_error_messages...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;auth.0008_alter_user_username_max_length...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;catalog.0001_initial...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;span class="w"&gt;        &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;sessions.0001_initial...&lt;span class="w"&gt; &lt;/span&gt;OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;API Serializer&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.django-rest-framework.org/api-guide/serializers/"&gt;&lt;strong&gt;Serializers&lt;/strong&gt;&lt;/a&gt;
are those components used to convert the received data from JSON format
to the relative Django model and viceversa. Create the new file
&lt;strong&gt;catalog/serializers.py&lt;/strong&gt; and place this code inside:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;description&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In this case we are using a
&lt;a href="http://www.django-rest-framework.org/api-guide/serializers/#modelserializer"&gt;&lt;strong&gt;ModelSerializer&lt;/strong&gt;&lt;/a&gt;.
We need to create a new class from it, and specify the model attribute,
that's it. In this case we also specify the fields we want to return.&lt;/p&gt;
&lt;h3&gt;API View&lt;/h3&gt;
&lt;p&gt;The serializer alone is not able to respond to an API request, that's
why we need to implement a view. In this first version of the view (that
we will improve soon) we will "manually" transform the data available in
the serializer dictionary to a JSON response. In &lt;strong&gt;catalog/views.py&lt;/strong&gt;
add this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.renderers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSONRenderer&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.parsers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSONParser&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.serializers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JSONResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    An HttpResponse that renders its content into JSON.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSONRenderer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;content_type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JSONResponse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;product_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;JSONResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At this point we need to tell our Django app to use this API view when a
certain URL is requested. We first need to add this code in
&lt;strong&gt;catalog/urls.py&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;product_list&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and finally we need to add this to &lt;strong&gt;drftutorial/urls.py&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^admin/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;catalog.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Testing our work&lt;/h4&gt;
&lt;p&gt;At this point we should be able to start our Django app:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./manage.py&lt;span class="w"&gt; &lt;/span&gt;runserver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let's install a tool that will help us to test the API:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;httpie
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;now we can use it to call our URL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;http&lt;span class="w"&gt; &lt;/span&gt;http://127.0.0.1:8000/products/
HTTP/1.0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;OK
Content-Type:&lt;span class="w"&gt; &lt;/span&gt;application/json
Date:&lt;span class="w"&gt; &lt;/span&gt;Wed,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Sep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2016&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;09&lt;/span&gt;:54:50&lt;span class="w"&gt; &lt;/span&gt;GMT
Server:&lt;span class="w"&gt; &lt;/span&gt;WSGIServer/0.1&lt;span class="w"&gt; &lt;/span&gt;Python/2.7.11
X-Frame-Options:&lt;span class="w"&gt; &lt;/span&gt;SAMEORIGIN

&lt;span class="o"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It works! It's an empty response of course, because we still don't have
any data to show, but we will see later how to load some example data in
our database. If you have been able to follow the tutorial up to this
point, that's good. If not, don't worry. You can checkout the code at
exactly this point of the tutorial doing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Improving the API View&lt;/h3&gt;
&lt;p&gt;There is a quicker and more efficient way of implementing the same API
view we have seen before. We can use a class based view, in particular
the APIView class and also have the JSON response implemented
automatically. Change the code inside &lt;strong&gt;catalog/views.py&lt;/strong&gt; with this
one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;APIView&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.response&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.serializers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;APIView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will also have to change &lt;strong&gt;catalog/urls.py&lt;/strong&gt; in this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^products/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProductList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can check the source code for this step of the tutorial with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;checkout&lt;/span&gt; &lt;span class="n"&gt;tutorial&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There is also another way of writing the same view. Let's try it with
&lt;a href="http://www.django-rest-framework.org/api-guide/generic-views/#listapiview"&gt;&lt;strong&gt;ListAPIView&lt;/strong&gt;&lt;/a&gt;.
Edit &lt;strong&gt;catalog/views.py&lt;/strong&gt; again and substitute the code with this one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;generics&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.response&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.serializers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProductList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generics&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListAPIView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;serializer_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProductSerializer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With a &lt;strong&gt;ListAPIView&lt;/strong&gt; we are basically creating a read-only API that is
supposed to return a list of items. We need to specify a &lt;strong&gt;queryset&lt;/strong&gt;
and the &lt;strong&gt;serializer_class&lt;/strong&gt; parameters. Once again, you can get up to
this point, checking out the related git tag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Creating Initial Data&lt;/h3&gt;
&lt;p&gt;An API that doesn't return any data is not very useful, right? Also, at
the moment we haven't implemented yet any feature that let us insert any
data. That's why I've created a data migration for you that will insert
some data for you. You may notice that the example data contains some
Italian products... out of the scope of this tutorial, I strongly advise
you to google this products and if you ever happen to visit Italy, try
them. You won't regret!&lt;/p&gt;
&lt;p&gt;Going back to our data migration, you first have to create an empty one
with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./manage.py&lt;span class="w"&gt; &lt;/span&gt;makemigrations&lt;span class="w"&gt; &lt;/span&gt;--empty&lt;span class="w"&gt; &lt;/span&gt;catalog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then open the file that has been created under
&lt;strong&gt;catalog/migrations/&lt;/strong&gt; named &lt;strong&gt;0002_.....&lt;/strong&gt; (your name will be
different from mine, so just edit the one starting with 0002 and you
will be fine) and fill it with this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;migrations&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_initial_products&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schema_editor&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;Product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;catalog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Product&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Salame&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Salame Toscano&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Olio Balsamico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Olio balsamico di Modena&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Parmigiano&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Parmigiano Reggiano&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;8.50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Olio&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Olio Oliva Toscano&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Porchetta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Porchetta toscana cotta a legna&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;7.50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Cantucci&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Cantucci di Prato&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vino Rosso&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vino Rosso del Chianti&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;9.50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Brigidini&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Brigidini di Lamporecchio&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;3.50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Migration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;migrations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Migration&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;catalog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0001_initial&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;operations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="n"&gt;migrations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RunPython&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;create_initial_products&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to apply the migration we just created, just do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./manage.py&lt;span class="w"&gt; &lt;/span&gt;migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you try to test the API again from the command line, you will get
these products back:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;http&lt;span class="w"&gt; &lt;/span&gt;http://127.0.0.1:8000/products/
HTTP/1.0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;OK
Allow:&lt;span class="w"&gt; &lt;/span&gt;GET,&lt;span class="w"&gt; &lt;/span&gt;HEAD,&lt;span class="w"&gt; &lt;/span&gt;OPTIONS
Content-Type:&lt;span class="w"&gt; &lt;/span&gt;application/json
Date:&lt;span class="w"&gt; &lt;/span&gt;Wed,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Sep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2016&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:29:36&lt;span class="w"&gt; &lt;/span&gt;GMT
Server:&lt;span class="w"&gt; &lt;/span&gt;WSGIServer/0.1&lt;span class="w"&gt; &lt;/span&gt;Python/2.7.11
Vary:&lt;span class="w"&gt; &lt;/span&gt;Accept,&lt;span class="w"&gt; &lt;/span&gt;Cookie
X-Frame-Options:&lt;span class="w"&gt; &lt;/span&gt;SAMEORIGIN

&lt;span class="o"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Salame Toscano&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Salame&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12.00&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Olio balsamico di Modena&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Olio Balsamico&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.00&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Parmigiano Reggiano&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Parmigiano&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;8.50&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Olio Oliva Toscano&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Olio&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;13.00&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Porchetta toscana cotta a legna&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Porchetta&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7.50&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cantucci di Prato&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Cantucci&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4.00&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Vino Rosso del Chianti&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Vino Rosso&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;9.50&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Brigidini di Lamporecchio&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Brigidini&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.50&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again, you can get up to this point with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;tutorial-1.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;One more thing...&lt;/h3&gt;
&lt;p&gt;No, we are not going to present a new amazing device, I'm sorry, but I
want to show you a nice Django Rest Framework feature you can have
without much additional work. Edit &lt;strong&gt;settings.py&lt;/strong&gt; and add
&lt;strong&gt;rest_framework&lt;/strong&gt; to the list of &lt;strong&gt;INSTALLED_APPS&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.admin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.contenttypes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.sessions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.messages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.staticfiles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;rest_framework&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;catalog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, if you are still running the Django app, try to visit this url from
your browser: &lt;a href="http://127.0.0.1:8000/products/"&gt;http://127.0.0.1:8000/products/&lt;/a&gt;&lt;br&gt;
That's very nice, isn't it? You can have browsable APIs at no cost.&lt;/p&gt;
&lt;h3&gt;Wrapping Up&lt;/h3&gt;
&lt;p&gt;I've mentioned at the beginning that this is just the first part of my
API tutorial. In the &lt;a href="https://www.andreagrandi.it/2016/10/01/creating-a-production-ready-api-with-python-and-django-rest-framework-part-2/"&gt;next
part&lt;/a&gt;
I will show you how to let the consumer of your API add some products
and leave reviews (we will introduce a new model for this). Also, we
will see how to set proper permissions to these new API methods so that
only admin users will be able to add products while normal users will be
able to add reviews. So, if you feel ready, you can begin to follow the
&lt;a href="https://www.andreagrandi.it/2016/10/01/creating-a-production-ready-api-with-python-and-django-rest-framework-part-2/"&gt;second part of this tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;Some parts of this tutorial and a few examples have been taken directly
from the original &lt;a href="http://www.django-rest-framework.org/tutorial/quickstart/"&gt;Django Rest Framework
tutorial&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 28 Sep 2016 13:47:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2016-09-28:/2016/09/28/creating-production-ready-api-python-django-rest-framework-part-1/</guid><category>Development</category><category>API</category><category>Django</category><category>framework</category><category>Python</category><category>rest</category><category>tutorial</category></item><item><title>Using Python ipdb from Jupyter</title><link>https://www.andreagrandi.it/2016/05/10/using-python-ipdb-from-jupyter/</link><description>&lt;p&gt;If we try to use the usual ipdb commands from a Jupyter (IPython
notebook)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ipdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;ipdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_trace&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;we will get a similar error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;--------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;MultipleInstanceError&lt;/span&gt;                     &lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f2b356251c56&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="o"&gt;----&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ipdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;ipdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_trace&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
    &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nnn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="mf"&gt;.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ipdb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="c1"&gt;# You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/.&lt;/span&gt;
    &lt;span class="mi"&gt;15&lt;/span&gt; 
&lt;span class="o"&gt;---&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ipdb.__main__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;set_trace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post_mortem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;runcall&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;runeval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;launch_ipdb_on_exception&lt;/span&gt;
    &lt;span class="mi"&gt;17&lt;/span&gt; 
    &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt;                       &lt;span class="c1"&gt;# please pyflakes&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nnn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="mf"&gt;.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ipdb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;__main__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="mi"&gt;71&lt;/span&gt;         &lt;span class="c1"&gt;# the instance method will create a new one without loading the config.&lt;/span&gt;
    &lt;span class="mi"&gt;72&lt;/span&gt;         &lt;span class="c1"&gt;# i.e: if we are in an embed instance we do not want to load the config.&lt;/span&gt;
&lt;span class="o"&gt;---&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;73&lt;/span&gt;         &lt;span class="n"&gt;ipapp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TerminalIPythonApp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="mi"&gt;74&lt;/span&gt;         &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_ipython&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="mi"&gt;75&lt;/span&gt;         &lt;span class="n"&gt;def_colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nnn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="mf"&gt;.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;traitlets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;configurable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pyc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;413&lt;/span&gt;             &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;MultipleInstanceError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="mi"&gt;414&lt;/span&gt;                 &lt;span class="s1"&gt;&amp;#39;Multiple incompatible subclass instances of &amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;415&lt;/span&gt;                 &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; are being created.&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;
    &lt;span class="mi"&gt;416&lt;/span&gt;             &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="mi"&gt;417&lt;/span&gt;

&lt;span class="n"&gt;MultipleInstanceError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Multiple&lt;/span&gt; &lt;span class="n"&gt;incompatible&lt;/span&gt; &lt;span class="n"&gt;subclass&lt;/span&gt; &lt;span class="n"&gt;instances&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;TerminalIPythonApp&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;being&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The solution is to use Tracer instead:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.core.debugger&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Tracer&lt;/span&gt;
&lt;span class="n"&gt;Tracer&lt;/span&gt;&lt;span class="p"&gt;()()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source:&lt;/strong&gt; &lt;a href="http://stackoverflow.com/questions/35613249/using-ipdb-to-debug-python-code-in-one-cell-jupyter-or-ipython"&gt;http://stackoverflow.com/questions/35613249/using-ipdb-to-debug-python-code-in-one-cell-jupyter-or-ipython&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 10 May 2016 10:13:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2016-05-10:/2016/05/10/using-python-ipdb-from-jupyter/</guid><category>Development</category><category>debugging</category><category>ipdb</category><category>Python</category></item><item><title>How to publish a Python package to PyPI</title><link>https://www.andreagrandi.it/2016/04/10/how-to-publish-a-python-package-to-pypi/</link><description>&lt;p&gt;&lt;strong&gt;PyPI&lt;/strong&gt; is the &lt;strong&gt;Python Package Index&lt;/strong&gt;, that archive that let you
install a package using pip, for example: &lt;strong&gt;pip install Flask&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the past days I started writing a &lt;strong&gt;Python API client&lt;/strong&gt; for
&lt;strong&gt;&lt;a href="https://www.toshl.com"&gt;Toshl&lt;/a&gt;&lt;/strong&gt; expense manager and I decided to
publish the library on PyPI. You can have a look at my library
here &lt;a href="https://github.com/andreagrandi/toshl-python"&gt;https://github.com/andreagrandi/toshl-python&lt;/a&gt; (please note: it's
still in development and &lt;a href="https://developer.toshl.com/"&gt;Toshl API&lt;/a&gt; is
not even public yet) in case you are not sure how to structure it.&lt;/p&gt;
&lt;p&gt;I found a &lt;a href="http://peterdowns.com/posts/first-time-with-pypi.html"&gt;nice
guide&lt;/a&gt; but it
wasn't complete (for example it didn't say how to sign packages) so I
decided to rewrite it adding more information.&lt;/p&gt;
&lt;h3&gt;Create PyPI accounts&lt;/h3&gt;
&lt;p&gt;To publish packages on PyPI you need to create two accounts: one for the
&lt;a href="http://pypi.python.org/pypi?%3Aaction=register_form"&gt;production server&lt;/a&gt;
and another one for the &lt;a href="http://testpypi.python.org/pypi?%3Aaction=register_form"&gt;test
server&lt;/a&gt;. When
you register, please specify (if you have one, but I really hope you do)
the &lt;strong&gt;PGP&lt;/strong&gt; id of your public key. Once the accounts are created, you
need to create a file named &lt;strong&gt;.pypirc&lt;/strong&gt; in your \$HOME folder containing
the following configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;distutils&lt;span class="o"&gt;]&lt;/span&gt;
index-servers&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
pypi
pypitest

&lt;span class="o"&gt;[&lt;/span&gt;pypi&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://pypi.python.org/pypi
&lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_username
&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_password

&lt;span class="o"&gt;[&lt;/span&gt;pypitest&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://testpypi.python.org/pypi
&lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_username
&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;your_password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Please substitute &lt;strong&gt;your_username&lt;/strong&gt; and &lt;strong&gt;your_password&lt;/strong&gt; with the
details you sent during the registration.&lt;/p&gt;
&lt;h3&gt;Preparing the package&lt;/h3&gt;
&lt;p&gt;I assume you have structured your library in the proper way and have
included a &lt;strong&gt;setup.py&lt;/strong&gt; with all the configuration (it's not something
specific to PyPI so you should have done it already). If you haven't I
remember you can give a look at my library
here &lt;a href="https://github.com/andreagrandi/toshl-python"&gt;https://github.com/andreagrandi/toshl-python&lt;/a&gt; in particular to the
&lt;strong&gt;setup.py&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;find_packages&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;toshl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.0.3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com/andreagrandi/toshl-python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;download_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com/andreagrandi/toshl-python/tarball/0.0.3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Andrea Grandi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;author_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a.grandi@gmail.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Python client library for Toshl API.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tests&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="n"&gt;zip_safe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;include_package_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;platforms&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;any&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MIT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;requests==2.9.1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Upload the package to PyPI Test server&lt;/h3&gt;
&lt;p&gt;The first time you upload the package you will need to register it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;setup.py&lt;span class="w"&gt; &lt;/span&gt;register&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;pypitest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then you will need to build the package and upload it (please note
I'm using the &lt;strong&gt;--sign&lt;/strong&gt; to sign the package with PGP):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;setup.py&lt;span class="w"&gt; &lt;/span&gt;sdist&lt;span class="w"&gt; &lt;/span&gt;upload&lt;span class="w"&gt; &lt;/span&gt;--sign&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;pypitest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Upload the package to PyPI production server&lt;/h3&gt;
&lt;p&gt;Once you have verified that you are able to build and upload the package
to the test server (without getting any errors), you should upload it to
the production server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;setup.py&lt;span class="w"&gt; &lt;/span&gt;register&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;pypi
python&lt;span class="w"&gt; &lt;/span&gt;setup.py&lt;span class="w"&gt; &lt;/span&gt;sdist&lt;span class="w"&gt; &lt;/span&gt;upload&lt;span class="w"&gt; &lt;/span&gt;--sign&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;pypi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is everything you need to do if you want to publish a Python
package on PyPI. Happy coding!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 10 Apr 2016 19:05:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2016-04-10:/2016/04/10/how-to-publish-a-python-package-to-pypi/</guid><category>Development</category><category>pip</category><category>pypi</category><category>Python</category></item><item><title>Using a light sensor with BBC micro:bit and MicroPython</title><link>https://www.andreagrandi.it/2016/02/08/using-a-light-sensor-with-bbc-microbit-and-micropython/</link><description>&lt;p&gt;A &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Photoresistor"&gt;light sensor&lt;/a&gt;&lt;/strong&gt; is a
small component with a particular characteristic: it is basically a
resistor and its resistance decreases if the light is more intense. To
use it with micro:bit we need to use one of the &lt;strong&gt;analogic ports&lt;/strong&gt;. To
build this circuit you will need a &lt;strong&gt;breadboard&lt;/strong&gt;, &lt;strong&gt;3 jumper wires&lt;/strong&gt;, a
&lt;strong&gt;10k resistance&lt;/strong&gt; and possibly a &lt;strong&gt;&lt;a href="https://www.kitronik.co.uk/5609-prototyping-system-for-the-bbc-microbit.html"&gt;Kitronik breadboard
kit&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;The project&lt;/h3&gt;
&lt;p&gt;I wanted to realise a simple project where, depending on the light
intensity captured by the light sensor, the &lt;strong&gt;micro:bit&lt;/strong&gt; shows an image
of the &lt;strong&gt;Sun&lt;/strong&gt; if the light is intense and an image of the &lt;strong&gt;Moon&lt;/strong&gt; if
the light is less intense.&lt;/p&gt;
&lt;p&gt;Here is the complete &lt;strong&gt;circuit scheme&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_schema_light.png"&gt;&lt;img alt="microbit_breadboard_schema_light" src="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_schema_light.png" width="40%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;"Image Copyright © Kitronik"&lt;/h6&gt;
&lt;p&gt;and here is a picture of the &lt;strong&gt;finished project&lt;/strong&gt; I created:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_example_2.jpg"&gt;&lt;img alt="microbit_breadboard_example_2" src="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_example_2.jpg" width="40%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;source code&lt;/strong&gt; I needed is available here:&lt;/p&gt;
&lt;p&gt;
&lt;script src="https://gist.github.com/andreagrandi/99a09be27c9626b1119d.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;and as a demo I realised this small &lt;strong&gt;video&lt;/strong&gt;:&lt;/p&gt;
&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/6vLE_AQc4Bc" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Mon, 08 Feb 2016 22:49:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2016-02-08:/2016/02/08/using-a-light-sensor-with-bbc-microbit-and-micropython/</guid><category>Development</category><category>bbc</category><category>breadboard</category><category>embedded</category><category>microbit</category><category>micropython</category><category>howto</category><category>python</category></item><item><title>Prototyping BBC micro:bit projects with Kitronik breadboard kit</title><link>https://www.andreagrandi.it/2016/02/07/prototyping-bbc-microbit-projects-with-kitronik-breadboard-kit/</link><description>&lt;p&gt;&lt;strong&gt;BBC micro:bit&lt;/strong&gt; has a few &lt;a href="http://microbit-micropython.readthedocs.org/en/latest/pin.html"&gt;IO
pins&lt;/a&gt;
that can be used to interact with external devices. The problem with the
board is that it's not easy to connect the classic jumper wires (those
that we normally connect to a breadboard) to the &lt;strong&gt;micro:bit&lt;/strong&gt;, unless
using a &lt;a href="https://en.wikipedia.org/wiki/Crocodile_clip"&gt;crocodile clip&lt;/a&gt;
and being limited to just 3 pins.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.kitronik.co.uk/5609-prototyping-system-for-the-bbc-microbit.html"&gt;&lt;strong&gt;Kitronik breadboard
kit&lt;/strong&gt;&lt;/a&gt;
solves this problem, offering an interface where the micro:bit can be
plugged and all the pins are easily connectable to the breadboard using
normal &lt;a href="https://www.adafruit.com/products/826"&gt;male/female jumper wires&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've built a very simple circuit following an example you can find on
this manual &lt;a href="https://www.kitronik.co.uk/pdf/5603_inventors_kit_for_the_bbc_microbit_tutorial_book.pdf"&gt;https://www.kitronik.co.uk/pdf/5603_inventors_kit_for_the_bbc_microbit_tutorial_book.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_example_1.jpg"&gt;&lt;img alt="microbit_breadboard_example_1" src="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_example_1.jpg" width="40%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To build the circuit you also need &lt;strong&gt;4 male/female jumper wires&lt;/strong&gt; and
&lt;strong&gt;two buttons&lt;/strong&gt;. All this circuit does is to connect the buttons to the
&lt;strong&gt;micro:bit&lt;/strong&gt; pins that relate to those buttons. Basically pressing
those buttons is the same as pressing &lt;strong&gt;button A&lt;/strong&gt; or &lt;strong&gt;button B&lt;/strong&gt; on
the &lt;strong&gt;micro:bit&lt;/strong&gt; board. Here you can see the schema in detail:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2016/02/Screenshot-2016-02-07-14.30.36.png"&gt;&lt;img alt="Screenshot 2016-02-0714.30.36" src="https://www.andreagrandi.it/images/2016/02/Screenshot-2016-02-07-14.30.36.png" width="40%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id="image-copyright-kitronik" style="text-align: center;"&gt;"Image Copyright © Kitronik"&lt;/h6&gt;
&lt;p&gt;I've also made a short &lt;strong&gt;video&lt;/strong&gt; so that you can see it in action:&lt;/p&gt;
&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/0Zfa1sBP7yI" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;

&lt;p&gt;And of course the &lt;strong&gt;source code&lt;/strong&gt; is available too:&lt;/p&gt;
&lt;p&gt;
&lt;script src="https://gist.github.com/andreagrandi/9f66f6806d0ce577bada.js"&gt;&lt;/script&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 07 Feb 2016 21:47:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2016-02-07:/2016/02/07/prototyping-bbc-microbit-projects-with-kitronik-breadboard-kit/</guid><category>Development</category><category>bbc</category><category>embedded</category><category>microbit</category><category>micropython</category><category>python</category></item><item><title>Using BBC MicroBit accelerometer with Python</title><link>https://www.andreagrandi.it/2016/01/26/using-bbc-microbit-accelerometer-with-python/</link><description>&lt;p&gt;In these days I'm having a bit of fun with &lt;strong&gt;&lt;a href="https://www.microbit.co.uk/"&gt;BBC
MicroBit&lt;/a&gt;&lt;/strong&gt; board and I'm learning how to
use the different sensors available. The latest one I wanted to try was
the accelerometer. The board can "sense" if you are moving it in any of
the 3 dimensional axes: X, Y, Z. According to the
&lt;a href="https://microbit-micropython.readthedocs.org/en/latest/accelerometer.html"&gt;documentation&lt;/a&gt;
there are four methods available that can be used to get these
values: &lt;code&gt;microbit.accelerometer.get_values()&lt;/code&gt; will return you a tuple with all the 3 values, 
while  &lt;code&gt;microbit.accelerometer.get_x()&lt;/code&gt;, &lt;code&gt;microbit.accelerometer.get_y()&lt;/code&gt;, &lt;code&gt;microbit.accelerometer.get_z()&lt;/code&gt;
will give you the single values.&lt;/p&gt;
&lt;p&gt;The documentation on the official website doesn't explain much and for
example I didn't even know what was the range of the values I can get
back from these methods (by the way it's &lt;strong&gt;between -1024&lt;/strong&gt; and
&lt;strong&gt;1024&lt;/strong&gt;), so I decided to play with the code directly and write a very
simple example. The small example I wrote, shows a smile on the board
display if you keep it straight and shows a sad face if you bend it.&lt;/p&gt;
&lt;p&gt;This is the result:&lt;/p&gt;
&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/LX8fYBsOxA0" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;

&lt;p&gt;and this is all the needed code of the application:&lt;/p&gt;
&lt;p&gt;
&lt;script src="https://gist.github.com/andreagrandi/f4a7c8ee8597dde3070d.js"&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;p&gt;In the next days I will try to play with more sensors and to publish
other examples.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 26 Jan 2016 22:41:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2016-01-26:/2016/01/26/using-bbc-microbit-accelerometer-with-python/</guid><category>Development</category><category>bbc</category><category>microbit</category><category>Python</category><category>howto</category></item><item><title>Using Python PyPy in a virtual environment</title><link>https://www.andreagrandi.it/2015/12/18/using-python-pypy-in-a-virtual-environment/</link><description>&lt;p&gt;Sometimes we need to test if our code also works with
&lt;strong&gt;&lt;a href="http://pypy.org/"&gt;PyPy&lt;/a&gt;&lt;/strong&gt; implementation of &lt;strong&gt;Python&lt;/strong&gt;. Assuming you
have already installed it in your system, first find out where it is
installed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;which&lt;span class="w"&gt; &lt;/span&gt;pypy
/usr/local/bin/pypy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then you need &lt;strong&gt;mkvirtualenv&lt;/strong&gt; to create a virtual environment that will
use this runtime:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkvirtualenv&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin/pypy&lt;span class="w"&gt; &lt;/span&gt;pypy-test
Running&lt;span class="w"&gt; &lt;/span&gt;virtualenv&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;interpreter&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin/pypy
New&lt;span class="w"&gt; &lt;/span&gt;pypy&lt;span class="w"&gt; &lt;/span&gt;executable&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pypy-test/bin/pypy
Installing&lt;span class="w"&gt; &lt;/span&gt;setuptools,&lt;span class="w"&gt; &lt;/span&gt;pip,&lt;span class="w"&gt; &lt;/span&gt;wheel...done.
&lt;span class="o"&gt;(&lt;/span&gt;pypy-test&lt;span class="o"&gt;)&lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;~&lt;span class="w"&gt;  &lt;/span&gt;python
Python&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.7.10&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;f3ad1e1e1d6215e20d34bb65ab85ff9188c9f559,&lt;span class="w"&gt; &lt;/span&gt;Sep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;01&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;06&lt;/span&gt;:26:30&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;PyPy&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.6.1&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;GCC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.2.1&lt;span class="w"&gt; &lt;/span&gt;Compatible&lt;span class="w"&gt; &lt;/span&gt;Apple&lt;span class="w"&gt; &lt;/span&gt;LLVM&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;.1.0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;clang-602.0.53&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;darwin
Type&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;more&lt;span class="w"&gt; &lt;/span&gt;information.
&amp;gt;&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's it! You can now use this virtual environment to run your Python
application using PyPy environment.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 18 Dec 2015 17:29:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-12-18:/2015/12/18/using-python-pypy-in-a-virtual-environment/</guid><category>HowTo, Python</category><category>pypy</category><category>Python</category></item><item><title>Getting started with BBC MicroBit and Python</title><link>https://www.andreagrandi.it/2015/12/10/getting-started-with-bbc-microbit-and-python/</link><description>&lt;p&gt;A few days ago I had the great opportunity to attend an event organised
in collaboration with &lt;strong&gt;&lt;a href="https://www.python.org/"&gt;Python Software
Foundation&lt;/a&gt;&lt;/strong&gt;, a few &lt;strong&gt;primary school
teachers&lt;/strong&gt; and hosted by &lt;strong&gt;&lt;a href="http://www.computingatschool.org.uk/"&gt;Computing at
School&lt;/a&gt;&lt;/strong&gt;, in &lt;strong&gt;London&lt;/strong&gt;. The
meeting was organised by &lt;strong&gt;Yvonne Walker&lt;/strong&gt; (from CAS) and &lt;strong&gt;Nicholas
Tollervey&lt;/strong&gt; (PSF). The aim of the meeting was for teachers and
developers to meet and discuss the opportunities offered
by &lt;strong&gt;&lt;a href="https://micropython.org/"&gt;MicroPython&lt;/a&gt;&lt;/strong&gt; on the &lt;strong&gt;&lt;a href="https://www.microbit.co.uk/"&gt;BBC
micro:bit&lt;/a&gt;&lt;/strong&gt;. During the event a
&lt;strong&gt;BBC&lt;/strong&gt; &lt;strong&gt;micro:bit&lt;/strong&gt; board was loaned to each person for the purpose of
developing Python scripts, MicroPython itself or educational resources
for the &lt;strong&gt;BBC micro:bit&lt;/strong&gt;. Nicholas made it very clear that there is an
&lt;strong&gt;NDA&lt;/strong&gt; in place until the device is delivered to the kids and explained
what we could or couldn't do.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2015/12/computing_at_school_microbit_reduced.jpg"&gt;&lt;img alt="microbit" src="https://www.andreagrandi.it/images/2015/12/computing_at_school_microbit_reduced.jpg" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;The Board&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2015/12/bbcfullbleed.jpg"&gt;&lt;img alt="board" src="https://www.andreagrandi.it/images/2015/12/bbcfullbleed.jpg" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The board is a 4 x 5 cm device with an &lt;strong&gt;ARM Cortex-M0&lt;/strong&gt; processor,
&lt;strong&gt;accelerometer&lt;/strong&gt; and magnetometer sensors, &lt;strong&gt;Bluetooth&lt;/strong&gt; and &lt;strong&gt;USB
connectivity&lt;/strong&gt;, a &lt;strong&gt;display&lt;/strong&gt; consisting of 25 LEDs, &lt;strong&gt;two programmable
buttons&lt;/strong&gt;, and can be powered by either USB or an external battery pack
(source: &lt;a href="https://en.wikipedia.org/wiki/Micro_Bit"&gt;https://en.wikipedia.org/wiki/Micro_Bit&lt;/a&gt; ).&lt;/p&gt;
&lt;h2&gt;Flashing the firmware&lt;/h2&gt;
&lt;p&gt;Once you get a new board, it probably doesn't have a proper firmware and
application flashed. I suggest you to download the &lt;strong&gt;Python MicroBit
REPL&lt;/strong&gt; from this repository: &lt;a href="https://github.com/ntoll/microrepl"&gt;https://github.com/ntoll/microrepl&lt;/a&gt;&lt;br&gt;
All you need to do is to connect the board to your computer, using a
&lt;strong&gt;micro-USB cable&lt;/strong&gt;. The device will be mounted as a volume. At this
point, drag &amp;amp; drop the file called
&lt;strong&gt;&lt;a href="https://github.com/ntoll/microrepl/blob/master/firmware.hex"&gt;firmware.hex&lt;/a&gt;&lt;/strong&gt;
into the mounted volume. The firmware will be flashed and during the
operation you will see a yellow led flashing.&lt;/p&gt;
&lt;h2&gt;Using MicroPython micro:bit REPL&lt;/h2&gt;
&lt;p&gt;To start writing some Python code on micro:bit you first need to clone
this &lt;a href="https://github.com/ntoll/microrepl"&gt;repository&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git@github.com:ntoll/microrepl.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;once you have cloned the repository, you need to install the Python
dependencies (I suggest you to do it from inside a &lt;strong&gt;virtualenv&lt;/strong&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;start the MicroPython REPL&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python&lt;span class="w"&gt; &lt;/span&gt;microrepl.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and the Python shell will open, so you can start writing commands, like
this one&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;microbit&lt;span class="o"&gt;)&lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;microrepl&lt;span class="w"&gt; &lt;/span&gt;git:&lt;span class="o"&gt;(&lt;/span&gt;master&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;microrepl.py
Quit:&lt;span class="w"&gt; &lt;/span&gt;Ctrl+&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Stop&lt;span class="w"&gt; &lt;/span&gt;program:&lt;span class="w"&gt; &lt;/span&gt;Ctrl+C&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Reset:&lt;span class="w"&gt; &lt;/span&gt;Ctrl+D
Type&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;help()&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;without&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;quotes&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;press&lt;span class="w"&gt; &lt;/span&gt;ENTER.

&amp;gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;import&lt;span class="w"&gt; &lt;/span&gt;this
The&lt;span class="w"&gt; &lt;/span&gt;Zen&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;MicroPython,&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;Nicholas&lt;span class="w"&gt; &lt;/span&gt;H.Tollervey

Code,
Hack&lt;span class="w"&gt; &lt;/span&gt;it,
Less&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;more,
Keep&lt;span class="w"&gt; &lt;/span&gt;it&lt;span class="w"&gt; &lt;/span&gt;simple,
Small&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;beautiful,

Be&lt;span class="w"&gt; &lt;/span&gt;brave!&lt;span class="w"&gt; &lt;/span&gt;Break&lt;span class="w"&gt; &lt;/span&gt;things!&lt;span class="w"&gt; &lt;/span&gt;Learn&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;have&lt;span class="w"&gt; &lt;/span&gt;fun!
Express&lt;span class="w"&gt; &lt;/span&gt;yourself&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;MicroPython.

Happy&lt;span class="w"&gt; &lt;/span&gt;hacking!&lt;span class="w"&gt; &lt;/span&gt;:-&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;BBC micro:bit MicroPython Editor&lt;/h2&gt;
&lt;p&gt;Typing all the Python commands directly into the shell can be a bit
difficult. You can use a very nice and dedicated editor to write code
and produce the compiled application for the micro:bit. All you need to
do is clone this &lt;a href="https://github.com/ntoll/upyed"&gt;repository&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git@github.com:ntoll/upyed.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Open the file named &lt;strong&gt;editor.html&lt;/strong&gt; with your browser and start writing
your code. When your code is done, you can generate the &lt;strong&gt;.hex&lt;/strong&gt; file
clicking on &lt;strong&gt;Download&lt;/strong&gt; button. To load the compiled application you
just need to drag &amp;amp; drop the .hex file to the mounted device, exactly
like you did the first time to flash it. If you need a reference for all
the methods and libraries available, you can consult the official
documentation
here &lt;a href="http://microbit-micropython.readthedocs.org/en/latest/index.html"&gt;http://microbit-micropython.readthedocs.org/en/latest/index.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ntoll/microrepl"&gt;https://github.com/ntoll/microrepl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ntoll/upyed"&gt;https://github.com/ntoll/upyed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.microbit.co.uk/"&gt;https://www.microbit.co.uk/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://microbit-micropython.readthedocs.org/en/latest/index.html"&gt;http://microbit-micropython.readthedocs.org/en/latest/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 10 Dec 2015 23:48:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-12-10:/2015/12/10/getting-started-with-bbc-microbit-and-python/</guid><category>HowTo, Microbit, Python</category><category>microbit</category><category>psf</category></item><item><title>Fix encfs under OSX after upgrading to 10.11.2</title><link>https://www.andreagrandi.it/2015/12/09/fix-encfs-under-osx-after-upgrading-to-10-11-2/</link><description>&lt;p&gt;After having upgraded &lt;strong&gt;OSX&lt;/strong&gt; to &lt;strong&gt;10.11.2&lt;/strong&gt; on my MacBook, I noticed
that my &lt;strong&gt;encfs&lt;/strong&gt; volume didn't mount after reboot. I tried to run the
script manually and all I got was this error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dyld:&lt;span class="w"&gt; &lt;/span&gt;Symbol&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;found:&lt;span class="w"&gt; &lt;/span&gt;__ZN5boost7archive17xml_iarchive_implINS0_12xml_iarchiveEE13load_overrideERNS0_15class_name_typeEi
&lt;span class="w"&gt;  &lt;/span&gt;Referenced&lt;span class="w"&gt; &lt;/span&gt;from:&lt;span class="w"&gt; &lt;/span&gt;/usr/local/Cellar/encfs/1.8.1/lib/libencfs.6.dylib
&lt;span class="w"&gt;  &lt;/span&gt;Expected&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;/usr/local/lib/libboost_serialization-mt.dylib
&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/local/Cellar/encfs/1.8.1/lib/libencfs.6.dylib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I quickly found that was a common problem caused by a new version of
&lt;strong&gt;Boost&lt;/strong&gt; being
installed: &lt;a href="https://github.com/Homebrew/homebrew/issues/46254"&gt;https://github.com/Homebrew/homebrew/issues/46254&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To fix it, you just need to &lt;strong&gt;reinstall encfs&lt;/strong&gt; using this command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew&lt;span class="w"&gt; &lt;/span&gt;reinstall&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;encfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 09 Dec 2015 22:47:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-12-09:/2015/12/09/fix-encfs-under-osx-after-upgrading-to-10-11-2/</guid><category>HowTo, OSX</category><category>bug</category><category>encfs</category><category>security</category></item><item><title>Getting a free SSL certificate from Letsencrypt and configuring it on Nginx with automatic renewal</title><link>https://www.andreagrandi.it/2015/12/06/getting-a-free-ssl-certificate-from-letsencrypt-and-configuring-it-on-nginx-with-automatic-renewal/</link><description>&lt;p&gt;Finally &lt;strong&gt;&lt;a href="https://letsencrypt.org/"&gt;Letsencrypt&lt;/a&gt;&lt;/strong&gt; went to &lt;strong&gt;public
beta&lt;/strong&gt; and I really couldn't wait to use it on my VPS (where this blog
is hosted). Until few days ago I was using a &lt;strong&gt;free SSL&lt;/strong&gt; certificate
from &lt;a href="https://www.startssl.com/"&gt;StartSSL&lt;/a&gt;. The service is nice and I'm
grateful to them for this important resource they are providing for
free, but it must be said that their renewal procedure isn't one of the
most user friendly.&lt;/p&gt;
&lt;p&gt;For people who don't know the service yet, &lt;strong&gt;Letsencrypt&lt;/strong&gt; not only
gives &lt;strong&gt;free SSL certificates&lt;/strong&gt;, they also provide a command line tool
that people can use to request a new certificate or to renew an existing
one. This means that you don't have to worry anymore if/when your
certificate expires, you can set a crontab command and have the
certificate &lt;strong&gt;automatically renewed&lt;/strong&gt; for you.&lt;/p&gt;
&lt;h2&gt;Client installation&lt;/h2&gt;
&lt;p&gt;To request a SSL certificate you need to install their command line
utility. Unless it has already been packaged for your distribution, for
the moment it's much easier to get it from git as they explain in their
&lt;a href="https://letsencrypt.readthedocs.org/en/latest/using.html#installation"&gt;installation
instructions&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/letsencrypt/letsencrypt
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;letsencrypt
./letsencrypt-auto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Getting the SSL certificate&lt;/h2&gt;
&lt;p&gt;There are a few different options available to request a certificate,
but the easiest one is to use the &lt;strong&gt;--webroot&lt;/strong&gt; option, specifying the
document root of your website so that the client will be able to put
there a verification (temporary) file that will be served to the remote
service and used as verification method. In my case I only needed this
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./letsencrypt-auto&lt;span class="w"&gt; &lt;/span&gt;certonly&lt;span class="w"&gt; &lt;/span&gt;--webroot&lt;span class="w"&gt; &lt;/span&gt;-w&lt;span class="w"&gt; &lt;/span&gt;/var/www/andreagrandi.it/&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;www.andreagrandi.it&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;andreagrandi.it&lt;span class="w"&gt; &lt;/span&gt;--email&lt;span class="w"&gt; &lt;/span&gt;myemail@myprovider.com&lt;span class="w"&gt; &lt;/span&gt;--renew-by-default&lt;span class="w"&gt; &lt;/span&gt;--agree-tos
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Please note that I had to specify both www.andreagrandi.it and
andreagrandi.it as domains, otherwise it would have been invalid when
requesting just andreagrandi.it resources.&lt;/p&gt;
&lt;h2&gt;Configuration files and certificates installation&lt;/h2&gt;
&lt;p&gt;The command above will save all the configuration under
&lt;strong&gt;/etc/letsencrypt/&lt;/strong&gt; and all the generated certificates under
&lt;strong&gt;/etc/letsencrypt/live/www.andreagrandi.it/*.pem&lt;/strong&gt; (all the *.pem
files here are symbolic links to the current certificate). If you are
using &lt;strong&gt;Nginx&lt;/strong&gt; the only files you need are &lt;strong&gt;fullchain.pem&lt;/strong&gt; and
&lt;strong&gt;privkey.pem&lt;/strong&gt; and you can set them in your Nginx configuration using
these two parameters:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssl_certificate&lt;span class="w"&gt; &lt;/span&gt;/etc/letsencrypt/live/www.andreagrandi.it/fullchain.pem&lt;span class="p"&gt;;&lt;/span&gt;
ssl_certificate_key&lt;span class="w"&gt; &lt;/span&gt;/etc/letsencrypt/live/www.andreagrandi.it/privkey.pem&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In case you want to have a look at my full Nginx configuration file, as
reference, you can find it
here &lt;a href="https://gist.github.com/andreagrandi/8b194c99cd3e77fdb5a8"&gt;https://gist.github.com/andreagrandi/8b194c99cd3e77fdb5a8&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Automatic renewal&lt;/h2&gt;
&lt;p&gt;The last thing to be configured is a crontab rule to call the script
every... 2 months. Why 2 months? Letsencrypt SSL &lt;strong&gt;certificates expire
in 3 months&lt;/strong&gt;. Usually SSL certificates are valid at least for 1 year,
but Letsencrypt decided to make it 3 months to incentivate the
automation of the renewal. I set it to 2 months, so if anything goes
wrong I still have plenty of time to do it manually. To edit crontab for
root user execute &lt;strong&gt;crontab -e&lt;/strong&gt; and add this line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*/2&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;/root/letsencrypt/letsencrypt-auto&lt;span class="w"&gt; &lt;/span&gt;certonly&lt;span class="w"&gt; &lt;/span&gt;--webroot&lt;span class="w"&gt; &lt;/span&gt;-w&lt;span class="w"&gt; &lt;/span&gt;/var/www/andreagrandi.it/&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;www.andreagrandi.it&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;andreagrandi.it&lt;span class="w"&gt; &lt;/span&gt;--email&lt;span class="w"&gt; &lt;/span&gt;email@domain.com&lt;span class="w"&gt; &lt;/span&gt;--renew-by-default&lt;span class="w"&gt; &lt;/span&gt;--agree-tos&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;service&lt;span class="w"&gt; &lt;/span&gt;nginx&lt;span class="w"&gt; &lt;/span&gt;reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Just a final note. You may have noticed that this website presents an
SSL certificate issued by COMODO. That's because I have
&lt;strong&gt;&lt;a href="https://www.cloudflare.com/"&gt;CloudFlare&lt;/a&gt;&lt;/strong&gt; in front of my website and
that's how their SSL strict option works (at least for free plans).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 06 Dec 2015 14:15:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-12-06:/2015/12/06/getting-a-free-ssl-certificate-from-letsencrypt-and-configuring-it-on-nginx-with-automatic-renewal/</guid><category>DevOps, HowTo, Linux</category><category>encryption</category><category>letsencrypt</category><category>security</category><category>ssl</category></item><item><title>Reversing a List in Python</title><link>https://www.andreagrandi.it/2015/10/11/reversing-a-list-in-python/</link><description>&lt;p&gt;Sometimes we need to reverse the order of the elements in a Python list.
While there can be many different ways of implementing this task, I
found three in particular that I appreciate for different reasons. Let's
define first a list of integers that we will reverse later.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;List slicing&lt;/h3&gt;
&lt;p&gt;This method can be a bit obscure at first read, but basically it slices
the whole list proceding in the reverse order:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Reversed method&lt;/h3&gt;
&lt;p&gt;We use the
&lt;strong&gt;&lt;a href="https://docs.python.org/2/library/functions.html#reversed"&gt;reversed&lt;/a&gt;&lt;/strong&gt; method
that returns an iterable object and a list comprehension to generate the
new list&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;reversed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Swapping values in place&lt;/h3&gt;
&lt;p&gt;This last method is more verbose and it basically divides the list in
two parts and swaps the first with sixth, the second with fifth, etc...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 11 Oct 2015 22:14:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-10-11:/2015/10/11/reversing-a-list-in-python/</guid><category>Development</category><category>lists</category><category>Python</category><category>reversed</category></item><item><title>How to configure EncFS on OSX 10.10 (Yosemite)</title><link>https://www.andreagrandi.it/2015/10/11/how-to-configure-encfs-on-osx-10-10-yosemite/</link><description>&lt;p&gt;With &lt;strong&gt;EncFS&lt;/strong&gt; it's possible to keep our data in almost any cloud
(Dropbox, OneDrive, etc...), having a good level of privacy and
security. Infact EncFS encrypt and decrypt our data automatically. It's
available for Linux as well and using a commercial solution (that is
currently unsupported) even on Windows.&lt;/p&gt;
&lt;h2&gt;Installing EncFS&lt;/h2&gt;
&lt;p&gt;EncFS can be installed from &lt;strong&gt;brew&lt;/strong&gt;. If you don't have brew package
manager installed on OSX you can install it using this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ruby&lt;span class="w"&gt; &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl&lt;span class="w"&gt; &lt;/span&gt;-fsSL&lt;span class="w"&gt; &lt;/span&gt;https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After brew, you need to install &lt;strong&gt;OSXFuse&lt;/strong&gt; from this
website &lt;a href="http://osxfuse.github.io"&gt;http://osxfuse.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Finally you can install &lt;strong&gt;encfs&lt;/strong&gt; using this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;homebrew/fuse/encfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Configuring the encrypted folder&lt;/h2&gt;
&lt;p&gt;Now that EncFS is installed, you can either mount an existing EncFS
volume or create a new one. In both cases the command is the same:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;encfs&lt;span class="w"&gt; &lt;/span&gt;~/Dropbox/Private&lt;span class="w"&gt; &lt;/span&gt;~/Private
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you are mounting an existing encrypted volume, you will be prompted
for the password. If you are creating a new encrypted volume you will be
asked some questions about EncFS parameters.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; if it's important for you to keep compatibility with
&lt;strong&gt;&lt;a href="https://www.boxcryptor.com/en/classic"&gt;BoxCryptor Classic&lt;/a&gt;&lt;/strong&gt; (in case
you want to use the same volume under Windows), please refer to this
other article I
wrote: &lt;a href="https://www.andreagrandi.it/2014/09/12/create-an-encfs-volume-compatible-with-boxcryptor-classic/"&gt;https://www.andreagrandi.it/2014/09/12/create-an-encfs-volume-compatible-with-boxcryptor-classic/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Mount the encrypted volume on startup&lt;/h2&gt;
&lt;p&gt;First of all you need to save the volume's password inside the OSX
keychain. Open the app &lt;strong&gt;Keychain Access&lt;/strong&gt; and create a new entry with
name &lt;strong&gt;encfs&lt;/strong&gt; and account value &lt;strong&gt;encfs&lt;/strong&gt;, then write your &lt;strong&gt;password&lt;/strong&gt;
and click &lt;strong&gt;Add&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2015/10/encfs_keychain_access.png"&gt;&lt;img alt="encfs_keychain_access" src="https://www.andreagrandi.it/images/2015/10/encfs_keychain_access.png" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the password is saved, &lt;strong&gt;open a text editor&lt;/strong&gt; and paste this script
and save it as &lt;strong&gt;encfs_mount.sh&lt;/strong&gt; inside your &lt;strong&gt;\$HOME&lt;/strong&gt; folder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# Secure EncFS Dropbox mounter by Daniel Widerin &amp;lt;daniel@widerin.net&amp;gt;&lt;/span&gt;

&lt;span class="nv"&gt;SOURCE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/Dropbox/Private
&lt;span class="nv"&gt;TARGET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/Private
&lt;span class="nv"&gt;VOLUME_TITLE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Private
&lt;span class="nv"&gt;KEYCHAIN_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;encfs&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;ENCFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/encfs

mount&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;/dev/null
&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-eq&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/sbin/diskutil&lt;span class="w"&gt; &lt;/span&gt;unmount&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Create new mountpoint &lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
mkdir&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;
chmod&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0700&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nv"&gt;$ENCFS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$SOURCE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--extpass&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;security 2&amp;gt;&amp;amp;1 &amp;gt;/dev/null find-generic-password -gl &amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$KEYCHAIN_PASSWORD&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39; |grep password|cut -d \\\&amp;quot; -f 2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-ovolname&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$VOLUME_TITLE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make it &lt;strong&gt;executable&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;~/encfs_mount.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Open &lt;strong&gt;AppleScript&lt;/strong&gt; editor and paste this text inside and save as an
app in the \$HOME folder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2015/10/Screenshot-2015-10-11-19.27.14.png"&gt;&lt;img alt="apple script" src="https://www.andreagrandi.it/images/2015/10/Screenshot-2015-10-11-19.27.14.png" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;shell&lt;span class="w"&gt; &lt;/span&gt;script&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/encfs_mount.sh&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, open "&lt;strong&gt;System Preferences&lt;/strong&gt;" -&amp;gt; "&lt;strong&gt;Users &amp;amp; Groups&lt;/strong&gt;" and
add the previously saved application.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2015/10/Screenshot-2015-10-11-19.27.44.png"&gt;&lt;img alt="system preferences" src="https://www.andreagrandi.it/images/2015/10/Screenshot-2015-10-11-19.27.44.png" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Final notes&lt;/h2&gt;
&lt;p&gt;At this point encfs is configured to be mounted at startup and to save
the encrypted files inside Dropbox. Please note: &lt;strong&gt;do not save anything
directly on &lt;code&gt;~/Dropbox/Private&lt;/code&gt;&lt;/strong&gt;, only read and save your files from
&lt;code&gt;~/Private&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.maketecheasier.com/install-encfs-mac/"&gt;https://www.maketecheasier.com/install-encfs-mac/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ninjatips.com/encrypt-dropbox-using-encfs/"&gt;http://ninjatips.com/encrypt-dropbox-using-encfs/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 11 Oct 2015 19:44:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-10-11:/2015/10/11/how-to-configure-encfs-on-osx-10-10-yosemite/</guid><category>HowTo, OSX, Sicurezza</category><category>cloud</category><category>encfs</category><category>encryption</category><category>OSX</category><category>security</category></item><item><title>Understanding Python decorators optimizing a recursive Fibonacci implementation</title><link>https://www.andreagrandi.it/2015/08/31/understanding-python-decorators-optimizing-a-recursive-fibonacci-implementation/</link><description>&lt;p&gt;A &lt;strong&gt;decorator&lt;/strong&gt; is a Python function that takes a &lt;em&gt;function object&lt;/em&gt; as
an argument and returns a function as a &lt;em&gt;value&lt;/em&gt;. Here is an example of
decorator definition:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# make a new function&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;new_function&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="c1"&gt;# some code&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new_function&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To apply a decorator to an existing function, you just need to put
&lt;strong&gt;@&lt;em&gt;decorator_name&lt;/em&gt;&lt;/strong&gt; in the line before its definition, like this
example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@foo&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This decorator doesn't do anything, so let's think about a more concrete
problem we could solve using decorators.&lt;/p&gt;
&lt;h2&gt;Fibonacci sequence&lt;/h2&gt;
&lt;p&gt;By definition, the first two numbers in the
&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Fibonacci_number"&gt;Fibonacci&lt;/a&gt;&lt;/strong&gt; sequence
are either 1 and 1 or 0 and 1. All the other numbers are the sum of the
previous two numbers of the sequence. Example:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;0, 1: the third number is 1&lt;/li&gt;
&lt;li&gt;0, 1, 1: the fourth number is 2&lt;/li&gt;
&lt;li&gt;0, 1, 1, 2: the fifth number is 3&lt;/li&gt;
&lt;li&gt;0, 1, 1, 2, 3: the sixth number is 5&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If we wanted to give a &lt;strong&gt;math definition&lt;/strong&gt; of the sequence, we could
describe it in this way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;F(0): 0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F(1): 1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F(n): F(n-1) + F(n-2)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In &lt;strong&gt;Python&lt;/strong&gt; we could have a &lt;strong&gt;recursive function&lt;/strong&gt; like the following
one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What's the problem with this implementation? The code works as expected,
but it's very &lt;strong&gt;inefficient&lt;/strong&gt;. The next picture will explain what
happens when we will try, for example, to calculate the 5th number of
the sequence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2015/08/fibo.png"&gt;&lt;img alt="fibo" src="https://www.andreagrandi.it/images/2015/08/fibo.png" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fib(5) is Fib(4) + Fib(3), but Fib(4) itself is Fib(3) + Fib(2), and...
the picture just tell us that we have calculated Fib(3) 2 times, Fib(2)
3 times, Fib(1) 5 times! Why are we repeating the same operation every
time if we already calculated the result?&lt;/p&gt;
&lt;h2&gt;Memoization&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;In computing, &lt;strong&gt;memoization&lt;/strong&gt; is an optimization technique used
primarily to speed up computer programs by storing the results of
expensive function calls and returning the cached result when the same
inputs occur again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We need to store values of the sequence we have already calculated and
get them later when we need them. Let's implement a simple memoization
decorator:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;memoize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decorated_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decorated_function&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The decorator defines a dict at the beginning that is used as a cache.
When we want to find the n number of the sequence, it first checks if
the value was already calculated and that value is returned instead of
being calculated again. If the value is not found, then the original
function is being called and then the value is store in the cache, then
returned to the caller.&lt;/p&gt;
&lt;h2&gt;Using the memoize decorator&lt;/h2&gt;
&lt;p&gt;How much this decorator can speed up our fib method? Let's try to
benchmark the execution using Python
&lt;strong&gt;&lt;a href="https://docs.python.org/2/library/timeit.html"&gt;timeit&lt;/a&gt;&lt;/strong&gt; module.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# First example, not using the memoize decorator&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;timeit&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fib(35)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;from __main__ import fib&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The required time to calculate the 35th number of the Fibonacci sequence
on my laptop is: &lt;strong&gt;4.73480010033&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Second example, using the memoize decorator&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;timeit&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;memoize&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;memoize&lt;/span&gt;  &lt;span class="c1"&gt;# For convenience I put my decorator&lt;/span&gt;
                            &lt;span class="c1"&gt;# in a module named memoize.py&lt;/span&gt;

&lt;span class="nd"&gt;@memoize&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fib(35)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;from __main__ import fib&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The required time to calculate the 35th number of the Fibonacci sequence
on my laptop is: &lt;strong&gt;0.000133037567139&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Quite faster, don't you think? I will let you try how long does it take
to calculate the 60th number of the sequence with and without using the
decorator. &lt;strong&gt;Hint:&lt;/strong&gt; grab a cup of coffee before beginning!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Mon, 31 Aug 2015 19:32:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-08-31:/2015/08/31/understanding-python-decorators-optimizing-a-recursive-fibonacci-implementation/</guid><category>Programmazione, Python</category><category>decorators</category><category>fibonacci</category><category>memoization</category><category>memoize</category><category>optimization</category><category>Python</category></item><item><title>Django Notes: read values from settings in a safe way</title><link>https://www.andreagrandi.it/2015/08/29/django-notes-read-values-from-settings-in-a-safe-way/</link><description>&lt;p&gt;Working on &lt;strong&gt;Django&lt;/strong&gt; projects I find very often that many developers
access the values that are defined in &lt;strong&gt;settings&lt;/strong&gt; in this way&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;

&lt;span class="n"&gt;my_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MY_SETTING&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What happens if &lt;code&gt;MY_SETTING&lt;/code&gt; has not been defined in &lt;strong&gt;settings.py&lt;/strong&gt;?
The code will raise an error and crash, of course. How can we make the
code more reliable? We could &lt;em&gt;try/except&lt;/em&gt; the code block that tries to
read the value and maybe set a value if we get an exception, but this
would not be a clean way to do this job.&lt;/p&gt;
&lt;p&gt;A cleaner way to do it is to use &lt;strong&gt;getattr&lt;/strong&gt; in this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;

&lt;span class="n"&gt;my_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MY_SETTING&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;my-default-value&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;getattr&lt;/strong&gt; will try to read &lt;code&gt;MY_SETTING&lt;/code&gt; value from &lt;strong&gt;settings.py&lt;/strong&gt;,
if the value doesn't exist &lt;code&gt;my_value&lt;/code&gt; will be assigned with
&lt;code&gt;'my-default-value'&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 29 Aug 2015 15:50:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-08-29:/2015/08/29/django-notes-read-values-from-settings-in-a-safe-way/</guid><category>Django, HowTo, Programmazione, Python</category><category>Django</category><category>getattr</category><category>Python</category><category>settings</category></item><item><title>How to write a custom Django Middleware</title><link>https://www.andreagrandi.it/2015/08/23/how-to-write-a-custom-django-middleware/</link><description>&lt;p&gt;To understand how a &lt;strong&gt;&lt;a href="https://docs.djangoproject.com/en/1.8/topics/http/middleware/"&gt;Django
Middleware&lt;/a&gt;&lt;/strong&gt;
works we need to remember that the basic architecture of Django is
composed by a &lt;strong&gt;request&lt;/strong&gt; and a &lt;strong&gt;response&lt;/strong&gt;. A middleware is something
that stays in the middle. Let's give a look to the next diagram, taken
from official Django documentation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2015/08/middleware.png"&gt;&lt;img alt="middleware" src="https://www.andreagrandi.it/images/2015/08/middleware.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Important things to know&lt;/h2&gt;
&lt;p&gt;There are four important things to know about middlewares:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You need to write a class that just inherit from &lt;strong&gt;&lt;em&gt;object&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;order&lt;/strong&gt; where you place your middleware in &lt;strong&gt;settings.py&lt;/strong&gt; is
important: middlewares are processed from top to bottom during a
request and from bottom to top during a response.&lt;/li&gt;
&lt;li&gt;You don't need to implement all the available methods of a
middleware. For example you can just implement &lt;code&gt;process_request&lt;/code&gt;
and &lt;code&gt;process_template_response&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you implement &lt;code&gt;process_request&lt;/code&gt; and you decide to return an
&lt;code&gt;HttpResponse&lt;/code&gt;, all the other middlewares, views etc... will be
ignored and only your response will be returned&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Writing a middleware&lt;/h2&gt;
&lt;p&gt;In my example I wanted to implement a feature that saves the time when a
request is made and the time when a request has been processed, then
calculates the time delta and exposes this value in the context so that
is accessible from our templates. How to implement a similar feature
using a middleware? Here is my example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BenchmarkMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_request_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_template_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;response_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_request_time&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;context_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;response_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Please don't care about how I calculated the time. I'm aware that there
are better ways to do it, but I just wanted to keep it simple and show
how to implement a simple middleware.&lt;/p&gt;
&lt;p&gt;If you want to see a &lt;strong&gt;complete example&lt;/strong&gt; of a project that includes and
uses this middleware, here you can find the complete source
code: &lt;a href="https://github.com/andreagrandi/benchmark-middleware-example"&gt;https://github.com/andreagrandi/benchmark-middleware-example&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.8/topics/http/middleware/"&gt;https://docs.djangoproject.com/en/1.8/topics/http/middleware/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://agiliq.com/blog/2015/07/understanding-django-middlewares/"&gt;http://agiliq.com/blog/2015/07/understanding-django-middlewares/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.runnable.com/UrSGolK00ygpAAAQ/creating-a-custom-middleware-for-python-and-django"&gt;http://code.runnable.com/UrSGolK00ygpAAAQ/creating-a-custom-middleware-for-python-and-django&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 23 Aug 2015 21:46:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-08-23:/2015/08/23/how-to-write-a-custom-django-middleware/</guid><category>Development</category><category>Django</category><category>HowTo</category><category>middleware</category><category>Python</category><category>tutorial</category></item><item><title>Why I completely switched this website to HTTPS (and why you should do the same)</title><link>https://www.andreagrandi.it/2015/08/22/why-i-completely-switched-this-website-to-https-and-why-you-should-do-the-same/</link><description>&lt;p&gt;I must admit it, there was a time when I was not using &lt;strong&gt;HTTPS&lt;/strong&gt;, not
even to protect the admin section of the website. This means that anyone
could have intercepted the password and published (or deleted) things in
my name. Since a couple of years ago I started protecting my admin
sectio using an SSL certificate.  I haven't done it before for a couple
of reason: my hosting was on a provider that required a lot of money
(something like 100\$/year) to enable SSL support, plus an SSL
certificated costed at least 100-120\$/year.&lt;/p&gt;
&lt;p&gt;When I migrated my website on my own &lt;a href="https://www.digitalocean.com/?refcode=cc8349e328a5"&gt;VPS on
DigitalOcean&lt;/a&gt; I
finally discovered that &lt;strong&gt;&lt;a href="https://www.startssl.com"&gt;StartSSL&lt;/a&gt;&lt;/strong&gt; was
giving &lt;strong&gt;free class 1 certificates&lt;/strong&gt; and I immediately got one. I made
the mistake to just serve the admin pages using HTTPS, not all the
website. I regretted about this decision after readin a
&lt;a href="http://dannyman.toldme.com/2010/12/23/swa-yahoo-being-evil/"&gt;couple&lt;/a&gt; of
&lt;a href="http://opensource.com/business/15/8/interview-daniel-roesler-utilityapi"&gt;articles&lt;/a&gt;
that were explaining how some internet providers where changing served
HTTP pages injecting their own ads or banner. That was unacceptable to
me and I swicthed the whole website to HTTPS.&lt;/p&gt;
&lt;p&gt;Basically, if you don't serve even your personal website using HTTPS,
someone could change the page while it's being transfered to the
requester. Imagine if you have (like me) a page on your blog that let
people download your public PGP key. Users could be served with a
different key, so someone else would be able to decrypt a message
intended for you only. Scary, isn't it?&lt;/p&gt;
&lt;p&gt;If you need more informations about how to request a StartSSL
certificate and how to install it on Nginx/Apache, I can suggest this
nice tutorial: &lt;a href="https://konklone.com/post/switch-to-https-now-for-free"&gt;https://konklone.com/post/switch-to-https-now-for-free&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you need to serve a WordPress website, that configuration is not
enough. In that case you may want to have a look at my own Nginx
configuration, available at this
address: &lt;a href="https://gist.github.com/andreagrandi/5de9dc9c4eb7e732764c"&gt;https://gist.github.com/andreagrandi/5de9dc9c4eb7e732764c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;p.s: if you are you curious to try how Digital Ocean VPS works and fancy
&lt;strong&gt;10\$ credit&lt;/strong&gt; (enough for 2 months if you choose the basic droplet)
for &lt;strong&gt;free, u&lt;/strong&gt;se this link and enjoy
it &lt;a href="https://www.digitalocean.com/?refcode=cc8349e328a5"&gt;https://www.digitalocean.com/?refcode=cc8349e328a5&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 22 Aug 2015 14:59:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-08-22:/2015/08/22/why-i-completely-switched-this-website-to-https-and-why-you-should-do-the-same/</guid><category>Sicurezza</category></item><item><title>Django Notes: tests, setUp method and db data</title><link>https://www.andreagrandi.it/2015/07/23/django-notes-tests-setup-method-and-db-data/</link><description>&lt;p&gt;This won't be a full post, but just a quick note (probably the first one
of a serie) about development with Django.&lt;/p&gt;
&lt;p&gt;When we write a &lt;strong&gt;TestCase&lt;/strong&gt; test, if we have defined a &lt;strong&gt;setUp&lt;/strong&gt;
method, it will be called before the execution of each test. One could
think that the database is completely reset after each test, but this is
not true (not like I was thinking). After each test, whatever we wrote
on the database is rolled back. If we create a "Client" row (assuming we
have a model called Clients) in our setUp, when we call it the second
time the ID won't be 1 as someone (me included) could expect. It will be
2 instead, because the database has not completely deleted and created
from scratch.&lt;/p&gt;
&lt;p&gt;This means that we can't assume that our Client ID will always be 1 for
each test and we should rather reference to it in a dinamic way like:
&lt;strong&gt;self.client.id&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This could be a trivial thing for many people but I was not 100% sure
about this so I asked for a confirmation on &lt;strong&gt;#django&lt;/strong&gt; IRC room and
people (expecially &lt;strong&gt;apollo13&lt;/strong&gt;) was kind enough to explain me how it
works.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 23 Jul 2015 22:41:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-07-23:/2015/07/23/django-notes-tests-setup-method-and-db-data/</guid><category>Django, Python</category></item><item><title>Soma.fm + Spotify + import.io + Python mashup: automatically create a Spotify playlist with Soma.fm tracks</title><link>https://www.andreagrandi.it/2015/07/12/soma-fm-spotify-import-io-python-mashup/</link><description>&lt;p&gt;I'm a big fan of &lt;a href="http://somafm.com"&gt;Soma.fm&lt;/a&gt; (a 25+ channels streaming
radio based in San Francisco) and during the years I've been writing
clients for this radio for different mobile platforms (Maemo, MeeGo,
Harmattan, Windows Phone, BlackBerry 10, Jolla). I love in particular
their "&lt;a href="http://somafm.com/indiepop/"&gt;&lt;strong&gt;Indie Pop Rock&lt;/strong&gt;&lt;/a&gt;" channel that
during these years made me discover some very good artists.&lt;/p&gt;
&lt;p&gt;When &lt;strong&gt;Spotify&lt;/strong&gt; finally was available in Italy (I'm still using it
right now that I live in the UK), something that I always missed was a
radio with the same good music. Why not just listening to Soma.fm?
Because I like to listen to the music while I commute and in the London
Underground it's nearly impossible to have signal.&lt;/p&gt;
&lt;p&gt;So I was thinking: it would be nice to have &lt;strong&gt;a Spotify playlist with
Soma.fm tracks&lt;/strong&gt;. Wait a moment.... &lt;strong&gt;I can do it!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2015/07/Frankenstein_Jr_Mel_Brooks_1974.jpg"&gt;&lt;img alt="Frankenstein_Jr_Mel_Brooks_1974" src="https://www.andreagrandi.it/images/2015/07/Frankenstein_Jr_Mel_Brooks_1974.jpg" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Soma.fm publishes the tracks history with all the tracks streamed during
the last hour &lt;a href="http://somafm.com/indiepop/songhistory.html"&gt;http://somafm.com/indiepop/songhistory.html&lt;/a&gt; so I just
needed something to parse this list for me and return me a well
formatted version.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://import.io"&gt;&lt;strong&gt;import.io&lt;/strong&gt;&lt;/a&gt; (it's a service that takes
a web page as input, parse the data and generates a RESTful API to
access this data) I was able to easily get the data I needed. At this
point I only needed to be able to loop through the list, search each
track on Spotify and add it to my playlist.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;source code is fully available&lt;/strong&gt; here
&lt;a href="https://github.com/andreagrandi/spotisoma"&gt;https://github.com/andreagrandi/spotisoma&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you can't just get the code and run it. You will need to get
your own &lt;strong&gt;import.io api key&lt;/strong&gt;, generate your import.io api url, get a
&lt;a href="https://developer.spotify.com/technologies/libspotify/keys/"&gt;&lt;strong&gt;Spotify application
key&lt;/strong&gt;&lt;/a&gt; (the
old/deprecated one, since it was nearly impossible for me to use oauth
in a simple Python script due to the fact I didn't have an endpoint to
receive the token back. You can get more informations here:
&lt;a href="https://pyspotify.mopidy.com/en/latest/quickstart/#application-keys"&gt;https://pyspotify.mopidy.com/en/latest/quickstart/#application-keys&lt;/a&gt;)
and set your env variables with your Spotify username and password. Last
but not least: the &lt;strong&gt;old Spotify library&lt;/strong&gt; only works with &lt;strong&gt;Premium&lt;/strong&gt;
accounts.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 12 Jul 2015 10:10:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-07-12:/2015/07/12/soma-fm-spotify-import-io-python-mashup/</guid><category>Python</category><category>import.io</category><category>music</category><category>Python</category><category>soma.fm</category><category>spotify</category></item><item><title>Goenv - Go Environment Manager</title><link>https://www.andreagrandi.it/2015/04/19/goenv-go-environment-manager/</link><description>&lt;p&gt;To briefly explain what
&lt;a href="https://bitbucket.org/ymotongpoo/goenv"&gt;&lt;strong&gt;Goenv&lt;/strong&gt;&lt;/a&gt; is, I will assume
you have previously worked with &lt;strong&gt;Python&lt;/strong&gt;. Basically it's what
&lt;strong&gt;Virtualenv&lt;/strong&gt; is for Python. Goenv (and it's wrapper &lt;strong&gt;goof&lt;/strong&gt;) creates
a folder for a new project and set the &lt;code&gt;$GOPATH&lt;/code&gt; env variable to that
folder path. At this point every time you do &lt;strong&gt;go get&lt;/strong&gt;, the libraries
will be installed in that specific &lt;code&gt;$GOPATH&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It's very important to use separate &lt;code&gt;$GOPATH&lt;/code&gt; for each project, because
this allow us to use different library versions for each project and
&lt;strong&gt;avoid version conflicts&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://bitbucket.org/ymotongpoo/goenv
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;goenv
go&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;goenv&lt;span class="w"&gt; &lt;/span&gt;*.go
chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;goenv
sudo&lt;span class="w"&gt; &lt;/span&gt;cp&lt;span class="w"&gt; &lt;/span&gt;goenv&lt;span class="w"&gt; &lt;/span&gt;/usr/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Goenv is now installed, we will now install its wrapper &lt;strong&gt;goof&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;cp&lt;span class="w"&gt; &lt;/span&gt;shellscripts/goenvwrapper.sh&lt;span class="w"&gt; &lt;/span&gt;/usr/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Edit &lt;code&gt;.bashrc&lt;/code&gt; (or &lt;code&gt;.zshrc&lt;/code&gt; if you use zsh) and append these lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;GOENVHOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/goenvs
&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/usr/bin/goenvwrapper.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;How to use it&lt;/h2&gt;
&lt;p&gt;To &lt;strong&gt;create&lt;/strong&gt; a new go environment use &lt;strong&gt;make&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;goof&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;go-test
Do&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;want&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="w"&gt; &lt;/span&gt;parental&lt;span class="w"&gt; &lt;/span&gt;directory&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/Users/andrea/goenvs/go-test&amp;#39;&lt;/span&gt;?&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;y
Environment&lt;span class="w"&gt; &lt;/span&gt;/Users/andrea/goenvs/go-test&lt;span class="w"&gt; &lt;/span&gt;created!
&lt;span class="o"&gt;(&lt;/span&gt;go:go-test&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;go-test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To exit the go environment use &lt;strong&gt;deactivate&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;go:go-test&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;go-test&lt;span class="w"&gt;  &lt;/span&gt;deactivate
go-test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To use an environment use &lt;strong&gt;workon&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;go-test&lt;span class="w"&gt;  &lt;/span&gt;goof&lt;span class="w"&gt; &lt;/span&gt;workon&lt;span class="w"&gt; &lt;/span&gt;go-test
&lt;span class="o"&gt;(&lt;/span&gt;go:go-test&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;go-test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To show available environments use &lt;strong&gt;show&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;go:go-test&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;go-test&lt;span class="w"&gt;  &lt;/span&gt;goof&lt;span class="w"&gt; &lt;/span&gt;show
go-test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Goenv itself is not enough to manage Go packages. It would be like using
&lt;strong&gt;Virtualenv&lt;/strong&gt; only and not using &lt;strong&gt;pip&lt;/strong&gt; and &lt;strong&gt;requirements&lt;/strong&gt;. In a
future post I will explain how to use
&lt;a href="https://github.com/tools/godep"&gt;&lt;strong&gt;Godep&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 19 Apr 2015 12:26:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-04-19:/2015/04/19/goenv-go-environment-manager/</guid><category>Go, HowTo, Programmazione</category><category>go</category><category>golang</category></item><item><title>Go: defining methods on struct types</title><link>https://www.andreagrandi.it/2015/03/16/go-defining-methods-on-struct-types/</link><description>&lt;p&gt;In &lt;strong&gt;Go&lt;/strong&gt; it's possible to define &lt;strong&gt;methods&lt;/strong&gt; on &lt;strong&gt;struct types&lt;/strong&gt;. The
syntax needed for it can be a bit strange for people that are used to
define classes and methods in Java, C# etc... but once you learn it
it's quite easy to use.&lt;/p&gt;
&lt;p&gt;In my case for example I needed something that could contain a Timer
object, a string and a method that could start the timer and call a
method at the end of the Timer execution. I implemented it in this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DeviceTimer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;DeviceID&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;DeviceTimer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Timer&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DeviceTimer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DeviceTimer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;notifyDeviceTimerExpired&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DeviceID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The key point is &lt;strong&gt;row 6&lt;/strong&gt; &lt;code&gt;func (timer DeviceTimer) startTimer() { ... }&lt;/code&gt; 
where I defined a method called &lt;code&gt;startTimer&lt;/code&gt; and I specify timer
&lt;code&gt;DeviceTimer&lt;/code&gt; inside the func definition. This basically "extends" the
struct DeviceTimer adding that method to it. This means that I can call
that method in this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewTimer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Millisecond&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;device_timer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DeviceTimer&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;abc123&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;device_timer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startTimer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is all you need to do. If you want to read more about this subject,
I can suggest to read these two articles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Go by Example: Methods&lt;/strong&gt; &lt;a href="https://gobyexample.com/methods"&gt;https://gobyexample.com/methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inheritance and subclassing in Go - or its near likeness&lt;/strong&gt;
    &lt;a href="http://golangtutorials.blogspot.co.uk/2011/06/inheritance-and-subclassing-in-go-or.html"&gt;http://golangtutorials.blogspot.co.uk/2011/06/inheritance-and-subclassing-in-go-or.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I'm not a Go expert and these are just my personal notes I'm
taking during my learning experience. I'm very keen to share my notes
with everyone, but please don't take them as notes from an expert Go
developer.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Mon, 16 Mar 2015 20:24:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-03-16:/2015/03/16/go-defining-methods-on-struct-types/</guid><category>Go</category><category>go</category><category>golang</category><category>programming</category><category>struct</category></item><item><title>How to create a Docker image for PostgreSQL and persist data</title><link>https://www.andreagrandi.it/2015/02/21/how-to-create-a-docker-image-for-postgresql-and-persist-data/</link><description>&lt;p&gt;Before I start, let me confirm to you that official
&lt;a href="https://www.docker.com/"&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/a&gt; images for
&lt;a href="http://www.postgresql.org/"&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/a&gt; already exist and are
available here: &lt;a href="https://registry.hub.docker.com/_/postgres/"&gt;https://registry.hub.docker.com/_/postgres/&lt;/a&gt; so this
howto wants to be a guide to explain how to create these images and talk
about some of the Docker features.&lt;/p&gt;
&lt;p&gt;I will assume that you have already installed Docker on your machine. I
have tested these instructions both on &lt;strong&gt;Ubuntu Linux&lt;/strong&gt; and &lt;strong&gt;OSX&lt;/strong&gt; (OSX
users will need to install &lt;a href="http://boot2docker.io/"&gt;boot2docker&lt;/a&gt;,
instructions are not available in this guide).&lt;/p&gt;
&lt;h2&gt;Dockerfile&lt;/h2&gt;
&lt;p&gt;To create a Docker image we need to create a text file named
&lt;strong&gt;Dockerfile&lt;/strong&gt; and use the available commands and syntax to declare how
the image will be built. At the beginning of the file we need to specify
the base image we are going to use and our contact informations:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;ubuntu:14.04&lt;/span&gt;
&lt;span class="k"&gt;MAINTAINER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;Andrea Grandi &amp;lt;nospamthanks@gmail.com&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In our case we are using &lt;strong&gt;Ubuntu 14.04&lt;/strong&gt; as base image. After these
instructions we need to add PostgreSQL package repository and GnuPG
public key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;RUN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;apt-key&lt;span class="w"&gt; &lt;/span&gt;adv&lt;span class="w"&gt; &lt;/span&gt;--keyserver&lt;span class="w"&gt; &lt;/span&gt;keyserver.ubuntu.com&lt;span class="w"&gt; &lt;/span&gt;--recv-keys&lt;span class="w"&gt; &lt;/span&gt;B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
&lt;span class="k"&gt;RUN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/etc/apt/sources.list.d/pgdg.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then we need to update the packages available in Ubuntu and install
PostgreSQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;RUN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;-q&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python-software-properties&lt;span class="w"&gt; &lt;/span&gt;software-properties-common&lt;span class="w"&gt;   &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;-q&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;postgresql-9.3&lt;span class="w"&gt; &lt;/span&gt;postgresql-client-9.3&lt;span class="w"&gt; &lt;/span&gt;postgresql-contrib-9.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We are installing version 9.3 of PostgreSQL, instructions would be very
similar for any other version of the database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; it's important to have &lt;strong&gt;apt-get update&lt;/strong&gt; and &lt;strong&gt;apt-get
install&lt;/strong&gt; commands in the same &lt;strong&gt;RUN&lt;/strong&gt; line, else they would be
considered two different layers by Docker and in case an updated package
is available it won't be installed when the image is rebuilt.&lt;/p&gt;
&lt;p&gt;At this point we switch to &lt;strong&gt;postgres&lt;/strong&gt; user to execute the next
commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;USER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;postgres&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/etc/init.d/postgresql&lt;span class="w"&gt; &lt;/span&gt;start&lt;span class="w"&gt;   &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;psql&lt;span class="w"&gt; &lt;/span&gt;--command&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CREATE USER pguser WITH SUPERUSER PASSWORD &amp;#39;pguser&amp;#39;;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;createdb&lt;span class="w"&gt; &lt;/span&gt;-O&lt;span class="w"&gt; &lt;/span&gt;pguser&lt;span class="w"&gt; &lt;/span&gt;pgdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We switch to &lt;strong&gt;root&lt;/strong&gt; user and we complete the configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;USER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;root&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;host all  all    0.0.0.0/0  md5&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/etc/postgresql/9.3/main/pg_hba.conf
&lt;span class="k"&gt;RUN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;listen_addresses=&amp;#39;*&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/etc/postgresql/9.3/main/postgresql.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We expose the port where PostgreSQL will listen to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;5432&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We setup the data and shared folders that we will use later:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;RUN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;/var/run/postgresql&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;chown&lt;span class="w"&gt; &lt;/span&gt;-R&lt;span class="w"&gt; &lt;/span&gt;postgres&lt;span class="w"&gt; &lt;/span&gt;/var/run/postgresql
&lt;span class="k"&gt;VOLUME&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/postgresql&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/log/postgresql&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/lib/postgresql&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally we switch again to the &lt;strong&gt;postgres&lt;/strong&gt; user and we define the entry
command for this image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;USER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;postgres&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/lib/postgresql/9.3/bin/postgres&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/lib/postgresql/9.3/main&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;config_file=/etc/postgresql/9.3/main/postgresql.conf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The full &lt;strong&gt;Dockerfile&lt;/strong&gt; is available
here &lt;a href="https://github.com/andreagrandi/postgresql-docker/blob/master/Dockerfile"&gt;https://github.com/andreagrandi/postgresql-docker/blob/master/Dockerfile&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Building Docker image&lt;/h3&gt;
&lt;p&gt;Once the Dockerfile is ready, we need to build the image before running
it in a container. Please customize the tag name using your own
docker.io hub account (or you won't be able to push it to the hub):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;--rm&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;andreagrandi/postgresql:9.3&lt;span class="w"&gt; &lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Running the PostgreSQL Docker container&lt;/h3&gt;
&lt;p&gt;To run the container, once the image is built, you just need to use this
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5432&lt;/span&gt;:5432&lt;span class="w"&gt; &lt;/span&gt;andreagrandi/postgresql:9.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Testing the running PostgreSQL&lt;/h3&gt;
&lt;p&gt;To test the running container we can use any client, even the
commandline one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;psql&lt;span class="w"&gt; &lt;/span&gt;-h&lt;span class="w"&gt; &lt;/span&gt;localhost&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5432&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-U&lt;span class="w"&gt; &lt;/span&gt;pguser&lt;span class="w"&gt; &lt;/span&gt;-W&lt;span class="w"&gt; &lt;/span&gt;pgdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When you are prompted for password, type: &lt;strong&gt;pguser&lt;/strong&gt;&lt;br&gt;
Please note that &lt;strong&gt;localhost&lt;/strong&gt; is only valid if you are running Docker
on Ubuntu. If you are an OSX user, you need to discover the correct ip
using: &lt;strong&gt;boot2docker ip&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Persisting data&lt;/h3&gt;
&lt;p&gt;You may have noticed that once you stop the container, if you previously
wrote some data on the DB, that data is lost. This is because by default
Docker containers are not persistent. We can resolve this problem using
a data container. My only suggestion is not to do it manually and use a
tool like &lt;a href="http://www.fig.sh/"&gt;&lt;strong&gt;fig&lt;/strong&gt;&lt;/a&gt; to orchestrate this. Fig is a
tool to orchestrate containers and its features are being rewritten in
Go language and integrated into Docker itself. So if you prepare a
&lt;strong&gt;fig.yml&lt;/strong&gt; configuration file now, you will be able, hopefully, to
reuse it once this feature will be integrated into Docker. Please refer
to fig website for the instructions to install it (briefly: under Ubuntu
you can use &lt;strong&gt;pip install fig&lt;/strong&gt; and under OSX you can use &lt;strong&gt;brew install
fig&lt;/strong&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;dbdata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;andreagrandi/postgresql:9.3&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/var/lib/postgresql&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;

&lt;span class="nt"&gt;db&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;andreagrandi/postgresql:9.3&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;volumes_from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;dbdata&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;5432:5432&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Save this file as &lt;strong&gt;fig.yml&lt;/strong&gt; in the same folder of the Dockerfile and
spin up the container using this command: &lt;strong&gt;fig up&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;andreas-air:postgresql-docker&lt;span class="w"&gt; &lt;/span&gt;andrea&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;master&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;fig&lt;span class="w"&gt; &lt;/span&gt;up
Recreating&lt;span class="w"&gt; &lt;/span&gt;postgresqldocker_dbdata_1...
Recreating&lt;span class="w"&gt; &lt;/span&gt;postgresqldocker_db_1...
Attaching&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;postgresqldocker_db_1
db_1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:01:07&lt;span class="w"&gt; &lt;/span&gt;UTC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;-1&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LOG:&lt;span class="w"&gt;  &lt;/span&gt;database&lt;span class="w"&gt; &lt;/span&gt;system&lt;span class="w"&gt; &lt;/span&gt;was&lt;span class="w"&gt; &lt;/span&gt;interrupted&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;last&lt;span class="w"&gt; &lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;up&lt;span class="w"&gt; &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:46:10&lt;span class="w"&gt; &lt;/span&gt;UTC
db_1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:01:07&lt;span class="w"&gt; &lt;/span&gt;UTC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;-2&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LOG:&lt;span class="w"&gt;  &lt;/span&gt;database&lt;span class="w"&gt; &lt;/span&gt;system&lt;span class="w"&gt; &lt;/span&gt;was&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;properly&lt;span class="w"&gt; &lt;/span&gt;shut&lt;span class="w"&gt; &lt;/span&gt;down&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;automatic&lt;span class="w"&gt; &lt;/span&gt;recovery&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;progress
db_1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:01:07&lt;span class="w"&gt; &lt;/span&gt;UTC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;-3&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LOG:&lt;span class="w"&gt;  &lt;/span&gt;redo&lt;span class="w"&gt; &lt;/span&gt;starts&lt;span class="w"&gt; &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;/1782F68
db_1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:01:07&lt;span class="w"&gt; &lt;/span&gt;UTC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;-4&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LOG:&lt;span class="w"&gt;  &lt;/span&gt;record&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;zero&lt;span class="w"&gt; &lt;/span&gt;length&lt;span class="w"&gt; &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;/1782FA8
db_1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:01:07&lt;span class="w"&gt; &lt;/span&gt;UTC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;-5&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LOG:&lt;span class="w"&gt;  &lt;/span&gt;redo&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;/1782F68
db_1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:01:07&lt;span class="w"&gt; &lt;/span&gt;UTC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;-6&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LOG:&lt;span class="w"&gt;  &lt;/span&gt;last&lt;span class="w"&gt; &lt;/span&gt;completed&lt;span class="w"&gt; &lt;/span&gt;transaction&lt;span class="w"&gt; &lt;/span&gt;was&lt;span class="w"&gt; &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;log&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;:46:10.61746+00
db_1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:01:07&lt;span class="w"&gt; &lt;/span&gt;UTC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;-1&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LOG:&lt;span class="w"&gt;  &lt;/span&gt;database&lt;span class="w"&gt; &lt;/span&gt;system&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;ready&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;accept&lt;span class="w"&gt; &lt;/span&gt;connections
db_1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-02-21&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:01:07&lt;span class="w"&gt; &lt;/span&gt;UTC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;-1&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;LOG:&lt;span class="w"&gt;  &lt;/span&gt;autovacuum&lt;span class="w"&gt; &lt;/span&gt;launcher&lt;span class="w"&gt; &lt;/span&gt;started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you try to write some data on the database and then you stop (CTRL+C)
the running containers and spin up them again, you will see that your
data is still there.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This is just an example of how to prepare a Docker container for a
specific service. The difficoult part is when you have to spin up
multiple services (for example a Django web application using
PostgreSQL, RabbitMQ, MongoDB etc...), connect them all together and
orchestrate the solution. I will maybe talk about this in one of the
next posts. You can find the full source code of my PostgreSQL Docker
image, including the fig.yml file in this
repository &lt;a href="https://github.com/andreagrandi/postgresql-docker"&gt;https://github.com/andreagrandi/postgresql-docker&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 21 Feb 2015 20:24:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-02-21:/2015/02/21/how-to-create-a-docker-image-for-postgresql-and-persist-data/</guid><category>Development</category><category>containers</category><category>devops</category><category>docker</category><category>fig</category><category>Linux</category><category>OSX</category><category>postgresql</category></item><item><title>Moving away from Google Talk to a real Jabber/XMPP service</title><link>https://www.andreagrandi.it/2015/02/20/moving-away-from-google-talk-to-a-real-jabberxmpp-service/</link><description>&lt;p&gt;I've been recently concerned about &lt;a href="https://plus.google.com/+MayurKamat/posts/ETBvtp9VYav"&gt;the
future&lt;/a&gt; of
&lt;strong&gt;Google Talk&lt;/strong&gt; service and all the implications related to recent
changes to the existing service. What has been a nice implementation of
the &lt;a href="http://en.wikipedia.org/wiki/XMPP"&gt;Jabber/XMPP&lt;/a&gt; protocol once, now
is just a &lt;a href="https://www.eff.org/deeplinks/2013/05/google-abandons-open-standards-instant-messaging"&gt;closed and
proprietary&lt;/a&gt;
service. The main problem with these changes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jabber/XMPP users of other services won't be able to talk anymore to Google Talk users&lt;/li&gt;
&lt;li&gt;Google is killing some of their native clients (like the Windows one) and forcing users to Chrome or Android/iOS versions&lt;/li&gt;
&lt;li&gt;Google has disabled the possibility to turn off chat recording (you can still do it individually, for each contact)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, what are the alternatives to Google Talk? Luckly you have at least
three options.&lt;/p&gt;
&lt;h2&gt;Using an existing Jabber/XMPP service&lt;/h2&gt;
&lt;p&gt;This is surely the easiest way to get a Jabber/XMPP account. There is a
list of free services available
here: &lt;a href="https://xmpp.net/directory.php"&gt;https://xmpp.net/directory.php&lt;/a&gt; registering a new account is
usually very easy. Most of the clients have an option that let you
register the account while you are configuring it. For example if you
are using &lt;a href="https://www.pidgin.im"&gt;&lt;strong&gt;Pidgin&lt;/strong&gt;&lt;/a&gt; and you want to register
an account with
&lt;a href="https://duck.co/blog/using-pidgin-with-xmpp-jabber"&gt;DukGo&lt;/a&gt; service, you
can configure it in this way:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2015/02/2_addaccount.png"&gt;&lt;img alt="add account" src="https://www.andreagrandi.it/images/2015/02/2_addaccount.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Using an hosted Jabber/XMPP service with your domain&lt;/h2&gt;
&lt;p&gt;A service called &lt;a href="http://hosted.im"&gt;&lt;strong&gt;HostedIM&lt;/strong&gt;&lt;/a&gt; offer a very nice
service. Basically if you already have a domain, you can register an
account on &lt;a href="http://hosted.im"&gt;hosted.im&lt;/a&gt;, setup your &lt;strong&gt;DNS&lt;/strong&gt; following
their instructions and create an account directly on their dashboard.
You can create up to &lt;strong&gt;5 accounts for free&lt;/strong&gt;. If you need more, they
offer a paid service for that. In my case all I had to do was updating
my DNS with the following configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;_xmpp-client._tcp.andreagrandi.it.&lt;span class="w"&gt; &lt;/span&gt;IN&lt;span class="w"&gt; &lt;/span&gt;SRV&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5222&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xmpp1.hosted.im.
_xmpp-client._tcp.andreagrandi.it.&lt;span class="w"&gt; &lt;/span&gt;IN&lt;span class="w"&gt; &lt;/span&gt;SRV&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5222&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xmpp2.hosted.im.
_xmpp-server._tcp.andreagrandi.it.&lt;span class="w"&gt; &lt;/span&gt;IN&lt;span class="w"&gt; &lt;/span&gt;SRV&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5269&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xmpp2.hosted.im.
_xmpp-server._tcp.andreagrandi.it.&lt;span class="w"&gt; &lt;/span&gt;IN&lt;span class="w"&gt; &lt;/span&gt;SRV&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5269&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xmpp1.hosted.im.
_jabber._tcp.andreagrandi.it.&lt;span class="w"&gt; &lt;/span&gt;IN&lt;span class="w"&gt; &lt;/span&gt;SRV&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5269&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xmpp2.hosted.im.
_jabber._tcp.andreagrandi.it.&lt;span class="w"&gt; &lt;/span&gt;IN&lt;span class="w"&gt; &lt;/span&gt;SRV&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5269&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xmpp1.hosted.im.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Hosting your own Jabber/XMPP service&lt;/h2&gt;
&lt;p&gt;If you have a VPS and some syasdmin skills, why not hosting your own
XMPP server? There are different options available, but I can suggest
you three in particular:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.igniterealtime.org/projects/openfire/"&gt;OpenFire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ejabberd.im/"&gt;ejabberd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://prosody.im/"&gt;Prosody&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I haven't tried any of these personally, because for the moment I'm
using the service offered by hosted.im. I'm curious anyway to configure
at least one of them and when I will do it I will publish a dedicated
tutorial about it.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Given the recent changes that Google is doing to all their services, I'm
more than happy when I can abandon one of them, because I personally
don't like to rely (and bind myself) to a single company, expecially if
that company closes a service whenever they want and try to lock you
inside their ecosystem.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 20 Feb 2015 21:15:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-02-20:/2015/02/20/moving-away-from-google-talk-to-a-real-jabberxmpp-service/</guid><category>HowTo, Linux</category><category>chat</category><category>Google</category><category>gtalk</category><category>im</category><category>jabber</category><category>xmpp</category></item><item><title>Automatically pull updated Docker images and restart containers with docker-puller</title><link>https://www.andreagrandi.it/2014/10/25/automatically-pull-updated-docker-images-and-restart-containers-with-docker-puller/</link><description>&lt;p&gt;If you use &lt;a href="https://docker.io"&gt;docker.io&lt;/a&gt; (or any similar service) to
build your &lt;strong&gt;Docker&lt;/strong&gt; containers, it may be possible that, once the new
image is generated, you want your Docker host to automatically pull it
and restart the container.&lt;/p&gt;
&lt;p&gt;Docker.io gives you the possibility to set a &lt;strong&gt;web hook&lt;/strong&gt; after a
successful build. Basically it does a POST on a defined URL and send
some informations in JSON format.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/glowdigitalmedia/docker-puller"&gt;docker-puller&lt;/a&gt;
listens to these web hooks and can be configured to run a particular
script, given a specific hook. It's a very simple service I wrote using
Python/Flask. It's also my first Flask application, so if you want to
improve it, feel free to send me a pull request on GitHub.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this is not the only existing service that is able to do this
task. I took inspiration from this
article &lt;a href="http://nathanleclaire.com/blog/2014/08/17/automagical-deploys-from-docker-hub/"&gt;http://nathanleclaire.com/blog/2014/08/17/automagical-deploys-from-docker-hub/&lt;/a&gt;
and I really tried to
customize &lt;a href="https://github.com/cpuguy83/dockerhub-webhook-listener"&gt;https://github.com/cpuguy83/dockerhub-webhook-listener&lt;/a&gt; for
my own needs, but the problem is that &lt;strong&gt;dockerhub-webhook-listener&lt;/strong&gt; is
not ready to be used as is (you have to customize it) and I'm not very
good with &lt;strong&gt;Golang&lt;/strong&gt; (yet) to be able to do it in little time. This is
why I rewrote the service in Python (that is my daily language). I want
to thank &lt;a href="https://github.com/cpuguy83"&gt;Brian Goff&lt;/a&gt; for the idea and all
the people in &lt;strong&gt;#docker @ FreeNode&lt;/strong&gt; for the support.&lt;/p&gt;
&lt;h2&gt;How to use docker-puller&lt;/h2&gt;
&lt;p&gt;Setting up the service should be quite easy. After you clone the
repository from https://github.com/glowdigitalmedia/docker-puller there
is a &lt;strong&gt;config.json&lt;/strong&gt; file where you define the &lt;strong&gt;host&lt;/strong&gt;, &lt;strong&gt;port&lt;/strong&gt;, a
&lt;strong&gt;token&lt;/strong&gt; and a list of &lt;strong&gt;hooks&lt;/strong&gt; you want to react to. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;host&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;port&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;abc123&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hooks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;scripts/hello.sh&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create a &lt;strong&gt;bash script&lt;/strong&gt; (in this case it was called hello.sh) and put
it under script folder and write the instructions to be executed to pull
the new image and restart the container (example):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;andreagrandi/test:latest
docker&lt;span class="w"&gt; &lt;/span&gt;stop&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
docker&lt;span class="w"&gt; &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
docker&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;--name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8000&lt;/span&gt;:80&lt;span class="w"&gt; &lt;/span&gt;andreagrandi/test:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once configured, I suggest you to setup a &lt;strong&gt;Nginx&lt;/strong&gt; entry (instructions
not covered here) that for example redirect
&lt;strong&gt;yourhost.com/dockerpuller&lt;/strong&gt; to &lt;strong&gt;localhost:8000&lt;/strong&gt; (I would advise to
enable SSL too, or people could be able to sniff your token). The
service can be started with: "&lt;strong&gt;python app.py&lt;/strong&gt;" (or you can setup a
Supervisor script).&lt;/p&gt;
&lt;p&gt;At this point docker-puller is up and running. Go to &lt;strong&gt;docker.io&lt;/strong&gt;
automatic build settings and setup a webhook like this:
&lt;strong&gt;http://yourhost.com/dockerpuller?token=abc123&amp;amp;hook=hello&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Every time docker.io finishes building and pushing your image to the
docker registry, it will &lt;strong&gt;POST&lt;/strong&gt; on that URL. docker-puller will catch
the POST, check for a valid token, get the hook name and will execute
the relative script.&lt;/p&gt;
&lt;p&gt;That's all! I hope this very simple service can be useful to other
people and once again, if you want to improve it, I will be glad to
accept your pull requests on GitHub.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 25 Oct 2014 10:56:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2014-10-25:/2014/10/25/automatically-pull-updated-docker-images-and-restart-containers-with-docker-puller/</guid><category>HowTo</category><category>containers</category><category>docker</category><category>docker.io</category><category>Flask</category><category>Python</category><category>howto</category><category>Linux</category></item><item><title>Create an EncFS volume compatible with BoxCryptor Classic</title><link>https://www.andreagrandi.it/2014/09/12/create-an-encfs-volume-compatible-with-boxcryptor-classic/</link><description>&lt;p&gt;If you are planning to share an encrypted volume between Linux/OSX and
Windows (I will assume you are sharing it on Dropbox, but you could use
any similar service) and you are using
&lt;a href="http://www.arg0.net/encfs"&gt;&lt;strong&gt;EncFS&lt;/strong&gt;&lt;/a&gt; under Linux/OSX and
&lt;a href="https://www.boxcryptor.com"&gt;&lt;strong&gt;BoxCryptor&lt;/strong&gt;&lt;/a&gt; under Windows, there are
some specifig settings to use when you create the EncFS volume. Infact
even if BoxCryptor claims to be "encfs compatible", it's not 100%.&lt;/p&gt;
&lt;p&gt;Suppose you want to create an encrypted volume located at
&lt;strong&gt;&lt;code&gt;$HOME/.TestTmpEncrypted&lt;/code&gt;&lt;/strong&gt; and mounted at &lt;strong&gt;&lt;code&gt;$HOME/TestTmp&lt;/code&gt;&lt;/strong&gt; you need
the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;encfs&lt;span class="w"&gt; &lt;/span&gt;~/.TestTmpEncrypted&lt;span class="w"&gt; &lt;/span&gt;~/TestTmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;answer "Y" when you are asked if you want to create the folders:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;The&lt;span class="w"&gt; &lt;/span&gt;directory&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/andrea/.TestTmpEncrypted/&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;exist.&lt;span class="w"&gt; &lt;/span&gt;Should&lt;span class="w"&gt; &lt;/span&gt;it&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;created?&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;y,n&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;y
The&lt;span class="w"&gt; &lt;/span&gt;directory&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/andrea/TestTmp&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;exist.&lt;span class="w"&gt; &lt;/span&gt;Should&lt;span class="w"&gt; &lt;/span&gt;it&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;created?&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;y,n&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At this point you will need to select between default paranoia mode or
advanced mode. Please choose the &lt;strong&gt;advanced&lt;/strong&gt; one (x):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Creating&lt;span class="w"&gt; &lt;/span&gt;new&lt;span class="w"&gt; &lt;/span&gt;encrypted&lt;span class="w"&gt; &lt;/span&gt;volume.
Please&lt;span class="w"&gt; &lt;/span&gt;choose&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;one&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;options:
&lt;span class="w"&gt; &lt;/span&gt;enter&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;expert&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;mode,
&lt;span class="w"&gt; &lt;/span&gt;enter&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;p&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pre-configured&lt;span class="w"&gt; &lt;/span&gt;paranoia&lt;span class="w"&gt; &lt;/span&gt;mode,
&lt;span class="w"&gt; &lt;/span&gt;anything&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;empty&lt;span class="w"&gt; &lt;/span&gt;line&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;standard&lt;span class="w"&gt; &lt;/span&gt;mode.
?&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Manual configuration mode selected.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Select&lt;span class="w"&gt; &lt;/span&gt;AES&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;cypher&lt;span class="w"&gt; &lt;/span&gt;algorithm:

The&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;cypher&lt;span class="w"&gt; &lt;/span&gt;algorithms&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;available:
&lt;span class="m"&gt;1&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;AES&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;byte&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;cipher
--&lt;span class="w"&gt; &lt;/span&gt;Supports&lt;span class="w"&gt; &lt;/span&gt;key&lt;span class="w"&gt; &lt;/span&gt;lengths&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bits
--&lt;span class="w"&gt; &lt;/span&gt;Supports&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;sizes&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bytes
&lt;span class="m"&gt;2&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;Blowfish&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;byte&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;cypher
--&lt;span class="w"&gt; &lt;/span&gt;Supports&lt;span class="w"&gt; &lt;/span&gt;key&lt;span class="w"&gt; &lt;/span&gt;lengths&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bits
--&lt;span class="w"&gt; &lt;/span&gt;Supports&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;sizes&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bytes

Enter&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;number&lt;span class="w"&gt; &lt;/span&gt;corresponding&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;choice:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;

Selected&lt;span class="w"&gt; &lt;/span&gt;algorithm&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AES&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Select &lt;strong&gt;256&lt;/strong&gt; as key size:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Please&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;key&lt;span class="w"&gt; &lt;/span&gt;size&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bits.&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;cypher&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;have&lt;span class="w"&gt; &lt;/span&gt;chosen
supports&lt;span class="w"&gt; &lt;/span&gt;sizes&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bits&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;increments&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bits.
For&lt;span class="w"&gt; &lt;/span&gt;example:
&lt;span class="m"&gt;128&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;192&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;
Selected&lt;span class="w"&gt; &lt;/span&gt;key&lt;span class="w"&gt; &lt;/span&gt;size:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;

Using&lt;span class="w"&gt; &lt;/span&gt;key&lt;span class="w"&gt; &lt;/span&gt;size&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bits
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Choose &lt;strong&gt;1024&lt;/strong&gt; as block size:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Select&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;size&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bytes.&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;cypher&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;have&lt;span class="w"&gt; &lt;/span&gt;chosen
supports&lt;span class="w"&gt; &lt;/span&gt;sizes&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;increments&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;.
Alternatively,&lt;span class="w"&gt; &lt;/span&gt;just&lt;span class="w"&gt; &lt;/span&gt;press&lt;span class="w"&gt; &lt;/span&gt;enter&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="o"&gt;)&lt;/span&gt;

filesystem&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;size:

Using&lt;span class="w"&gt; &lt;/span&gt;filesystem&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;size&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bytes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Select &lt;strong&gt;Stream&lt;/strong&gt; as filename encoding:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;The&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;filename&lt;span class="w"&gt; &lt;/span&gt;encoding&lt;span class="w"&gt; &lt;/span&gt;algorithms&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;available:
&lt;span class="m"&gt;1&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;Block&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Block&lt;span class="w"&gt; &lt;/span&gt;encoding,&lt;span class="w"&gt; &lt;/span&gt;hides&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt; &lt;/span&gt;size&lt;span class="w"&gt; &lt;/span&gt;somewhat
&lt;span class="m"&gt;2&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;Null&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;encryption&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;filenames
&lt;span class="m"&gt;3&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;Stream&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Stream&lt;span class="w"&gt; &lt;/span&gt;encoding,&lt;span class="w"&gt; &lt;/span&gt;keeps&lt;span class="w"&gt; &lt;/span&gt;filenames&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;short&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;possible

Enter&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;number&lt;span class="w"&gt; &lt;/span&gt;corresponding&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;choice:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;

Selected&lt;span class="w"&gt; &lt;/span&gt;algorithm&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Stream&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do &lt;strong&gt;NOT&lt;/strong&gt; enable &lt;strong&gt;filename initialization vector chaining&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Enable&lt;span class="w"&gt; &lt;/span&gt;filename&lt;span class="w"&gt; &lt;/span&gt;initialization&lt;span class="w"&gt; &lt;/span&gt;vector&lt;span class="w"&gt; &lt;/span&gt;chaining?
This&lt;span class="w"&gt; &lt;/span&gt;makes&lt;span class="w"&gt; &lt;/span&gt;filename&lt;span class="w"&gt; &lt;/span&gt;encoding&lt;span class="w"&gt; &lt;/span&gt;dependent&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;complete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;path,
rather&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;encoding&lt;span class="w"&gt; &lt;/span&gt;each&lt;span class="w"&gt; &lt;/span&gt;path&lt;span class="w"&gt; &lt;/span&gt;element&lt;span class="w"&gt; &lt;/span&gt;individually.
The&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;here&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;Yes.
Any&lt;span class="w"&gt; &lt;/span&gt;response&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;begin&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;mean&lt;span class="w"&gt; &lt;/span&gt;Yes:&lt;span class="w"&gt; &lt;/span&gt;no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do &lt;strong&gt;NOT&lt;/strong&gt; enable &lt;strong&gt;per-file initialization vectors&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Enable&lt;span class="w"&gt; &lt;/span&gt;per-file&lt;span class="w"&gt; &lt;/span&gt;initialization&lt;span class="w"&gt; &lt;/span&gt;vectors?
This&lt;span class="w"&gt; &lt;/span&gt;adds&lt;span class="w"&gt; &lt;/span&gt;about&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="w"&gt; &lt;/span&gt;per&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;storage&lt;span class="w"&gt; &lt;/span&gt;requirements.
It&lt;span class="w"&gt; &lt;/span&gt;should&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;affect&lt;span class="w"&gt; &lt;/span&gt;performance&lt;span class="w"&gt; &lt;/span&gt;except&lt;span class="w"&gt; &lt;/span&gt;possibly&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;applications
which&lt;span class="w"&gt; &lt;/span&gt;rely&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;block-aligned&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;io&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;performance.
The&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;here&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;Yes.
Any&lt;span class="w"&gt; &lt;/span&gt;response&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;begin&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;mean&lt;span class="w"&gt; &lt;/span&gt;Yes:&lt;span class="w"&gt; &lt;/span&gt;no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do &lt;strong&gt;NOT&lt;/strong&gt; enable &lt;strong&gt;external chained IV&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;External&lt;span class="w"&gt; &lt;/span&gt;chained&lt;span class="w"&gt; &lt;/span&gt;IV&lt;span class="w"&gt; &lt;/span&gt;disabled,&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;both&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IV chaining&amp;#39;&lt;/span&gt;
and&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;unique IV&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;features&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;required&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;option.
Enable&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;authentication&lt;span class="w"&gt; &lt;/span&gt;code&lt;span class="w"&gt; &lt;/span&gt;headers
on&lt;span class="w"&gt; &lt;/span&gt;every&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;file?&lt;span class="w"&gt; &lt;/span&gt;This&lt;span class="w"&gt; &lt;/span&gt;adds&lt;span class="w"&gt; &lt;/span&gt;about&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="w"&gt; &lt;/span&gt;per&lt;span class="w"&gt; &lt;/span&gt;block
to&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;storage&lt;span class="w"&gt; &lt;/span&gt;requirements&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;file,&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;significantly&lt;span class="w"&gt; &lt;/span&gt;affects
performance&lt;span class="w"&gt; &lt;/span&gt;but&lt;span class="w"&gt; &lt;/span&gt;it&lt;span class="w"&gt; &lt;/span&gt;also&lt;span class="w"&gt; &lt;/span&gt;means&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;almost&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;any&lt;span class="w"&gt; &lt;/span&gt;modifications&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;errors
within&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;caught&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;cause&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;read&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;error.
The&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;here&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;No.
Any&lt;span class="w"&gt; &lt;/span&gt;response&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;begin&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;mean&lt;span class="w"&gt; &lt;/span&gt;No:&lt;span class="w"&gt; &lt;/span&gt;no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do &lt;strong&gt;NOT&lt;/strong&gt; enable &lt;strong&gt;random bytes to each block header&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Add&lt;span class="w"&gt; &lt;/span&gt;random&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;each&lt;span class="w"&gt; &lt;/span&gt;block&lt;span class="w"&gt; &lt;/span&gt;header?
This&lt;span class="w"&gt; &lt;/span&gt;adds&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;performance&lt;span class="w"&gt; &lt;/span&gt;penalty,&lt;span class="w"&gt; &lt;/span&gt;but&lt;span class="w"&gt; &lt;/span&gt;ensures&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;blocks
have&lt;span class="w"&gt; &lt;/span&gt;different&lt;span class="w"&gt; &lt;/span&gt;authentication&lt;span class="w"&gt; &lt;/span&gt;codes.&lt;span class="w"&gt; &lt;/span&gt;Note&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;can
have&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;same&lt;span class="w"&gt; &lt;/span&gt;benefits&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;enabling&lt;span class="w"&gt; &lt;/span&gt;per-file&lt;span class="w"&gt; &lt;/span&gt;initialisation
vectors,&lt;span class="w"&gt; &lt;/span&gt;which&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;come&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;great&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;performance
penalty.
Select&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;number&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;bytes,&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;random&lt;span class="w"&gt; &lt;/span&gt;bytes&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enable &lt;strong&gt;file-hole pass-through&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Enable&lt;span class="w"&gt; &lt;/span&gt;file-hole&lt;span class="w"&gt; &lt;/span&gt;pass-through?
This&lt;span class="w"&gt; &lt;/span&gt;avoids&lt;span class="w"&gt; &lt;/span&gt;writing&lt;span class="w"&gt; &lt;/span&gt;encrypted&lt;span class="w"&gt; &lt;/span&gt;blocks&lt;span class="w"&gt; &lt;/span&gt;when&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;holes&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;created.
The&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;here&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;Yes.
Any&lt;span class="w"&gt; &lt;/span&gt;response&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;begin&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;mean&lt;span class="w"&gt; &lt;/span&gt;Yes:&lt;span class="w"&gt; &lt;/span&gt;yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally you will see:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Configuration&lt;span class="w"&gt; &lt;/span&gt;finished.&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;filesystem&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;created&lt;span class="w"&gt; &lt;/span&gt;has
the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;properties:
Filesystem&lt;span class="w"&gt; &lt;/span&gt;cypher:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ssl/aes&amp;quot;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;:0:2
Filename&lt;span class="w"&gt; &lt;/span&gt;encoding:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nameio/stream&amp;quot;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;:1:2
Key&lt;span class="w"&gt; &lt;/span&gt;Size:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bits
Block&lt;span class="w"&gt; &lt;/span&gt;Size:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bytes
File&lt;span class="w"&gt; &lt;/span&gt;holes&lt;span class="w"&gt; &lt;/span&gt;passed&lt;span class="w"&gt; &lt;/span&gt;through&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;ciphertext.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At this point set a passphrase for your new volume:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Now&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;need&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;enter&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;password&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;filesystem.
You&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;need&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;remember&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;password,&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;there&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;absolutely
no&lt;span class="w"&gt; &lt;/span&gt;recovery&lt;span class="w"&gt; &lt;/span&gt;mechanism.&lt;span class="w"&gt; &lt;/span&gt;However,&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;password&lt;span class="w"&gt; &lt;/span&gt;can&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;changed
later&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;encfsctl.

New&lt;span class="w"&gt; &lt;/span&gt;Encfs&lt;span class="w"&gt; &lt;/span&gt;Password:
Verify&lt;span class="w"&gt; &lt;/span&gt;Encfs&lt;span class="w"&gt; &lt;/span&gt;Password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should be able to mount this volume using BoxCryptor.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 12 Sep 2014 15:27:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2014-09-12:/2014/09/12/create-an-encfs-volume-compatible-with-boxcryptor-classic/</guid><category>HowTo, Linux, Sicurezza</category><category>boxcryptor</category><category>dropbox</category><category>encfs</category></item><item><title>How to configure Edimax EW-7811UN Wifi dongle on Raspbian</title><link>https://www.andreagrandi.it/2014/09/02/how-to-configure-edimax-ew-7811un-wifi-dongle-on-raspbian/</link><description>&lt;p&gt;If you want to connect your &lt;strong&gt;RaspberryPi&lt;/strong&gt; to your home network and you
want to avoid cables, I suggest you to use the &lt;strong&gt;Edimax wifi adapter&lt;/strong&gt;.
This device is quite cheap (around £8 on
&lt;a href="http://www.amazon.co.uk/Edimax-EW-7811UN-150Mbps-Wireless-Adapter/dp/B003MTTJOY/"&gt;Amazon&lt;/a&gt;)
and it's very easy to configure on Raspbian (I assume you are using a
recent version of Raspbian. I'm using the one released on 20/06/2014).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2014/09/edimax-pi3.png"&gt;&lt;img alt="edimax-pi3" src="https://www.andreagrandi.it/images/2014/09/edimax-pi3.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Configure the wifi adapter&lt;/h2&gt;
&lt;p&gt;Edit &lt;strong&gt;/etc/network/interfaces&lt;/strong&gt; and insert these configuration values:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;auto&lt;span class="w"&gt; &lt;/span&gt;lo
iface&lt;span class="w"&gt; &lt;/span&gt;lo&lt;span class="w"&gt; &lt;/span&gt;inet&lt;span class="w"&gt; &lt;/span&gt;loopback
iface&lt;span class="w"&gt; &lt;/span&gt;eth0&lt;span class="w"&gt; &lt;/span&gt;inet&lt;span class="w"&gt; &lt;/span&gt;dhcp

allow-hotplug&lt;span class="w"&gt; &lt;/span&gt;wlan0
auto&lt;span class="w"&gt; &lt;/span&gt;wlan0

iface&lt;span class="w"&gt; &lt;/span&gt;wlan0&lt;span class="w"&gt; &lt;/span&gt;inet&lt;span class="w"&gt; &lt;/span&gt;dhcp
wpa-ssid&lt;span class="w"&gt; &lt;/span&gt;YOURESSID
wpa-psk&lt;span class="w"&gt; &lt;/span&gt;YOURWPAPASSWORD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Power management issue&lt;/h2&gt;
&lt;p&gt;There is a known "issue" with this adapter default configuration that
makes it to turn off if the wlan interface is not in use for some
minutes. To avoid this you have to customize the parameters used to load
the kernel module. First check that your adapter is using &lt;strong&gt;8192cu&lt;/strong&gt;
module:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;lsmod&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8192&lt;/span&gt;
8192cu&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;551136&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create the file &lt;strong&gt;/etc/modprobe.d/8192cu.conf&lt;/strong&gt; and insert the following
lines inside:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# prevent power down of wireless when idle&lt;/span&gt;
options&lt;span class="w"&gt; &lt;/span&gt;8192cu&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;rtw_power_mgnt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;rtw_enusbss&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I also suggest to create a little entry in crontab to make the
RaspberryPi ping your router every minute. This will ensure that your
wifi connection will stay alive. To edit crontab just type (from pi
user, you don't need to be root):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;crontab&lt;span class="w"&gt; &lt;/span&gt;-e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and insert this line at the end:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;*/1&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;ping&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;192&lt;/span&gt;.168.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;where 192.168.0.1 is the IP of your router (of course substitute this
value with the ip of your router).&lt;/p&gt;
&lt;h2&gt;Keep Alive Script&lt;/h2&gt;
&lt;p&gt;I created a further script to keep my WIFI alive. This script will ping
the router (change the IP using the one of your router) every 5 minutes
and if the ping fails it brings down the wlan0 interface, the kernel
module for the wifi and bring them up again.&lt;/p&gt;
&lt;p&gt;
&lt;script src="https://gist.github.com/andreagrandi/c703e4e67c38fbecf340.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;Just put this script in &lt;strong&gt;/root/wifi_recover.sh&lt;/strong&gt; and then execute from
&lt;strong&gt;root&lt;/strong&gt; user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;wifi_recover.sh
crontab&lt;span class="w"&gt; &lt;/span&gt;-e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Insert this line inside the crontab editor:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;*/5&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;*&lt;span class="w"&gt; &lt;/span&gt;/root/wifi_recover.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The configuration is done. Just reboot your RaspberryPi and enjoy your
wifi connection.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 02 Sep 2014 18:21:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2014-09-02:/2014/09/02/how-to-configure-edimax-ew-7811un-wifi-dongle-on-raspbian/</guid><category>HowTo</category><category>howto</category><category>Linux</category><category>RaspberryPI</category><category>WIFI</category><category>networking</category><category>Debian</category></item><item><title>Configuring ddclient to update your dynamic DNS at noip.com</title><link>https://www.andreagrandi.it/2014/09/02/configuring-ddclient-to-update-your-dynamic-dns-at-noip-com/</link><description>&lt;p&gt;&lt;a href="http://noip.com"&gt;&lt;strong&gt;noip.com&lt;/strong&gt;&lt;/a&gt; is one of the few dynamic DNS free
services that are reliable to use. If you have, like in my situation, a
RaspberryPi connected to your home DSL and you want it to be always
reachable without knowing the current IP address (the IP could change if
you have a normal DSL service at home), you need a dynamic DNS service.&lt;/p&gt;
&lt;p&gt;To update the noip.com one you just need &lt;strong&gt;ddclient&lt;/strong&gt; a tool that is
available in Raspbian/Debian repository. You can install it with this
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ddclient
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then you just need to edit &lt;strong&gt;/etc/ddclient.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;protocol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;dyndns2
&lt;span class="nv"&gt;use&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;web,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;web&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;checkip.dyndns.com/,&lt;span class="w"&gt; &lt;/span&gt;web-skip&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IP Address&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;server&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;dynupdate.no-ip.com
&lt;span class="nv"&gt;login&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yourusername
&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yourpassword
yourhostname.no-ip.org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and restart the client:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;/etc/init.d/ddclient&lt;span class="w"&gt; &lt;/span&gt;restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's all! Please remember that noip.com &lt;strong&gt;free accounts&lt;/strong&gt; have a
&lt;strong&gt;limitation&lt;/strong&gt;: they need to be confirmed every 30 days (you will
receive an email and you need to click on the link contained to update
your DNS).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 02 Sep 2014 16:26:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2014-09-02:/2014/09/02/configuring-ddclient-to-update-your-dynamic-dns-at-noip-com/</guid><category>HowTo</category><category>howto</category><category>linux</category><category>dns</category></item><item><title>Getting started with Digital Ocean VPS: configuring DNS and Postfix for email forwarding</title><link>https://www.andreagrandi.it/2014/08/31/getting-started-with-digital-ocean-vps-configuring-dns-and-postfix-for-email-forwarding/</link><description>&lt;p&gt;I have recently migrated my website from a shared hosting to a dedicated
VPS on Digital Ocean. Having a VPS surely gives you unlimited
possibilities, compared to a shared hosting, but of course you have to
manage some services by yourself.&lt;/p&gt;
&lt;p&gt;In my case I only needed: SSH access, LEMP configuration (Nginx + MySQL
+ PHP) to serve my WordPress blog and Postfix to use email forwarding
from my aliases to my personal email.&lt;/p&gt;
&lt;h2&gt;Configuring DNS on Digital Ocean&lt;/h2&gt;
&lt;p&gt;Understanding how to properly configure the DNS entries in the panel
could be a bit tricky if it's not your daily bread. In particular there
is a Digital Ocean configuration that assumes certain things about your
droplet, so it's better to configure it properly.&lt;/p&gt;
&lt;p&gt;For example the droplet name should not be casual, but it should match
your domain name: I initially called my host "andreagrandi" and I had to
rename it to "andreagrandi.it" to have the proper PTR values.&lt;/p&gt;
&lt;p&gt;You will need to create at least a "mail" record, pointing to your IP
and an "MX" record pointing to mail.yourdomain.com. (please note the dot
at the end of the domain name). Here is the configuration of my own
droplet (you will notice also a CNAME record. You need it if you want
www.yourdomain.com to correctly point to your ip.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2014/08/dns_config_digitalocean.jpg"&gt;&lt;img alt="dns_config_digitalocean" src="https://www.andreagrandi.it/images/2014/08/dns_config_digitalocean.jpg" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Configuring Postfix&lt;/h2&gt;
&lt;p&gt;In my case I only needed some aliases that I use to forward emails to my
GMail account, so the configuration is quite easy. First you need to
install Postfix:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;postfix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you need to edit&lt;strong&gt; /etc/postfix/main.cf&lt;/strong&gt; customizing myhostname
with your domain name and add &lt;strong&gt;virtual_alias_maps&lt;/strong&gt; and
&lt;strong&gt;virtual_alias_domains&lt;/strong&gt; parameters. Please also check that
&lt;strong&gt;mynetworks&lt;/strong&gt; is configured exactly as I did, or you will make your
mail server vulnerable to spam bots. You can see my complete
configuration here:&lt;/p&gt;
&lt;p&gt;
&lt;script src="https://gist.github.com/andreagrandi/fe6246dac228250ee2c0.js"&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;h2&gt;Add your email aliases&lt;/h2&gt;
&lt;p&gt;Edit &lt;strong&gt;/etc/postfix/virtual&lt;/strong&gt; file and add your aliases, one per line,
like in this example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;info@yourdomain.com&lt;span class="w"&gt; &lt;/span&gt;youremail@gmail.com
sales@yourdomain.com&lt;span class="w"&gt; &lt;/span&gt;youremail@gmail.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At this point update the alias map and reload Postfix configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;postmap&lt;span class="w"&gt; &lt;/span&gt;/etc/postfix/virtual
sudo&lt;span class="w"&gt; &lt;/span&gt;/etc/init.d/postfix&lt;span class="w"&gt; &lt;/span&gt;reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As you can see, configuring Postfix is quite easy, you just need to be
careful when you configure the DNS records in the control panel. Are you
curious to try how Digital Ocean VPS works? Fancy &lt;strong&gt;10\$ credit&lt;/strong&gt;
(enough for 2 months if you choose the basic droplet) for &lt;strong&gt;free&lt;/strong&gt;? Use
this link and enjoy it
&lt;a href="https://www.digitalocean.com/?refcode=cc8349e328a5"&gt;https://www.digitalocean.com/?refcode=cc8349e328a5&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 31 Aug 2014 17:02:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2014-08-31:/2014/08/31/getting-started-with-digital-ocean-vps-configuring-dns-and-postfix-for-email-forwarding/</guid><category>HowTo</category><category>dns</category><category>postfix</category><category>vps</category><category>howto</category><category>digitalocean</category><category>email</category></item><item><title>Travis-ci.org and Coveralls.io: Continuous Integration and QA made easy</title><link>https://www.andreagrandi.it/2014/03/02/travis-ci-org-and-coveralls-io-qa-made-easy/</link><description>&lt;p&gt;Developing a large web application or before deploying some code is very
important to verify the quality of the code itself, check if we have
introduced any regression or bug and have something that tell us if we
are increasing or decreasing the quality of the code.&lt;/p&gt;
&lt;p&gt;Suppose we are in an organization or a company where the basic rule is:
&lt;strong&gt;master&lt;/strong&gt; branch is always ready/stable to be deployed. In a team
usually people work on personal branches, then when the code is stable
it's merged with master.&lt;/p&gt;
&lt;p&gt;How do we check if the code is stable and ready to be merged? First of
all we need to cover all our code with &lt;strong&gt;proper tests&lt;/strong&gt; (I won't go in
details about unit testing here, I assume that the reader knows what I'm
talking about), then we need to actually run them, possibly in an
isolated environment that is similar to the production one, and check if
they all pass. If they do, we are quite safe to merge our code with
master branch.&lt;/p&gt;
&lt;p&gt;How can we ensure that all the developers remember to run tests when
they push some new code? To make things a bit more real, let's take the
example of a Python/Django product (or even a library) that currently
supports &lt;strong&gt;Python 2.6, 2.7, 3.3&lt;/strong&gt; and &lt;strong&gt;Django 1.4.x, 1.5.x, 1.6.x&lt;/strong&gt;.
The whole matrix consists of &lt;strong&gt;9 possible combinations&lt;/strong&gt;. Do we have to
manually run tests on 9 configurations? No, we don't.&lt;/p&gt;
&lt;h2&gt;Travis-ci.org&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Travis&lt;/strong&gt; is a continuous integration tool that, once configured, takes
care of these tasks and let us save lot of time (that we can use to
actually write code). &lt;a href="https://travis-ci.org"&gt;Travis-ci.org&lt;/a&gt; is an
online service that works with &lt;a href="https://github.com"&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt; (it
requires we use GitHub as repository for our code), and once we have
connected the two accounts and configured a very simple file in our
projects, it's automatically triggered when we push on our GitHub
repository.&lt;/p&gt;
&lt;p&gt;The configuration consists of adding a file named &lt;strong&gt;.travis.yml&lt;/strong&gt; in the
root of our project. A working example is available here
&lt;a href="https://github.com/andreagrandi/workshopvenues/blob/master/.travis.yml"&gt;https://github.com/andreagrandi/workshopvenues/blob/master/.travis.yml&lt;/a&gt;
(all the env variables I set are not required normally, but that's where
I save the values of my configuration, so they need to be initialized
before I can run tests).&lt;/p&gt;
&lt;p&gt;The service supports most of the languages that are commonly used and
even a good number of PAAS, making it very easy to automatically
&lt;strong&gt;deploy&lt;/strong&gt; our code. If it should not be enough for your needs, they
also expose a public &lt;strong&gt;API&lt;/strong&gt;. I suggest you to give a look at the
official documentation that will explain everything in details
&lt;a href="http://docs.travis-ci.com"&gt;http://docs.travis-ci.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once everything is configured, we will have something like this on our
console
&lt;a href="https://travis-ci.org/andreagrandi/workshopvenues/jobs/19882128"&gt;https://travis-ci.org/andreagrandi/workshopvenues/jobs/19882128&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2014/03/travis-ci-console.png"&gt;&lt;img alt="travis-ci-console" src="https://www.andreagrandi.it/images/2014/03/travis-ci-console-1024x544.png" width="90%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If something goes wrong (if tests don't pass for example) we receive a
notification with all the informations about the failing build, and if
we had configured an automatic deployment of course the code would not
be deployed in case of a failing build.&lt;/p&gt;
&lt;p&gt;Travis-ci.org is &lt;strong&gt;completly free&lt;/strong&gt; for opensource projects and has also
a paid version for private repositories.&lt;/p&gt;
&lt;h2&gt;Coveralls.io&lt;/h2&gt;
&lt;p&gt;There is a nice tool available for Python called
&lt;a href="http://nedbatchelder.com/code/coverage"&gt;&lt;strong&gt;coverage&lt;/strong&gt;&lt;/a&gt;. Basically it
runs tests and checks the percentage of the source code that is covered
by tests, producing a nice report that shows us the percentage for every
single file/module and even the lines of code that have been tested.&lt;/p&gt;
&lt;p&gt;Thanks to Coveralls.io and the use of Travis, even these tasks are
completly automatized and the results are available online like in this
example &lt;a href="https://coveralls.io/builds/560853"&gt;https://coveralls.io/builds/560853&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The configuration is quite easy. We need to connect our Coveralls.io
profile with GitHub, like we did for Travis-ci.org and then enable the
repository. To trigger Coveralls after a successful Travis build, we
need to have these lines at the end of our &lt;strong&gt;.travis.yml&lt;/strong&gt; file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;after_success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;coveralls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2014/03/coveralls-console.png"&gt;&lt;img alt="coveralls-console" src="https://www.andreagrandi.it/images/2014/03/coveralls-console-1024x767.png" width="90%"&gt;&lt;/a&gt;&lt;br&gt;
Even Coveralls.io is &lt;strong&gt;completly free&lt;/strong&gt; for opensource projects and
offers a paid version for private repositories.&lt;/p&gt;
&lt;h2&gt;Heroku&lt;/h2&gt;
&lt;p&gt;I use &lt;a href="https://www.heroku.com"&gt;&lt;strong&gt;Heroku&lt;/strong&gt;&lt;/a&gt; to host and run my web
application. Normally to deploy on Heroku you so something like this:
&lt;strong&gt;git push heroku master&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Adding these settings to the &lt;strong&gt;.travis.yaml&lt;/strong&gt; file, I can automatically
deploy the application on Heroku, if the build was successful:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;heroku&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;api_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;secure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;R4LFkVu1/io9wSb/FvVL6UEaKU7Y4vfen/gCDe0OnEwsH+VyOwcT5tyINAg05jWXhRhsgjYT9AuyB84uCuNZg+lO7HwV5Q4WnHo5IVcCrv0PUq/CbRPUS4C2kDD7zbA1ByCd224tcfBmUtu+DPzyouk23oJH+lUwa/FeUk0Yl+I=&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;workshopvenues&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;andreagrandi/workshopvenues&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;python&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;workshopvenues/manage.py&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;syncdb&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;python&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;workshopvenues/manage.py&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;migrate&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Not only the code is deployed, after deployment the &lt;strong&gt;South migrations&lt;/strong&gt; are executed.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;These two tools are saving me lot of time and are ensuring that the code
I release for a project I'm working on
(&lt;a href="https://github.com/andreagrandi/workshopvenues"&gt;&lt;strong&gt;WorkshopVenues&lt;/strong&gt;&lt;/a&gt;)
is always tested when I push it on my repository.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 02 Mar 2014 13:44:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2014-03-02:/2014/03/02/travis-ci-org-and-coveralls-io-qa-made-easy/</guid><category>Linux, Programmazione, Python</category></item><item><title>Factoryboy: Creating data for unit tests in an easy way</title><link>https://www.andreagrandi.it/2014/01/30/factoryboy-creating-data-for-unit-tests-in-an-easy-way/</link><description>&lt;p&gt;I recently prepared a presentation about
&lt;a href="http://factoryboy.readthedocs.org"&gt;&lt;strong&gt;Factoryboy&lt;/strong&gt;&lt;/a&gt;, a Python library
that automates lot of the work when a developer needs to create some
data for unit testing.&lt;/p&gt;
&lt;p&gt;I've been using this library since a couple of months, both in the
company where I work and on a personal open source project I'm working
on. I will give a presentation about this library in an internal
workshop in my company and I'm available to give it in any Python/Django
related event around &lt;strong&gt;London&lt;/strong&gt;, if anyone is interested.&lt;/p&gt;
&lt;p&gt;The slides are already available:&lt;/p&gt;
&lt;p&gt;
&lt;script async class="speakerdeck-embed" data-id="55509260698a013170b8769b07168819" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;
&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 30 Jan 2014 12:53:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2014-01-30:/2014/01/30/factoryboy-creating-data-for-unit-tests-in-an-easy-way/</guid><category>Programmazione, Python</category></item><item><title>How to fix encfs installation on OSX 10.9 (Mavericks) and brew</title><link>https://www.andreagrandi.it/2013/11/08/how-to-fix-encfs-installation-on-osx-10-9-mavericks-and-brew/</link><description>&lt;p&gt;After upgrading from OSX 10.8.x to 10.9 (Mavericks), &lt;strong&gt;encfs&lt;/strong&gt; recipe is
broken. First of all you have to fix a problem with a library header:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;/usr/include/sys/_endian.h&lt;span class="w"&gt; &lt;/span&gt;/usr/include/sys/endian.h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then you can install encfs using this remote brew recipe:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew&lt;span class="w"&gt; &lt;/span&gt;reinstall&lt;span class="w"&gt; &lt;/span&gt;https://gist.github.com/ghibble/7297078/raw/cae1ff000a5e1cfc670f5b7a611279ed494b63af/encfs.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It's also possible that you have to fix fuse4x installation before being
able to use encfs (I had to do it):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;/bin/cp&lt;span class="w"&gt; &lt;/span&gt;-rfX&lt;span class="w"&gt; &lt;/span&gt;/usr/local/Cellar/fuse4x-kext/0.9.2/Library/Extensions/fuse4x.kext&lt;span class="w"&gt; &lt;/span&gt;/Library/Extensions
sudo&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+s&lt;span class="w"&gt; &lt;/span&gt;/Library/Extensions/fuse4x.kext/Support/load_fuse4x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's it! Please note that this is just a workaround (thanks to
&lt;strong&gt;Giovanni Bajo&lt;/strong&gt; for suggesting me the symlink fix). Please also note
that this recipe uses fuse4x library and not the most updated osxfuse
(but it works, anyway). Some other users reported me that there is a fix
for the original brew recipe, and this one uses osxfuse. You can find it
here &lt;a href="https://gist.github.com/defunctzombie/7324625"&gt;https://gist.github.com/defunctzombie/7324625&lt;/a&gt; but I haven't
tested it yet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; to fully integrate encfs with OSX, I also suggest to follow
this nice guide &lt;a href="http://www.maketecheasier.com/install-encfs-mac/"&gt;http://www.maketecheasier.com/install-encfs-mac/&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 08 Nov 2013 21:17:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-11-08:/2013/11/08/how-to-fix-encfs-installation-on-osx-10-9-mavericks-and-brew/</guid><category>HowTo, OSX, Sicurezza</category><category>cloud</category><category>encfs</category><category>encryption</category><category>fuse4x</category><category>OSX</category><category>security</category></item><item><title>How to make subwoofer work in Ubuntu</title><link>https://www.andreagrandi.it/2013/06/22/how-to-make-subwoofer-work-in-ubuntu/</link><description>&lt;p&gt;Using the same computer with Windows 8 and Ubuntu I noticed that the
sound was worse in Ubuntu and I discovered why soon: &lt;strong&gt;subwoofer&lt;/strong&gt;
doesn't work out of the box!&lt;/p&gt;
&lt;h2&gt;How to fix it&lt;/h2&gt;
&lt;p&gt;The fix is quite easy to apply (but it was not easy to find the right
one!). First of all edit &lt;strong&gt;/etc/pulse/default.pa&lt;/strong&gt; and add this line at
the end:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;load-module&lt;span class="w"&gt; &lt;/span&gt;module-combine&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;channels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;channel_map&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;front-left,front-right,rear-left,rear-right,front-center,lfe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then edit &lt;strong&gt;&lt;code&gt;/etc/pulse/daemon.conf&lt;/code&gt;&lt;/strong&gt;, modify the line
&lt;code&gt;enable-lfe-remixing: no&lt;/code&gt; to &lt;strong&gt;&lt;code&gt;enable-lfe-remixing: yes&lt;/code&gt;&lt;/strong&gt;, then
uncomment it (remove the semicolon in front of it). Reboot your PC and
enjoy the subwoofer!&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://forums.gentoo.org/viewtopic-t-859769.html"&gt;http://forums.gentoo.org/viewtopic-t-859769.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/53802/subwoofer-sound-preferences-problem"&gt;http://askubuntu.com/questions/53802/subwoofer-sound-preferences-problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 22 Jun 2013 19:19:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-06-22:/2013/06/22/how-to-make-subwoofer-work-in-ubuntu/</guid><category>HowTo</category><category>sound</category><category>subwoofer</category><category>Ubuntu</category><category>Linux</category></item><item><title>How to fix a WordPress website hacked by "zend_framework" malware</title><link>https://www.andreagrandi.it/2013/06/22/how-to-fix-a-wordpress-websitet-hacked-by-zend_framework-malware/</link><description>&lt;p&gt;I admit. &lt;strong&gt;This website&lt;/strong&gt;, like thousands of others, &lt;strong&gt;has been
hacked&lt;/strong&gt;! I still have to identify the precise source of the attack, but
I've found out that is very common. I was able to discover about the
attack just because the dashboard of WordPress stopped working. I
decided to investigate and I found this strind on top of every .php file
&lt;a href="http://pastebin.com/k0iQymRy"&gt;http://pastebin.com/k0iQymRy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just googling I discovered that I was not alone
&lt;a href="http://stackoverflow.com/questions/16963818/server-hacked-on-wordpress-files"&gt;http://stackoverflow.com/questions/16963818/server-hacked-on-wordpress-files&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;How to fix this?&lt;/h2&gt;
&lt;p&gt;The best solution would be to restore the files with a valid backup, but
sometimes this is not possible. Here comes an handy bash solution (note:
you need to be able to access your hosting with a SSH shell to execute
this command): &lt;a href="http://pastebin.com/V3nFwwtZ"&gt;http://pastebin.com/V3nFwwtZ&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 22 Jun 2013 18:44:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-06-22:/2013/06/22/how-to-fix-a-wordpress-websitet-hacked-by-zend_framework-malware/</guid><category>HowTo, Linux, Sicurezza, Ubuntu (EN), WordPress</category></item><item><title>How to fix pip under Debian 6.0 (squeeze): ImportError: cannot import name parser</title><link>https://www.andreagrandi.it/2013/05/02/how-to-fix-pip-under-debian-6-0-squeeze-importerror-cannot-import-name-parser/</link><description>&lt;p&gt;The &lt;strong&gt;pip&lt;/strong&gt; utility distributed with Debian 6.0 has a bug once you
upgrade it with &lt;strong&gt;pip install -U pip&lt;/strong&gt;. You will easily get this error
when you try to install a new package with it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;root@worker2:~#&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;setproctitle
Traceback&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;most&lt;span class="w"&gt; &lt;/span&gt;recent&lt;span class="w"&gt; &lt;/span&gt;call&lt;span class="w"&gt; &lt;/span&gt;last&lt;span class="o"&gt;)&lt;/span&gt;:
File&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/bin/pip&amp;quot;&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;line&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
from&lt;span class="w"&gt; &lt;/span&gt;pip.baseparser&lt;span class="w"&gt; &lt;/span&gt;import&lt;span class="w"&gt; &lt;/span&gt;parser
ImportError:&lt;span class="w"&gt; &lt;/span&gt;cannot&lt;span class="w"&gt; &lt;/span&gt;import&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt; &lt;/span&gt;parser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Luckly there is a very easy workaround:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;easy_install&lt;span class="w"&gt; &lt;/span&gt;pip
rm&lt;span class="w"&gt; &lt;/span&gt;/usr/bin/pip
ln&lt;span class="w"&gt; &lt;/span&gt;-sv&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin/pip-2.6&lt;span class="w"&gt; &lt;/span&gt;/usr/bin/pip
pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;--upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Reference: &lt;a href="http://blog.102web.ru/tag/virtualenvs/"&gt;http://blog.102web.ru/tag/virtualenvs/&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 02 May 2013 16:09:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-05-02:/2013/05/02/how-to-fix-pip-under-debian-6-0-squeeze-importerror-cannot-import-name-parser/</guid><category>HowTo, Linux, Programmazione, Python, Ubuntu (EN)</category></item><item><title>Using virtualenv to manage multiple Python/Django environments in the same machine</title><link>https://www.andreagrandi.it/2013/04/25/using-virtualenv-to-manage-multiple-pythondjango-environments-in-the-same-machine/</link><description>&lt;p&gt;Developing Python applications sometimes it's useful to be able to test
the code with different environments, for example a particular version
of Python or a specific Django version etc... Setting up many different
virtual machines would be really too much work and even using a chroot
environment is not what you need in some cases. Thanks to
&lt;a href="https://github.com/pypa/virtualenv"&gt;&lt;strong&gt;virtualenv&lt;/strong&gt;&lt;/a&gt; is it possible to
create a self contained Python environment with all the specific
libraries you may need. Using virtualenv is very easy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating the virtual environment: &lt;strong&gt;&lt;code&gt;virtualenvmyenv --no-site-packages&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Entering the virtual environment: &lt;strong&gt;&lt;code&gt;source myenv/bin/activate&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Deactivating the virtual environment: &lt;strong&gt;&lt;code&gt;deactivate&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's it! Once you're inside the virtual environment you will be using
the Python libraries inside it. I suggest you to install all the Python
libraries you need using &lt;a href="https://pypi.python.org/pypi/pip"&gt;&lt;strong&gt;pip&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 25 Apr 2013 22:58:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-04-25:/2013/04/25/using-virtualenv-to-manage-multiple-pythondjango-environments-in-the-same-machine/</guid><category>HowTo, Linux, Programmazione, Python, Ubuntu (EN)</category><category>Django</category><category>Python</category><category>virtualenv</category></item><item><title>UDS happening online only: pros and cons</title><link>https://www.andreagrandi.it/2013/03/05/uds-happening-online-only-pros-and-cons/</link><description>&lt;p&gt;When last week &lt;a href="http://fridge.ubuntu.com/2013/02/26/ubuntu-developer-summits-now-online-and-every-three-months/"&gt;Canonical announced&lt;/a&gt;
the usual UDS was not going to happen I was a bit shocked and
disappointed: starting from the next UDS (that is going to happen
tomorrow!) the event will be &lt;strong&gt;online only&lt;/strong&gt; and &lt;strong&gt;every 3 months&lt;/strong&gt;.
During these days I've been thinking a lot about this move and I will
tell you what are the pros and cons, in my opinion, followed by some
final thoughts.&lt;/p&gt;
&lt;h2&gt;Pros&lt;/h2&gt;
&lt;p&gt;Having 4 UDS every year, instead of 2, is surely a better thing. I'm a
big fan of Scrum methodology, so I think that &lt;strong&gt;iterating more often is
better&lt;/strong&gt; than iterating less. If there are any mistakes you can correct
them and iterating again before releasing the final product.&lt;/p&gt;
&lt;p&gt;Potentially &lt;strong&gt;more people can partecipate&lt;/strong&gt; to the event (even the
opposite is true and I will explain why). People won't need to move from
home, travel, pay any expense etc... they just need a computer and a
good Internet connection.&lt;/p&gt;
&lt;p&gt;It's &lt;strong&gt;cheaper for everyone&lt;/strong&gt;: I can just imagine how expensive could be
for Canonical to organize a similar event. Booking a big hotel, paying
travel and expenses to near one houndred of community people. People who
didn't get any sponsorization had to pay all the travel expenses to
attend the event.&lt;/p&gt;
&lt;h2&gt;Cons&lt;/h2&gt;
&lt;p&gt;Potentially &lt;strong&gt;less people can partecipate&lt;/strong&gt; to the event. Yes, like I
said before even this sentence is true and I will explain why. First of
all, using Google+ there are at least three countries that will be cut
out: &lt;strong&gt;China&lt;/strong&gt;, &lt;strong&gt;Thailand&lt;/strong&gt; and &lt;strong&gt;Vietnam&lt;/strong&gt;. Google+ is not available
in those countries.&lt;/p&gt;
&lt;p&gt;Are you sure that special people will be able to follow the event? For
example &lt;strong&gt;blind people&lt;/strong&gt; won't be able to chat or to ask question in the
chat.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Only 10 people&lt;/strong&gt; will be able to talk. In normal UDS sessions more
people could raise the hand and ask a question or interact with the
track leaders. Who will choose the 10 people with audio+video streaming
rights?&lt;/p&gt;
&lt;p&gt;We will &lt;strong&gt;completly miss the social aspect&lt;/strong&gt; of the UDS. If you think
this was only a secondary part, please go on. I felt more committed to
work and collaborate with people I met in person than with someone I've
never met before.&lt;/p&gt;
&lt;p&gt;Announcing an event, even if online, just &lt;strong&gt;one week before&lt;/strong&gt; it
happens. Really? Some people had already taken vacation from work,
booked flights etc... not counting many people that can't take 2 days
off from work just with 1 week notice period. It's also almost
impossible that community members have the time to schedule a blueprint
and be able to discuss about a subject.&lt;/p&gt;
&lt;h2&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;From a &lt;strong&gt;cutting costs&lt;/strong&gt; point of view I really can't say anything.
Organizing UDS was surely very expensive for Canonical and nobody can
blame them if they decided to spend those money in a different way.&lt;/p&gt;
&lt;p&gt;What really concerns me: is UDS still useful? My opinion is that at
least since latest 2 or 3 UDS the presence of the Community was not so
relevant, because I had &lt;strong&gt;the clear sensation that the most important
decisions were made by Canonical before the UDS&lt;/strong&gt; and then there was
just some details tuning. Another proof of my thoughts is the today
announcement: &lt;strong&gt;despite the fact that I 100% agree with Unity switching
to Qt/QML&lt;/strong&gt; (I already proposed this 2 years ago during Budapest UDS,
but nobody listened to me) &lt;strong&gt;I completly disagree with the way the
decision was made&lt;/strong&gt;: not a single involvement or discussion with the
community.&lt;/p&gt;
&lt;p&gt;I would apreaciate &lt;strong&gt;more openness and honesty&lt;/strong&gt; from Canonical. Do you
want to take all the decisions? That's fine, but at least state it
clearly.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 05 Mar 2013 01:09:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-03-05:/2013/03/05/uds-happening-online-only-pros-and-cons/</guid><category>Ubuntu (EN), UDS</category><category>Canonical</category><category>community</category><category>Linux</category><category>meeting</category><category>Ubuntu</category><category>UDS</category></item><item><title>Using Twitter Bootstrap with Node.js, Express and Jade</title><link>https://www.andreagrandi.it/2013/02/24/using-twitter-bootstrap-with-node-js-express-and-jade/</link><description>&lt;p&gt;I've decided to write this post as a note to myself. I'm still learning
Node.js and digging into Express/Jade, but I've read many people using
the nice &lt;a href="http://twitter.github.com/bootstrap/"&gt;&lt;strong&gt;Twitter Bootstrap&lt;/strong&gt;&lt;/a&gt;
and I was wondering if there was a way to integrate all these
technologies. The short answer is: yes, we can!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; once again, I'm not a Node.js expert and surely there are
other ways to achieve this task (for example there is a Node.js module
called
&lt;a href="https://npmjs.org/package/twitter-bootstrap"&gt;&lt;strong&gt;twitter-bootstrap&lt;/strong&gt;&lt;/a&gt;,
but I haven't tried it). This tutorial is based on another tutorial I
found, but it was not very updated and it had a more complicated way to
install Bootstrap, so I decided to write a new one basing it on the
original &lt;a href="http://www.rs.au.com/31/how-to-install-bootstrap-v2-0-2-in-expressjs-v3-0-0"&gt;http://www.rs.au.com/31/how-to-install-bootstrap-v2-0-2-in-expressjs-v3-0-0&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preparing the environment&lt;/h2&gt;
&lt;p&gt;I will assume that you're running any Linux distribution (in my case I'm
using Ubuntu 12.10, but feel free to use your own distribution). Be sure
to have installed a recent version of &lt;strong&gt;nodejs&lt;/strong&gt; and &lt;strong&gt;npm&lt;/strong&gt; packages
(I'm using Node.js 0.8.20 and npm 1.2.11).&lt;/p&gt;
&lt;h2&gt;Create a project folder and install the required dependencies&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;node-bootstrap
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;node-bootstrap
npm&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;express
npm&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;jade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Create the basic project structure with Express&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;andrea@andrea-Inspiron-660:~/Documents/sviluppo/nodejs/node-bootstrap$&lt;span class="w"&gt; &lt;/span&gt;node_modules/express/bin/express&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap

create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/package.json
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/app.js
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/public
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/public/javascripts
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/public/images
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/public/stylesheets
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/public/stylesheets/style.css
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/routes
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/routes/index.js
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/routes/user.js
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/views
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/views/layout.jade
create&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap/views/index.jade

install&lt;span class="w"&gt; &lt;/span&gt;dependencies:
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;nodebootstrap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;npm&lt;span class="w"&gt; &lt;/span&gt;install

run&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;app:
$&lt;span class="w"&gt; &lt;/span&gt;node&lt;span class="w"&gt; &lt;/span&gt;app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should already have installed all the needed dependencies, even
without executing &lt;strong&gt;npm install&lt;/strong&gt;, anyway executing it won't hurt.&lt;/p&gt;
&lt;h2&gt;Download and install Bootstrap&lt;/h2&gt;
&lt;p&gt;Download Twitter Boostrap from the official
website &lt;a href="http://twitter.github.com/bootstrap/assets/bootstrap.zip"&gt;http://twitter.github.com/bootstrap/assets/bootstrap.zip&lt;/a&gt; and
unzip it under the &lt;strong&gt;nodebootstrap/public&lt;/strong&gt; folder.&lt;/p&gt;
&lt;h2&gt;Bootstrap integration with Jade template system&lt;/h2&gt;
&lt;p&gt;At this point you need to edit the &lt;strong&gt;views/layout.jade&lt;/strong&gt; file and
include the references to Bootsrap&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;(&lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;stylesheet&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/bootstrap/css/bootstrap.min.css&amp;#39;&lt;/span&gt;)
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;(&lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;stylesheet&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/bootstrap/css/bootstrap-responsive.min.css&amp;#39;&lt;/span&gt;)
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt;(&lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;stylesheet&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/stylesheets/style.css&amp;#39;&lt;/span&gt;)
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;(&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&amp;#39;&lt;/span&gt;)
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;(&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/bootstrap/js/bootstrap.min.js&amp;#39;&lt;/span&gt;)
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;block&lt;/span&gt; content
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Test the Bootstrap integration&lt;/h2&gt;
&lt;p&gt;At this point we will modify &lt;strong&gt;views/index.jade&lt;/strong&gt; that is the default
template used to render the index&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;extends&lt;/span&gt; layout

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;block&lt;/span&gt; content
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.top&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="nc"&gt;.form-horizontal&lt;/span&gt;(&lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;loginForm&amp;quot;&lt;/span&gt;)
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; Username
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nc"&gt;.span3&lt;/span&gt;(&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;User&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Enter your username&amp;quot;&lt;/span&gt;)
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; Password
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nc"&gt;.span3&lt;/span&gt;(&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Password&amp;quot;&lt;/span&gt;)
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nc"&gt;.btn&lt;/span&gt;(&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Log In&amp;quot;&lt;/span&gt;)
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.container&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.content&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="nc"&gt;.table.table-striped&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;thead&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt; Table
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt; Heading
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;tbody&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; Blah
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; Test
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; Hello
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; World

&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.footer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now go back to the terminal and execute the app:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;andrea@andrea-Inspiron-660:~/Documents/sviluppo/nodejs/node-bootstrap/nodebootstrap$&lt;span class="w"&gt; &lt;/span&gt;node&lt;span class="w"&gt; &lt;/span&gt;app.js
Express&lt;span class="w"&gt; &lt;/span&gt;server&lt;span class="w"&gt; &lt;/span&gt;listening&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;port&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Open your favourite browse and visit &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to see your
first Bootstrap + Node.js application app and running.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 24 Feb 2013 21:05:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-02-24:/2013/02/24/using-twitter-bootstrap-with-node-js-express-and-jade/</guid><category>HowTo</category><category>Bootstrap</category><category>css</category><category>Express</category><category>Jade</category><category>Javascript</category><category>NodeJs</category><category>npm</category><category>twitter</category><category>Ubuntu</category></item><item><title>Fundraising for CuteSoma (Soma.fm mobile client) development</title><link>https://www.andreagrandi.it/2013/02/10/fundraising-for-cutesoma-soma-fm-mobile-client-development/</link><description>&lt;p&gt;Developing CuteSoma and maintaining it for three different platforms
(Nokia N9, Windows Phone, BlackBerry 10) is really taking me a lot of
time. I've many features in mind to add but I can't dedicate much spare
time to them and to do it I should take time from other paid projects.
I've also discarded the idea to make CuteSoma a paid app, because it's
been always free (except the Windows Phone one that was non-free for
just a month, but only 6 people "SIX" bought the app).&lt;/p&gt;
&lt;p&gt;So I decided to open a &lt;a href="http://www.indiegogo.com/projects/cutesoma-soma-fm-client/x/2353169"&gt;fundraising
campaign&lt;/a&gt;
on
&lt;a href="http://www.indiegogo.com/projects/cutesoma-soma-fm-client/x/2353169"&gt;&lt;strong&gt;Indiegogo&lt;/strong&gt;&lt;/a&gt;
that is a service like &lt;strong&gt;KickStarter&lt;/strong&gt;, but it's available all around
the world (not just in USA and UK like Kickstarter).&lt;/p&gt;
&lt;h2&gt;What do I Need &amp;amp; What You Get&lt;/h2&gt;
&lt;p&gt;I would like to raise at least &lt;strong&gt;5.000€&lt;/strong&gt; to be able to keep maintaining
the existing features and to implement new one. Developing for 3
different platforms really takes a lot of time. I also need to find a
way to get a Windows Phone 8 device because at the moment I cannot test
some features using just the emulator.&lt;/p&gt;
&lt;p&gt;What the application currently does:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can view the list of Soma.fm channels&lt;/li&gt;
&lt;li&gt;You can listen any channel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Features I would like to add:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scrobbling song to Last.fm&lt;/li&gt;
&lt;li&gt;Write a new MediaSource for Windows Phone (the default one is quite
bugged and I need to implement one from scratch)&lt;/li&gt;
&lt;li&gt;Port the BlackBerry10 version to the native CascadesUI&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The Impact&lt;/h2&gt;
&lt;p&gt;Funding the development of CuteSoma you will make thousands of people
really happy, because they will be able to listen to Soma.fm on their
Nokia N9, Windows Phone and BlackBerry 10 devices. You will also make me
feel apreciated for all the hours I'm spending to write the code :)&lt;/p&gt;
&lt;h2&gt;Completly Opensource&lt;/h2&gt;
&lt;p&gt;Yes. CuteSoma is completly &lt;strong&gt;opensource&lt;/strong&gt;. I keep my source code on
GitHub and BitBucket and it's always updated. All the CuteSoma versions
are released under the &lt;strong&gt;GPL license&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CuteSoma for Nokia N9 - source code: &lt;a href="https://github.com/andreagrandi/CuteSoma"&gt;https://github.com/andreagrandi/CuteSoma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CuteSoma for BlackBerry 10 - source code: &lt;a href="https://github.com/andreagrandi/CuteSoma/tree/bb10"&gt;https://github.com/andreagrandi/CuteSoma/tree/bb10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CuteSoma for Windows Phone - source code: &lt;a href="https://bitbucket.org/andreagrandi/cutesoma/src"&gt;https://bitbucket.org/andreagrandi/cutesoma/src&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other Ways You Can Help&lt;/h2&gt;
&lt;p&gt;If you want to contribute but you can't or you don't want to send money,
you could help me in the following ways:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1) Download&lt;/strong&gt; and use the application:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nokia N9&lt;/strong&gt;: &lt;a href="http://store.ovi.com/content/205737"&gt;http://store.ovi.com/content/205737&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows Phone&lt;/strong&gt;: &lt;a href="http://www.windowsphone.com/en-us/store/app/cutesoma/387185ca-1328-4d1c-a4c2-45568cf06470"&gt;http://www.windowsphone.com/en-us/store/app/cutesoma/387185ca-1328-4d1c-a4c2-45568cf06470&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BlackBerry 10&lt;/strong&gt;: &lt;a href="http://appworld.blackberry.com/webstore/content/20200430/"&gt;http://appworld.blackberry.com/webstore/content/20200430/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2) Tweet/Blog&lt;/strong&gt; about this fund raising
campaign: &lt;a href="http://www.indiegogo.com/projects/cutesoma-soma-fm-client/x/2353169"&gt;http://www.indiegogo.com/projects/cutesoma-soma-fm-client/x/2353169&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 10 Feb 2013 23:52:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-02-10:/2013/02/10/fundraising-for-cutesoma-soma-fm-mobile-client-development/</guid><category>BlackBerry, Maemo (EN), MeeGo, Programmazione, Windows Phone</category></item><item><title>How to install latest stable Node.js on Ubuntu</title><link>https://www.andreagrandi.it/2013/02/08/how-to-install-latest-stable-node-js-on-ubuntu/</link><description>&lt;p&gt;If you develop with &lt;a href="http://nodejs.org"&gt;&lt;strong&gt;Node.js&lt;/strong&gt;&lt;/a&gt; and you want to be
sure to have the latest stable version, luckly there is a PPA for it.
All you need is to follow these instructions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python-software-properties&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;g++&lt;span class="w"&gt; &lt;/span&gt;make
sudo&lt;span class="w"&gt; &lt;/span&gt;add-apt-repository&lt;span class="w"&gt; &lt;/span&gt;ppa:chris-lea/node.js
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update&lt;span class="w"&gt; &lt;/span&gt;
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;nodejs&lt;span class="w"&gt; &lt;/span&gt;npm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's it!&lt;/p&gt;
&lt;p&gt;Reference: &lt;a href="https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager"&gt;https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 08 Feb 2013 19:36:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-02-08:/2013/02/08/how-to-install-latest-stable-node-js-on-ubuntu/</guid><category>HowTo, Linux, Programmazione, Ubuntu (EN)</category><category>Javascript</category><category>Node</category><category>Node.js</category><category>NodeJs</category></item><item><title>The Windows Phone Emulator wasn’t able to connect to the Windows Phone operating system: how to fix it</title><link>https://www.andreagrandi.it/2013/02/03/the-windows-phone-emulator-wasnt-able-to-connect-to-the-windows-phone-operating-system-how-to-fix-it/</link><description>&lt;p&gt;This morning when I started my Windows Phone 8 emulator to test an
application, the emulator refused to work, giving me this error "&lt;strong&gt;The
Windows Phone Emulator wasn’t able to connect to the Windows Phone
operating system&lt;/strong&gt;". Luckly it's very easy to fix. It's caused by the
virtual network interface that has been disabled for some reason
(well... in my case it must depend on the other day when I tryed to
trick WP7 firmware upgrade and used the disconnect trick, but this is
another story).&lt;/p&gt;
&lt;p&gt;I searched on Google for a solution and I landed on this
page &lt;a href="http://pauliom.com/2012/12/20/the-windows-phone-emulator-wasnt-able-to-connect-to-the-windows-phone-operating-system/"&gt;http://pauliom.com/2012/12/20/the-windows-phone-emulator-wasnt-able-to-connect-to-the-windows-phone-operating-system/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All you have to do is going to "&lt;strong&gt;Network and Internet --&amp;gt; Network
Connections&lt;/strong&gt;", right click on "&lt;strong&gt;vEthernet (Internal Ethernet Port)
Windows Phone Emulator&lt;/strong&gt;" and &lt;strong&gt;Enable&lt;/strong&gt; it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2013/02/network_interface_wp8.png"&gt;&lt;img alt="network_interface_wp8" src="https://www.andreagrandi.it/images/2013/02/network_interface_wp8.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 03 Feb 2013 13:57:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-02-03:/2013/02/03/the-windows-phone-emulator-wasnt-able-to-connect-to-the-windows-phone-operating-system-how-to-fix-it/</guid><category>HowTo, Programmazione, Windows, Windows Phone</category></item><item><title>Using QtCreator to deploy and run a Qt application to a remote Linux device</title><link>https://www.andreagrandi.it/2013/01/17/using-qtcreator-to-deploy-and-run-a-qt-application-to-a-remote-linux-device/</link><description>&lt;p&gt;QtCreator is a very flexible IDE and can really be adapted for a lot of
things. I usually use it to develop mobile applications for Nokia N9 and
BlackBerry 10, but it can be used for more generic tasks. In my case I
wanted to be able to develop a Qt application using my desktop PC,
deploy it and run on a remote (actually it's on the same desk) Linux
machine running Xubuntu.&lt;/p&gt;
&lt;p&gt;Doing this is quite easy and you don't need any specific plugin on
QtCreator, but be sure to have at least version 2.6.x. Other than
QtCreator you also need two Linux based PC (I used Ubuntu 12.10 for my
development machine and Xubuntu 12.10 for the remote netbook) and an SSH
account on the remote PC.&lt;/p&gt;
&lt;h2&gt;Add the remote device to QtCreator&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2013/01/QtCreatorDevice.png"&gt;&lt;img alt="QtCreatorDevice" src="https://www.andreagrandi.it/images/2013/01/QtCreatorDevice.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To add the remote Linux device on QtCreator, use the
&lt;strong&gt;Tools-&amp;gt;Options&lt;/strong&gt; menu and click on "&lt;strong&gt;Devices&lt;/strong&gt;" item. At this
point click on "&lt;strong&gt;Add&lt;/strong&gt;" button and fill the fields using values similar
to the screenshot. In particular specify a &lt;strong&gt;name&lt;/strong&gt; for the device, the
&lt;strong&gt;IP&lt;/strong&gt; of the remote machine and a &lt;strong&gt;username&lt;/strong&gt; and &lt;strong&gt;password&lt;/strong&gt; that
must already exist (I just created the user "andrea" on the Xubuntu
machine and used the same password). I also had to set the &lt;strong&gt;timeout&lt;/strong&gt;
to 20 seconds, because I had some connection problems and the connection
kept dropping after 10 seconds trying. To verify if everything is
working fine, just click on &lt;strong&gt;Test&lt;/strong&gt; button.&lt;/p&gt;
&lt;h2&gt;Add a specific Qt version&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2013/01/QtCreatorQtVersion.png"&gt;&lt;img alt="QtCreatorQtVersion" src="https://www.andreagrandi.it/images/2013/01/QtCreatorQtVersion.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To write your application you may need a specific Qt version that is
different from the one distributed by your Linux distribution. There's
no problem, QtCreator let you add different Qt versions without any
conflict. In my case I installed the Qt5 version distributed by
&lt;strong&gt;Canonical Qt5 Edgers
Team&lt;/strong&gt;: &lt;a href="https://launchpad.net/~canonical-qt5-edgers"&gt;https://launchpad.net/~canonical-qt5-edgers&lt;/a&gt;&lt;br&gt;
Once it's installed, just click on "&lt;strong&gt;Add&lt;/strong&gt;" button and select the qmake
specific to the version you want to add (in my case it was in
&lt;strong&gt;/opt/qt5/bin/qmake&lt;/strong&gt; ).&lt;/p&gt;
&lt;h2&gt;Add a Qt Kit&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2013/01/QtCreatorQtKits.png"&gt;&lt;img alt="QtCreatorQtKits" src="https://www.andreagrandi.it/images/2013/01/QtCreatorQtKits.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;QtCreator permits to add new &lt;strong&gt;Kit&lt;/strong&gt; (development configurations) and
these kits are used during project creation to specify what you want to
target. In my example I added a new kit choosing an appropriate &lt;strong&gt;name&lt;/strong&gt;
"Qt5 Ubuntu", the &lt;strong&gt;device type&lt;/strong&gt;, the actual &lt;strong&gt;device&lt;/strong&gt; previously
configured and finally the &lt;strong&gt;Qt version&lt;/strong&gt; that we added before. With a
kit I have a complete "toolchain" that allow me to write applications
for a particular device, with a specific Qt version.&lt;/p&gt;
&lt;h2&gt;Putting the pieces together&lt;/h2&gt;
&lt;p&gt;At this point you just have to create a new "&lt;strong&gt;Qt Quick 2&lt;/strong&gt;"
application, and select the new kit you just created instead of the
"Desktop" one. &lt;strong&gt;Please note&lt;/strong&gt; that there is a little problem that I
haven't fixed yet (but I'm working on it): if you create, for example, a
project named "QtTest1" it will be deployed to the folder /opt/QtTest1/
on the remote machine. By default your user doesn't have read+write
permissions for that folder so I manualy created the folder and I gave a
chmod 777 on it, just for testing. There are two possible ways to fix
this: you could create a specific user that has read+write permissions
on /opt/ or you could modify the deployment configuration to have the
app deployed to the user /home (I will investigate on this possibility
and I will write something in one of the next posts).&lt;/p&gt;
&lt;h2&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;What all of this could be useful for? Well, do 2+2 and you'll easily
guess ;) In the next weeks I will post more specific informations and I
will update everyone with my progresses. Any comment is welcome! If you
want to contribute to this you're welcome too of course.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 17 Jan 2013 18:49:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-01-17:/2013/01/17/using-qtcreator-to-deploy-and-run-a-qt-application-to-a-remote-linux-device/</guid><category>HowTo</category><category>deploy</category><category>Linux</category><category>Qt</category><category>QtCreator</category><category>SDK</category><category>Ubuntu</category></item><item><title>Spotify 0.8.8 for Linux crashes if it cannot connect to Internet: how to fix it</title><link>https://www.andreagrandi.it/2013/01/06/spotify-0-8-8-for-linux-crashes-if-it-cannot-connect-to-internet-how-to-fix-it/</link><description>&lt;p&gt;If you upgrade Spotify for Linux to 0.8.8.x version and you have some
network connection problems (for example you're behind a company
firewall and need to set a proxy...) the application will crash/hang
without letting you doing anything (neither setting Proxy informations)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2013/01/Screenshot-from-2013-01-06-185615.png"&gt;&lt;img alt="Screenshot from 2013-01-0618:56:15" src="https://www.andreagrandi.it/images/2013/01/Screenshot-from-2013-01-06-185615-300x187.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is caused by a deadlock in the GUI and you can view the complete
debugging informations here &lt;a href="http://pastebin.com/zcKgXEqz"&gt;http://pastebin.com/zcKgXEqz&lt;/a&gt;&lt;br&gt;
To fix this, you just need to open this file
&lt;strong&gt;&lt;code&gt;~/.config/spotify/prefs&lt;/code&gt;&lt;/strong&gt; and add these two lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;network.proxy.addr=&amp;quot;123.123.123.123:1234@https&amp;quot;  
network.proxy.mode=2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;of course substituting &lt;strong&gt;&lt;code&gt;123.123.123.123:1234&lt;/code&gt;&lt;/strong&gt; with your &lt;em&gt;proxyip:proxyport&lt;/em&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 06 Jan 2013 20:57:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-01-06:/2013/01/06/spotify-0-8-8-for-linux-crashes-if-it-cannot-connect-to-internet-how-to-fix-it/</guid><category>HowTo, Linux, Ubuntu (EN)</category></item><item><title>Using Cloud9 IDE to develop Django applications</title><link>https://www.andreagrandi.it/2013/01/05/using-cloud9-ide-to-develop-django-applications/</link><description>&lt;p&gt;&lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; is becoming very popular for
dynamic websites development (actually it already is) so I decided to
start learning it, with the help of a &lt;a href="http://www.apress.com/9781430219361"&gt;good
book&lt;/a&gt;. To develop Django web
applications you need a good IDE and an environment that support at
least Python and a database (SQL Lite, MySQL etc...). If you have
multiple machines and you alternate from multiple operating systems, the
best thing is using an environment that you can use everywhere, from
your favourite browser.&lt;/p&gt;
&lt;p&gt;Here comes &lt;a href="https://c9.io"&gt;&lt;strong&gt;Cloud9&lt;/strong&gt;&lt;/a&gt;, a very nice service that you
could define as the "Google Docs" for developers. C9 offers you a
shared, always available on the cloud, environment to write your code.
They also offer access to a Linux terminal (so you can install
applications, like Django) and your websites are istantly available
online for remote testing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2013/01/c9ide_django.png"&gt;&lt;img alt="c9ide_django" src="https://www.andreagrandi.it/images/2013/01/c9ide_django.png" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Installing and using Django on C9 is very easy. You just need to open a
new terminal tab (ALT+T) in C9 and execute these commands&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;easy_install&lt;span class="w"&gt; &lt;/span&gt;django&lt;span class="w"&gt;  &lt;/span&gt;
python&lt;span class="w"&gt; &lt;/span&gt;./../bin/django-admin.py&lt;span class="w"&gt; &lt;/span&gt;startproject&lt;span class="w"&gt; &lt;/span&gt;myproject&lt;span class="w"&gt;  &lt;/span&gt;
python&lt;span class="w"&gt; &lt;/span&gt;./myproject/manage.py&lt;span class="w"&gt; &lt;/span&gt;runserver&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$OPENSHIFT_INTERNAL_IP&lt;/span&gt;:&lt;span class="nv"&gt;$PORT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After these commands, your Django website will be live and accessible
using &lt;strong&gt;http://projectname.username.c9.io&lt;/strong&gt; (where &lt;em&gt;projectname&lt;/em&gt; is the
name of the project you just created and &lt;em&gt;username&lt;/em&gt; is your C9 user
name).&lt;/p&gt;
&lt;p&gt;source: &lt;a href="http://support.cloud9ide.com/entries/21830983-django-development-in-c9"&gt;http://support.cloud9ide.com/entries/21830983-django-development-in-c9&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 05 Jan 2013 15:20:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-01-05:/2013/01/05/using-cloud9-ide-to-develop-django-applications/</guid><category>HowTo, Programmazione, Python, Ubuntu (EN)</category></item><item><title>CuteSoma (Soma.fm client) ported to BlackBerry10</title><link>https://www.andreagrandi.it/2013/01/03/cutesoma-soma-fm-client-ported-to-blackberry10/</link><description>&lt;p&gt;During these Christmas holidays I've ported the N9 version of
&lt;strong&gt;CuteSoma&lt;/strong&gt; to &lt;strong&gt;BlackBerry10&lt;/strong&gt; platform, thanks to the BB10 Alpha
device that RIM gave to me and thanks in particular to my friend
&lt;a href="https://twitter.com/corneliushald"&gt;&lt;strong&gt;Cornelius Hald&lt;/strong&gt;&lt;/a&gt; that helped me
with porting.&lt;/p&gt;
&lt;p&gt;The porting itself was quite easy after all: if you have a Qt
application that uses &lt;strong&gt;MeeGo&lt;/strong&gt; Qt components, you have to switch to
&lt;strong&gt;Symbian&lt;/strong&gt; components (they're more portable and support higher
resolutions) and to do it I suggest you follow the informations on this
blog
post &lt;a href="http://www.johanpaul.com/blog/2011/12/porting-meego-qt-components-apps-to-symbian/"&gt;http://www.johanpaul.com/blog/2011/12/porting-meego-qt-components-apps-to-symbian/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you need more detailed informations about Symbian Qt Components, you
can also read this nice blog post from Cornelius
Hald &lt;a href="http://kodira.de/2012/12/qt-components-on-blackberry-10/"&gt;http://kodira.de/2012/12/qt-components-on-blackberry-10/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;How does it look&lt;/h2&gt;
&lt;p&gt;So, what's the result of my porting? Well, first of all a couple of
screenshots&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2013/01/IMG_00000004.png"&gt;&lt;img alt="IMG_00000004" height="300" src="https://www.andreagrandi.it/images/2013/01/IMG_00000004-180x300.png" width="180"&gt;&lt;/a&gt; 
 
&lt;a href="https://www.andreagrandi.it/images/2013/01/IMG_00000005.png"&gt;&lt;img alt="IMG_00000005" height="300" src="https://www.andreagrandi.it/images/2013/01/IMG_00000005-180x300.png" width="180"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Source Code&lt;/h2&gt;
&lt;p&gt;And finally the source
code: &lt;a href="https://github.com/andreagrandi/CuteSoma/tree/bb10"&gt;https://github.com/andreagrandi/CuteSoma/tree/bb10&lt;br&gt;
&lt;/a&gt;The application
will be published soon in the BlackBerry App World and you will have it
available in time for the BlackBerry 10 launch!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 03 Jan 2013 02:13:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2013-01-03:/2013/01/03/cutesoma-soma-fm-client-ported-to-blackberry10/</guid><category>BlackBerry, Programmazione, Qt</category></item><item><title>CuteSoma (Soma.fm client) for Windows Phone available</title><link>https://www.andreagrandi.it/2012/12/14/cutesoma-soma-fm-client-for-windows-phone-available/</link><description>&lt;p&gt;It's a pleasure for me to announce the first public release of
&lt;a href="http://www.windowsphone.com/s?appid=387185ca-1328-4d1c-a4c2-45568cf06470"&gt;&lt;strong&gt;CuteSoma&lt;/strong&gt;&lt;/a&gt;
for &lt;strong&gt;Windows Phone&lt;/strong&gt; (WP7 and WP8). CuteSoma is a mobile client for the
amazing &lt;a href="http://somafm.com"&gt;&lt;strong&gt;Soma.fm&lt;/strong&gt;&lt;/a&gt; radio a listener-supported,
commercial-free, underground, alternative radio broadcasting over 20
unique channels from San Francisco. This is my first application for WP
platform, and unlike the N9 version that was completly free of charge,
I've decided to release this version in two ways: a free trial version
with just 3 (and other 3 coming with the next imminent upgrade) radio
channels available and a full version with all Soma.fm channels for just
0.99 €. I don't think it's too expensive, right? Consider all the time
I've spent coding it and if you like the trial version, please support
the development of this application and purchase the full one.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2012/12/CuteSomaWP_main_WXGA-614x1024.png"&gt;&lt;img alt="CuteSomaWP" src="https://www.andreagrandi.it/images/2012/12/CuteSomaWP_main_WXGA-614x1024.png" width="30%"&gt;&lt;/a&gt;
&lt;a href="https://www.andreagrandi.it/images/2012/12/CuteSomaWP_main_WXGA.png"&gt;&lt;img alt="CuteSomaWP" src="https://www.andreagrandi.it/images/2012/12/CuteSomaWP_playing_WXGA-614x1024.png" width="30%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Install CuteSoma&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Press &lt;strong&gt;Search&lt;/strong&gt; button on your Nokia Lumia (or any other Windows
Phone) and tap &lt;strong&gt;vision&lt;/strong&gt; button&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scan the following QrCode&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2012/12/CuteSomaWP_QrCode.png"&gt;&lt;img alt="CuteSomaWP_QrCode" src="https://www.andreagrandi.it/images/2012/12/CuteSomaWP_QrCode-300x300.png" width="30%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3. Tap on the link when it appears on the screen
4. Install the application from the Windows Phone Store
5. Enjoy!&lt;/p&gt;
&lt;p&gt;Please consider also &lt;a href="http://somafm.com/support/"&gt;&lt;strong&gt;donating&lt;/strong&gt;&lt;/a&gt;to
Soma.fm if you like their music: Soma.fm is donation supported and they
need your "love" to pay their bills :)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 14 Dec 2012 14:47:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-12-14:/2012/12/14/cutesoma-soma-fm-client-for-windows-phone-available/</guid><category>Windows Phone</category></item><item><title>Leaving Finland (and Nokia), coming back to Italy!</title><link>https://www.andreagrandi.it/2012/09/13/leaving-finland-and-nokia-coming-back-to-italy/</link><description>&lt;p&gt;&lt;img alt="Tampere" src="https://www.andreagrandi.it/images/2012/09/Tampere2.jpg" title="Tampere2"&gt;&lt;/p&gt;
&lt;p&gt;After a very pleasant experience in &lt;strong&gt;Finland (Tampere)&lt;/strong&gt;, I've finally
come back to Italy. I had the opportunity to work for three months in
&lt;strong&gt;Nokia&lt;/strong&gt; as "&lt;em&gt;Qt Expert&lt;/em&gt;" in "&lt;em&gt;Nokia Developer Forum&lt;/em&gt;" and it's been an
amazing job!&lt;/p&gt;
&lt;p&gt;To be more precise I left Finland on August 31th, but I didn't have much
time to blog about this. Finally I can use my desktop PC again and I'm
not anymore limited to my small netbook. Trust me... spending 3 months
with a 11'' netbook and pretending to work normally is really
frustrating.&lt;/p&gt;
&lt;p&gt;Now I have more spare time (too much :\ ) to contribute to Ubuntu and
to play with some new technologies: I'm working on a project that uses
&lt;strong&gt;Arduino&lt;/strong&gt;, &lt;strong&gt;Android&lt;/strong&gt; and some "robotic" parts, with people of
&lt;a href="http://www.ptlug.org"&gt;&lt;strong&gt;Pistoia Linux User Group&lt;/strong&gt;&lt;/a&gt; and it's really an
amazing learning experience!&lt;/p&gt;
&lt;p&gt;Talking about Ubuntu, if you have never contributed to it and you would
like to start with something easy, I suggest you this interesting
initiative &lt;a href="https://wiki.ubuntu.com/UbuntuDevelopment/BugFixingInitiative"&gt;https://wiki.ubuntu.com/UbuntuDevelopment/BugFixingInitiative&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the mean time I'm also looking for new opportunities and challenges
(aka = looking for a new job), so if you think you may be interested in
me, take a couple of minutes to give a look to my LinkedIn
profile &lt;a href="http://www.linkedin.com/in/andreagrandi"&gt;http://www.linkedin.com/in/andreagrandi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I will attend next &lt;strong&gt;UDS&lt;/strong&gt; in &lt;strong&gt;Copenaghen&lt;/strong&gt; (99% sure) and I already
have a couple of topics I would like to work with, but I will talk about
these later, first I want to properly create a blueprint in Launchpad so
we will have a starting point.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 13 Sep 2012 16:46:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-09-13:/2012/09/13/leaving-finland-and-nokia-coming-back-to-italy/</guid><category>Maemo (EN), Ubuntu (EN)</category></item><item><title>Ubuntu Release Sprint: calling for feedback!</title><link>https://www.andreagrandi.it/2012/08/17/ubuntu-release-sprint-calling-for-feedback/</link><description>&lt;p&gt;During the last UDS party, I had an idea to improve Ubuntu development,
but I didn't know if it could be a good idea or a stupid one, so I
talked to &lt;strong&gt;Daniel Holbach&lt;/strong&gt; and &lt;strong&gt;David Planella&lt;/strong&gt; about it and they
were happy to hear about it and Daniel told me to talk about
this directly to &lt;strong&gt;Mark&lt;/strong&gt; (and I did it).&lt;/p&gt;
&lt;p&gt;Let's explain the basic idea.&lt;/p&gt;
&lt;p&gt;From an UDS and the next one, it would be useful to have a
development sprint where people can talk about assigned UDS blueprints,
at which point they are on their tasks, if they have any problems and if
they will finish them within the next UDS.&lt;/p&gt;
&lt;p&gt;Of course Canonical cannot organize another meeting, it would be
very expensive, so the idea is: why don't we use &lt;strong&gt;Google Hangout&lt;/strong&gt; to
organize the sprint? I has a limit of 10 people, I know, but we could
select (for example) 5 from the community and 5 from Canonical. There
would be parallel meeting and tracks, we would use the same blueprints
used during the last UDS and we would add further notes. The
attendees would be able to listen and watch the stream and make
questions through the available chat.&lt;/p&gt;
&lt;p&gt;I've also created a &lt;strong&gt;wiki&lt;/strong&gt; page with more informations and you can
find it here: &lt;a href="https://wiki.ubuntu.com/UbuntuReleaseSprint"&gt;https://wiki.ubuntu.com/UbuntuReleaseSprint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What do you think about? I know that Canonical is already
organizing sprints and this could be a way to involve more the Ubuntu
Community. Maybe we should schedule a session &lt;strong&gt;at next UDS&lt;/strong&gt; to talk
about this?&lt;/p&gt;
&lt;p&gt;I hope to get some &lt;strong&gt;feedback&lt;/strong&gt; from you.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 17 Aug 2012 12:28:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-08-17:/2012/08/17/ubuntu-release-sprint-calling-for-feedback/</guid><category>Ubuntu (EN)</category><category>development</category><category>meeting</category><category>sprint</category><category>Ubuntu</category><category>UDS</category></item><item><title>Social Connect QML plugin: access Facebook, Twitter from your Qt/QML applications</title><link>https://www.andreagrandi.it/2012/08/13/social-connect-qml-plugin-access-facebook-twitter-from-your-qtqml-applications/</link><description>&lt;p&gt;&lt;a href="https://projects.developer.nokia.com/socialconnect"&gt;&lt;strong&gt;Social Connect&lt;/strong&gt;&lt;/a&gt;
is a library written in &lt;strong&gt;Qt&lt;/strong&gt; that allows applications to easily
connect to services like &lt;strong&gt;Facebook&lt;/strong&gt; and &lt;strong&gt;Twitter&lt;/strong&gt;. Recently I had
the opportunity to work on this library improving it and adding support
for &lt;strong&gt;Instagram&lt;/strong&gt; (work is still in progress but it's almost finished).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2012/08/SocialConnect.png"&gt;&lt;img alt="social connect" src="https://www.andreagrandi.it/images/2012/08/SocialConnect.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;main features&lt;/strong&gt; of this library are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Out-of-the-box support for Facebook and Twitter&lt;/li&gt;
&lt;li&gt;Integrated authentication implementation&lt;/li&gt;
&lt;li&gt;Simplified common interface for all supported services&lt;/li&gt;
&lt;li&gt;Provides interfaces for native API calls&lt;/li&gt;
&lt;li&gt;Design enabling easy addition of new services e.g. LinkedIn&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are writing an application that needs to access these services,
this could be the library for you. It can be extended to support even
other services like LinkedIn, Flickr etc... and I would like to invite
people to contribute to the code. The library has been tested with &lt;strong&gt;Qt
4.8.1&lt;/strong&gt; on &lt;strong&gt;Ubuntu Linux 12.04&lt;/strong&gt; but it should be compatible with any
other versions/platforms.&lt;/p&gt;
&lt;p&gt;For more informations about getting started with the library, I suggest
you to give a look at this
page &lt;a href="https://projects.developer.nokia.com/socialconnect/wiki/GettingStarted"&gt;https://projects.developer.nokia.com/socialconnect/wiki/GettingStarted&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Mon, 13 Aug 2012 09:04:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-08-13:/2012/08/13/social-connect-qml-plugin-access-facebook-twitter-from-your-qtqml-applications/</guid><category>Maemo (EN), MeeGo, Programmazione, Qt, Ubuntu (EN)</category><category>library</category><category>Mobile</category><category>nokia</category><category>QML</category><category>Qt</category><category>Social</category></item><item><title>Ubuntu Release Sprint: a proposal to improve Ubuntu development</title><link>https://www.andreagrandi.it/2012/05/12/ubuntu-release-sprint-a-proposal-to-improve-ubuntu-development/</link><description>&lt;p&gt;Yesterday, during the final UDS party, I had an idea to improve Ubuntu
development, but I didn't know if it could be a good idea or a stupid
one, so I talked to &lt;strong&gt;Daniel Holbach&lt;/strong&gt; and &lt;strong&gt;David Planella&lt;/strong&gt; about it
and they were happy to hear about it and Daniel told me to talk about
this directly to Mark (and I did it).&lt;/p&gt;
&lt;p&gt;Let's explain the basic idea. From an UDS and the next one, it would be
useful to have a development sprint where people can talk about assigned
UDS blueprints, at which point they are on their tasks, if they have any
problems and if they will finish them within the next UDS. Of course
Canonical cannot organize another meeting, it would be very expensive,
so the idea is: why don't we use Google Hangout to organize the sprint?
I has a limit of 10 people, I know, but we could select (for example) 5
from the community and 5 from Canonical. There would be parallel meeting
and tracks, we would use the same blueprints used during the last UDS
and we would add further notes. The attendees would be able to listen
and watch the stream and make questions through the available chat.&lt;/p&gt;
&lt;p&gt;I don't want to write more details here because I don't think it's the
right place (and probably it's not the moment to write a similar blog
post, since I'm still in th SFO Airport), my idea is to create a wiki
page to explain all the details, so everyone would be able to add more
ideas and see if it's doable or not.&lt;/p&gt;
&lt;p&gt;So, what do you think about? I think we should try, it doesn't cost
anything except some hours in the week we'll organize it. I wait for
your comments then.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 12 May 2012 22:47:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-05-12:/2012/05/12/ubuntu-release-sprint-a-proposal-to-improve-ubuntu-development/</guid><category>Ubuntu (EN)</category></item><item><title>Ubuntu 12.04, Nvidia 8800 GS and Nouveau drivers</title><link>https://www.andreagrandi.it/2012/04/27/ubuntu-12-04-nvidia-8800-gs-and-nouveau-drivers/</link><description>&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2012/04/logo_nvidia_linux.jpg"&gt;&lt;img alt="logo nvidia linux" src="https://www.andreagrandi.it/images/2012/04/logo_nvidia_linux.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After upgrading my desktop PC to &lt;strong&gt;Ubuntu 12.04&lt;/strong&gt; (actually my main
machine) I started experimenting many &lt;strong&gt;Xorg crashes&lt;/strong&gt; and instability
issues. I &lt;a href="https://bugs.launchpad.net/ubuntu/+source/nvidia-graphics-drivers/+bug/986445"&gt;reported the
bug&lt;/a&gt;,
but I had to find a solution or I should have rolled back to Ubuntu
11.10. The problem (from my point of view) is of the new &lt;strong&gt;Nvidia
295.40&lt;/strong&gt; binary drivers. I also tried an older version (295.33)
experiencing the same problems. I then decided to give the
&lt;strong&gt;&lt;a href="http://nouveau.freedesktop.org"&gt;Nouveau&lt;/a&gt;&lt;/strong&gt; opensource drivers a try.&lt;/p&gt;
&lt;p&gt;I must say that in over 24 hours I didn't have a single Xorg crash. My
desktop is very stable and Nouveau drivers are pretty fast: I can watch
a 1080p video on Youtube in full screen without having any problem. The
only problem with my machine is that I'm using a VGA Switcher to share
my monitor wit Xbox (see &lt;a href="https://www.andreagrandi.it/2012/02/26/sharing-your-pc-monitor-with-your-xbox-using-a-vga-switcher/"&gt;this old
post&lt;/a&gt;),
so my monitor capabilities cannot be detected automatically and I had to
do some manually tuning of the Xorg configuration.&lt;/p&gt;
&lt;p&gt;First of all I had to resolve a very annoying problem: the screen was
blinking every 10 seconds and this really hurted my eyes. To fix this I
had to add a kernel parameter: &lt;strong&gt;drm_kms_helper.poll=0&lt;br&gt;
&lt;/strong&gt;you need to add this string in &lt;strong&gt;&lt;code&gt;/etc/default/grub&lt;/code&gt;&lt;/strong&gt; to
the &lt;strong&gt;&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/code&gt;&lt;/strong&gt; parameter. After this your line
should look like this one: &lt;strong&gt;&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT="quiet splash drm_kms_helper.poll=0"&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Don't forget to execute: &lt;strong&gt;&lt;code&gt;sudo update-grub&lt;/code&gt;&lt;/strong&gt; from the command line.&lt;/p&gt;
&lt;p&gt;Then I had to create a proper &lt;strong&gt;xorg.conf&lt;/strong&gt; setting my resolution
(1680x1050) manually:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Section&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Monitor&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Identifier&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DVI-I-1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
VendorName&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Asus&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
ModelName&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ancor Communications Inc VW222&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Modeline&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1680x1050R&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;119&lt;/span&gt;.00&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1680&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1728&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1760&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1840&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1050&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1053&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1059&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1080&lt;/span&gt;
+hsync&lt;span class="w"&gt; &lt;/span&gt;-vsync&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PreferredMode&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1680x1050R&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
EndSection

Section&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Screen&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Identifier&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Screen0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Monitor&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DVI-I-1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
EndSection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;How do you generate the &lt;strong&gt;Modeline&lt;/strong&gt; line? It's very simple. Just
execute: "&lt;strong&gt;cvt -r 1680 1050&lt;/strong&gt;" in the command line and you'll get a
line similar to the one I added (of course substitute those numbers with
the resolution you want).&lt;/p&gt;
&lt;p&gt;You have to save this file in &lt;strong&gt;/etc/X11/xorg.conf&lt;/strong&gt; and reboot your
system to use all the new settings. Now my system runs nicely and very
fast! I'm really enjoying the new &lt;strong&gt;Ubuntu 12.04 Precise Pangolin&lt;/strong&gt;. I
just hope that Nvidia guys will fix the sta&lt;br&gt;
bility issues of their driver as soon as possible, so I'll be able to
choose again between the opensource driver and the closed source one
(faster with 3D stuff, but more unstable as you can see).&lt;/p&gt;
&lt;p&gt;A big &lt;strong&gt;thanks&lt;/strong&gt; to everyone in &lt;strong&gt;#nouveau&lt;/strong&gt; &lt;strong&gt;IRC&lt;/strong&gt; channel on
&lt;strong&gt;Freenode&lt;/strong&gt;. They were very kind to help me configuring their
opensource driver.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 27 Apr 2012 20:18:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-04-27:/2012/04/27/ubuntu-12-04-nvidia-8800-gs-and-nouveau-drivers/</guid><category>HowTo, Ubuntu (EN)</category><category>drivers</category><category>graphic</category><category>Nouveau</category><category>nvidia</category><category>Pangolin</category><category>Ubuntu</category></item><item><title>Using QML qt-components with QtQNX for BlackBerry PlayBook</title><link>https://www.andreagrandi.it/2012/03/30/using-qml-qt-components-with-qtqnx-for-blackberry-playbook/</link><description>&lt;p&gt;With BlackBerry PlayBook you can now use Qt libraries to develop your
applications. The problem is that QML components are not available yet
(they will be available with CascadesUI in the near future), but you can
use Symbian qt-components to develop your application UI. This should
also make the porting of an existing Symbian Qt application easier.&lt;/p&gt;
&lt;p&gt;We suppose you have already built and installed &lt;strong&gt;QtQNX&lt;/strong&gt; under this
directory: &lt;strong&gt;&lt;code&gt;~/QtQNX/ARM/&lt;/code&gt;&lt;/strong&gt; (please change it matching the folder where
you installed it).&lt;br&gt;
At this point you have to get qt-components sources using this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git://gitorious.org/qt-components/qt-components.git
qt-components
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now enter the directory you just checked and compile the components:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;qt-components&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="nv"&gt;QTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="se"&gt;\~&lt;/span&gt;/QtQNX/ARM/&lt;span class="w"&gt;  &lt;/span&gt;
./configure&lt;span class="w"&gt; &lt;/span&gt;-symbian&lt;span class="w"&gt;  &lt;/span&gt;
make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Whend you complete all the previous operations, you'll have two
directories inside &lt;strong&gt;qt-components/imports&lt;/strong&gt;, please copy them inside
the QtQNX installation directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp&lt;span class="w"&gt; &lt;/span&gt;-R&lt;span class="w"&gt; &lt;/span&gt;imports/Qt&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\~&lt;/span&gt;/QtQNX/ARM/imports/&lt;span class="w"&gt;  &lt;/span&gt;
cp&lt;span class="w"&gt; &lt;/span&gt;-R&lt;span class="w"&gt; &lt;/span&gt;imports/com&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\~&lt;/span&gt;/QtQNX/ARM/imports/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's all for now. In the next posts I'll show you how to use these
components, providing a small code example. In the mean time you can
find more informations
here &lt;a href="http://supportforums.blackberry.com/t5/Native-SDK-for-BlackBerry-Tablet/QML-symbian-qt-components-for-PlayBook/td-p/1574275"&gt;http://supportforums.blackberry.com/t5/Native-SDK-for-BlackBerry-Tablet/QML-symbian-qt-components-for-PlayBook/td-p/1574275&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 30 Mar 2012 01:40:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-03-30:/2012/03/30/using-qml-qt-components-with-qtqnx-for-blackberry-playbook/</guid><category>HowTo, Programmazione, Qt</category></item><item><title>Ubuntu Global Jam Italy (Pistoia): a quick review</title><link>https://www.andreagrandi.it/2012/03/04/ubuntu-global-jam-italy-pistoia-a-quick-review/</link><description>&lt;p&gt;Yesterday in &lt;strong&gt;Pistoia&lt;/strong&gt; (Italy) we had the &lt;strong&gt;&lt;a href="https://wiki.ubuntu.com/UbuntuGlobalJam"&gt;Ubuntu Global
Jam&lt;/a&gt;&lt;/strong&gt; and about &lt;strong&gt;15 people&lt;/strong&gt;
attended the event. We began with an introductive talk by &lt;strong&gt;Paolo
Sammicheli&lt;/strong&gt; about the Italian Ubuntu Community and how it is possible
to contribute to Ubuntu. We divided in two small groups, one translating
from English to Italian (coordinated on IRC by the people of the
community) and another group leaded by &lt;strong&gt;Marco Trevisan&lt;/strong&gt;, learning how
to implement automatic tests in Unity code (in particular he introduced
us &lt;strong&gt;Autopilot&lt;/strong&gt;, more information
here: &lt;a href="https://wiki.ubuntu.com/Unity/QA/Autopilot"&gt;https://wiki.ubuntu.com/Unity/QA/Autopilot&lt;/a&gt; ). Next time I would
like to ask people to register to Launchpad and sign the Code of Conduct
&lt;strong&gt;before&lt;/strong&gt; attending the global jam. We wasted a lot of time with this
task.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2012/03/UGJ-Pistoia-2012.jpg"&gt;&lt;img alt="ugj pistoia" src="https://www.andreagrandi.it/images/2012/03/UGJ-Pistoia-2012.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At the end of the day me and the other people from Pistoia, took the
other people for a quick tour around the city where we had the
possibility to eat some tasty food. It was a very amazing day and people
who started collaborating for the first time were very happy! I think
this has been a successful day, at least for us. I hope the other LoCo
are having a good Jam as well and I really can't wait for the next
Ubuntu Global Jam.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 04 Mar 2012 14:24:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-03-04:/2012/03/04/ubuntu-global-jam-italy-pistoia-a-quick-review/</guid><category>Linux, Ubuntu (EN)</category><category>LoCo</category><category>pistoia</category><category>Ubuntu</category><category>UGJ</category></item><item><title>Sharing your PC monitor with your Xbox using a VGA Switcher</title><link>https://www.andreagrandi.it/2012/02/26/sharing-your-pc-monitor-with-your-xbox-using-a-vga-switcher/</link><description>&lt;p&gt;Few days ago I decided to move my &lt;strong&gt;Xbox 360&lt;/strong&gt; from the room where is
the TV to the room where I have my desktop PC. I wanted to avoid wasting
precious space on my desk, so I decided to share my 22'' monitor with
the Xbox and I bought a &lt;a href="http://www.mayflash.com/?Products/XBOXXBOX360/VGA002.html"&gt;VGA
Switcher&lt;/a&gt;.
With this product you can easily switch the VGA signal between your PC
and the Xbox and also the audio signal.&lt;/p&gt;
&lt;p&gt;The problem with this solution is the fact that your monitor is not
anymore attached directly to your graphic card and this causes problems
detecting the monitor capabilities. Please note that the switcher
doesn't reduce the resolution you can have, it just make the graphic
card impossible to detect the correct resolution.&lt;/p&gt;
&lt;p&gt;If you have an &lt;strong&gt;Nvidia&lt;/strong&gt; graphic card you can use the
&lt;strong&gt;nvidia-settings&lt;/strong&gt; tool to manually set the configuration and to save
it to a file, so during the next boot even if Ubuntu won't be able to
detect the proper resolution for your monitor, it will simply apply the
configuration found in &lt;strong&gt;xorg.conf&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2012/02/nvidia-settings.png"&gt;&lt;img alt="nvidia settings" src="https://www.andreagrandi.it/images/2012/02/nvidia-settings.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please remember to also set the refresh rate of the monitor (I was
having a very bad resolution until I didn't choose 60 Hz in the settings
window). If you don't have a Nvidia graphic card (and the proper tool)
to generate a xorg.conf file or if you just want to give a look at my
configuration here you have a copy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# nvidia-settings: X configuration file generated by nvidia-settings  &lt;/span&gt;
&lt;span class="c1"&gt;# nvidia-settings: version 280.13 (buildd@rothera) Thu Aug 11 17:28:49&lt;/span&gt;
UTC&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2011&lt;/span&gt;

Section&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ServerLayout&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Identifier&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Layout0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Screen&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Screen0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
InputDevice&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Keyboard0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CoreKeyboard&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
InputDevice&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mouse0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CorePointer&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Xinerama&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
EndSection

Section&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Files&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
EndSection

Section&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;InputDevice&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="c1"&gt;# generated from default  &lt;/span&gt;
Identifier&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mouse0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Driver&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mouse&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Protocol&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;auto&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Device&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/dev/psaux&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Emulate3Buttons&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;no&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ZAxisMapping&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4 5&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
EndSection

Section&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;InputDevice&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="c1"&gt;# generated from default  &lt;/span&gt;
Identifier&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Keyboard0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Driver&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;kbd&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
EndSection

Section&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Monitor&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="c1"&gt;# HorizSync source: edid, VertRefresh source: edid  &lt;/span&gt;
Identifier&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Monitor0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
VendorName&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Unknown&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
ModelName&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ancor Communications Inc VW222&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
HorizSync&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;81&lt;/span&gt;.0&lt;span class="w"&gt;  &lt;/span&gt;
VertRefresh&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;56&lt;/span&gt;.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;75&lt;/span&gt;.0&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DPMS&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
EndSection

Section&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Device&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Identifier&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Device0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Driver&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nvidia&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
VendorName&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NVIDIA Corporation&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
BoardName&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GeForce 8800 GS&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
EndSection

Section&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Screen&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Identifier&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Screen0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Device&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Device0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Monitor&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Monitor0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
DefaultDepth&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TwinView&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TwinViewXineramaInfoOrder&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CRT-0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Option&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;metamodes&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1680x1050\_60 +0+0; nvidia-auto-select +0+0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
SubSection&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Display&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Depth&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
EndSubSection&lt;span class="w"&gt;  &lt;/span&gt;
EndSection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Remember to save the file in &lt;strong&gt;&lt;code&gt;/etc/X11/xorg.conf&lt;/code&gt;&lt;/strong&gt; and on next boot you
will have the right resolution even with your VGA Switcher in use.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 26 Feb 2012 14:41:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-02-26:/2012/02/26/sharing-your-pc-monitor-with-your-xbox-using-a-vga-switcher/</guid><category>HowTo, Linux, Ubuntu (EN)</category></item><item><title>Ubuntu: synchronizing settings among multiple computers using Ubuntu One</title><link>https://www.andreagrandi.it/2012/02/21/ubuntu-syncronizing-settings-among-multiple-pc-using-ubuntu-one/</link><description>&lt;p&gt;Using more than one computer, often it would be useful to have a way to
synchronize settings among multiple computers. For example you change
the desktop wallpaper on your office PC and you want to find the same
wallpaper when you go back home on your personal PC or on your laptop.
Language settings, online accounts, privacy settings ecc... are only few
examples of settings you could want to have synchronized.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://one.ubuntu.com/"&gt;Ubuntu One&lt;/a&gt;&lt;/strong&gt; already gives you &lt;strong&gt;5 Gb&lt;/strong&gt;
space for &lt;strong&gt;free&lt;/strong&gt; and it's available for everyone activating it. It's a
perfect place for storing a shared folder with all those settings. Of
course not a simple folder, a special one. Applications use settings
taken from usual \~/.appName and a daemon takes care of synchronizing
data once you're connected to Internet. Just like Ubuntu One does with
your documents.&lt;/p&gt;
&lt;p&gt;How do I choose which settings to synchronize? First of all you have to
&lt;strong&gt;activate an Ubuntu One account&lt;/strong&gt;, if you don't have already done it,
then you just have to choose the settings you want using this tool
available in &lt;strong&gt;Ubuntu System Settings&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2012/02/UbuntuSettingsSync_mockup.png"&gt;&lt;img alt="ubuntu settings sync" src="https://www.andreagrandi.it/images/2012/02/UbuntuSettingsSync_mockup.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What? A mockup?! Isn't this tool available yet??!! Exactly :) This tool
is not available &lt;strong&gt;yet&lt;/strong&gt;, but I think &lt;strong&gt;it would be an interesting
feature to talk about&lt;/strong&gt; for the next (not precise, I mean 12.10) Ubuntu
release. What do you think about?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 21 Feb 2012 17:58:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-02-21:/2012/02/21/ubuntu-syncronizing-settings-among-multiple-pc-using-ubuntu-one/</guid><category>Linux, Ubuntu (EN)</category></item><item><title>Ubuntu Global Jam - March 3rd 2012: Pistoia (Tuscany), Italy.</title><link>https://www.andreagrandi.it/2012/02/19/ubuntu-global-jam-march-3rd-2012-pistoia-tuscany-italy/</link><description>&lt;p&gt;&lt;a href=""&gt;&lt;img alt="piazza duomo" src="https://www.andreagrandi.it/images/2012/02/piazzaduomorid1.jpg" title="piazzaduomorid1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Even this time &lt;strong&gt;&lt;a href="http://www.ptlug.org"&gt;Pistoia Linux User Group&lt;/a&gt;&lt;/strong&gt;
decided to join the international event &lt;strong&gt;&lt;a href="https://wiki.ubuntu.com/UbuntuGlobalJam"&gt;"Ubuntu Global
Jam"&lt;/a&gt;&lt;/strong&gt; organizing it in
collaboration with &lt;strong&gt;&lt;a href="http://ubuntu-it.org/"&gt;Ubuntu-it Community&lt;/a&gt;&lt;/strong&gt;. The
international event will be on &lt;strong&gt;March 2nd, 3rd and 4th&lt;/strong&gt; and we have
decided for &lt;strong&gt;March 3rd (saturday) from 15:00 CET to 19:00 CET&lt;/strong&gt;. This
event will be organized in a room made available by &lt;strong&gt;Circolo ARCI
Bonelle&lt;/strong&gt;. We'll have a room capable of about 100 people and a smaller
one with 4 PC and a big table for people who want to bring their own
laptop. &lt;strong&gt;Wifi&lt;/strong&gt; internet connection will be available for everyone.&lt;/p&gt;
&lt;p&gt;The event will be introduced by a talk made by &lt;strong&gt;Paolo Sammicheli&lt;/strong&gt; of
the &lt;a href="http://ubuntu-it.org/"&gt;Ubuntu-it Community&lt;/a&gt; and then we will divide
in some smaller groups that will dedicate to different tasks. One will
be coordinated by &lt;strong&gt;Paolo Sammicheli&lt;/strong&gt; and will be dedicated to testing
and bug triaging. Another group will do some translations from english
to italian and will collaborate directly with italian translation team
talking with them on a dedicated IRC channel. The last group will be
leaded by a very good &lt;strong&gt;Unity&lt;/strong&gt; rockstar..... (suspance)...... &lt;strong&gt;Marco
Trevisan&lt;/strong&gt;! People collaborating directly with him will try to help
fixing some bugs or at least they will learn how to get started to bug
fixing (probably we will pick a bitesize bug and we will fix it
together).&lt;/p&gt;
&lt;p&gt;We've created an &lt;a href="https://www.facebook.com/events/151257404993865/"&gt;event on
Facebook&lt;/a&gt; and invited
all our friends to attend. We really hope that many people will
partecipate to this opportunity to make the next Ubuntu version more...
"&lt;strong&gt;precise&lt;/strong&gt;"!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 19 Feb 2012 17:05:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-02-19:/2012/02/19/ubuntu-global-jam-march-3rd-2012-pistoia-tuscany-italy/</guid><category>Linux, Ubuntu (EN)</category></item><item><title>CuteSoma - worldwide downloads statistic for Nokia N9</title><link>https://www.andreagrandi.it/2012/02/03/cutesoma-worldwide-downloads-statistic-for-nokia-n9/</link><description>&lt;p&gt;&lt;a href="http://store.ovi.com/content/205737"&gt;CuteSoma&lt;/a&gt; (Soma.fm client for
Nokia N9) has been available for 4 months now and it's the right time to
publish some interesting statistics about downloads. First of all I
didn't expect so much interest and I wasn't sure to have so many
downloads, due to the fact that Nokia never advertised this device
properly. But luckly lot of people don't care about advertising and buy
a product anyway if they know it's one of the best available on the
smartphone market.&lt;/p&gt;
&lt;p&gt;I'm really happy to notice that the number of downloads is growing each
month, this motivates me to continue with development (well... when my
N950 comes back from Nokia, since I had to send it because it was
broken).&lt;/p&gt;
&lt;p&gt;I want to thank all the &lt;strong&gt;3658&lt;/strong&gt; people that downloaded CuteSoma until
now and all the people that are sending me their feedback, ideas and
patches (yes &lt;strong&gt;Cornelius Hald&lt;/strong&gt;, I'm talking about you :D ) you're
giving me a big opportunity to learn &lt;strong&gt;C++/Qt/QML&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2012/02/CuteSoma_downloads1.png"&gt;&lt;img alt="cutesoma downloads" src="https://www.andreagrandi.it/images/2012/02/CuteSoma_downloads1.png"&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 03 Feb 2012 18:11:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-02-03:/2012/02/03/cutesoma-worldwide-downloads-statistic-for-nokia-n9/</guid><category>Maemo (EN), MeeGo, Qt</category></item><item><title>Nokia QtSDK installer crash on Ubuntu: how to fix it</title><link>https://www.andreagrandi.it/2012/01/12/nokia-qtsdk-installer-crash-on-ubuntu-how-to-fix-it/</link><description>&lt;p&gt;If you try to install &lt;strong&gt;Nokia QtSDK&lt;/strong&gt; on Ubuntu using the Nokia
installer (that provides a newer version than the one distributed in
Ubuntu Software Center) you could get an error like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;Qt_SDK_Lin32_offline_v1_1_3_en.run:3126&lt;span class="o"&gt;)&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Gtk-CRITICAL&lt;span class="w"&gt; &lt;/span&gt;**:
IA__gtk_widget_style_get:&lt;span class="w"&gt; &lt;/span&gt;assertion&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;GTK_IS_WIDGET&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;widget&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
failed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to fix it, you need to run the installer with a specific parameter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./Qt_SDK_Lin32_offline_v1_1_4_en.run&lt;span class="w"&gt; &lt;/span&gt;-style&lt;span class="w"&gt; &lt;/span&gt;cleanlooks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and everything should work!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 12 Jan 2012 19:36:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-01-12:/2012/01/12/nokia-qtsdk-installer-crash-on-ubuntu-how-to-fix-it/</guid><category>HowTo, Linux, Programmazione, Qt, Ubuntu (EN)</category><category>11.04</category><category>11.10</category><category>installer</category><category>Natty</category><category>nokia</category><category>Oneiric</category><category>Qt</category><category>SDK</category><category>Ubuntu</category></item><item><title>Backing up all your Flickr photos using Linux</title><link>https://www.andreagrandi.it/2012/01/05/backing-up-all-your-flickr-photos-using-linux/</link><description>&lt;p&gt;I've been a Flickr pro user for 4 years, but the pro account costs
&lt;strong&gt;24,95$/year&lt;/strong&gt; and I was looking for something cheaper. Anyway I was
thinking that after all, even if I don't renew my account, I can always
access to all my pictures.... wrong! &lt;strong&gt;If you don't renew your pro
Flickr account you can only access to the low resolution version of your
own pictures.&lt;/strong&gt; That's not acceptable for me, so I decided to download
all my pictures and upload them somewhere else. Here comes the second
disappointment: &lt;strong&gt;there is no automatic way to download all your
pictures&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I simply had no time to write an application by myself, so I started
searching on Google to see if there was something available to do this
simple task. At the beginning I only found abandoned tools (closed
source, the API was expired ecc...), paid tools, Windows only tools
ecc... but finally I found this
post &lt;a href="http://hivelogic.com/articles/backing-up-flickr/"&gt;http://hivelogic.com/articles/backing-up-flickr/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is a Python script that automatically downloads all your Flickr
pictures getting the highest resolution available, you can download the
script from here &lt;a href="https://github.com/dan/hivelogic-flickrtouchr"&gt;https://github.com/dan/hivelogic-flickrtouchr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The usage is very simple&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;FlickrBackupFolder&lt;span class="w"&gt;  &lt;/span&gt;
python&lt;span class="w"&gt; &lt;/span&gt;flickrtouchr.py&lt;span class="w"&gt; &lt;/span&gt;FlickrBackupFolder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A browser's window will be opened and you'll be prompted for
authorization. After that, all you pictures will be downloaded.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 05 Jan 2012 11:31:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2012-01-05:/2012/01/05/backing-up-all-your-flickr-photos-using-linux/</guid><category>HowTo, Linux, Python, Ubuntu (EN)</category></item><item><title>ebook: valgono la pena rispetto ai libri cartacei? L'esempio Amazon Kindle</title><link>https://www.andreagrandi.it/2011/12/30/ebook-valgono-la-pena-rispetto-ai-libri-cartacei-lesempio-amazon-kindle/</link><description>&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2011/12/kindle-300x211.jpg"&gt;&lt;img alt="kindle" src="https://www.andreagrandi.it/images/2011/12/kindle-300x211.jpg" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In questo periodo diversi conoscenti mi stanno facendo domande su come
siano gli ebook e se valga la pena farne uso rispetto ai normali libri
cartacei. Recentemente ho avuto modo di acquistare il lettore
&lt;strong&gt;&lt;a href="http://www.amazon.it/Kindle-dispositivo-wireless-inchiostro-elettronico/dp/B0051QVF7A/ref=amb_link_162561647_2?pf_rd_m=A11IL2PNWYJU7H&amp;amp;pf_rd_s=center-1&amp;amp;pf_rd_r=0DNDRW6Q67KH6PZGYECK&amp;amp;pf_rd_t=101&amp;amp;pf_rd_p=270371827&amp;amp;pf_rd_i=426865031"&gt;Kindle&lt;/a&gt;&lt;/strong&gt;
di &lt;strong&gt;Amazon&lt;/strong&gt; e devo ammettere di essere rimasto molto soddisfatto. Ho
cercato di raccogliere le principali domande che mi sono state fatte al
riguardo, sperando di fornire una panoramica completa sui libri in
formato elettronico e sui relativi lettori.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Non è scomodo leggere sul Kindke?&lt;/strong&gt; Assolutamente no. Non dovete
immaginare il Kindle come un tablet (anzi, chi cerca un qualcosa che
funzioni anche come tablet ha proprio sbagliato prodotto. Kindle è fatto
per leggere libri.), lo schermo infatti non è un normale LCD come quelli
dei tablet o dei portatili, ma una speciale superficie dove le parole
vengono disegnate tramite l'&lt;a href="http://it.wikipedia.org/wiki/E-ink"&gt;e-ink&lt;/a&gt;.
Lo schermo del Kindle non è retroilluminato e per leggere, così come per
un libro normale, c'è bisogno o della luce del sole o di stare vicino ad
una lampada. Gli occhi quindi non si stancano ed è possibile andare
avanti a leggere per ore, senza notare differenze rispetto alla lettura
di un libro normale.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quanto costano i libri in formato elettronico?&lt;/strong&gt; Di solito il costo è
di &lt;strong&gt;3-4€ in meno&lt;/strong&gt; rispetto alla versione cartacea. Potrebbero costare
molto meno se la legge italiana (ancora una volta cieca di fronte alle
innovazioni) non equiparasse gli ebook a dei prodotti elettronici. L'IVA
sugli ebook è infatti del 21% e non viene assolta come per i libri
cartacei. Va detto anche che moltissimi libri, per i quali sono ormai
scaduti i diritti di autore, sono disponibili gratuitamente. Volete
leggere &lt;em&gt;La Divina Commedia&lt;/em&gt;, &lt;em&gt;Pirandello&lt;/em&gt;, &lt;em&gt;I Promessi Sposi&lt;/em&gt; ecc...?!
Benissimo. Questi e molti altri libri sono scaricabili gratuitamente.
Kindle al momento offre "soltanto" &lt;strong&gt;16.000 titoli&lt;/strong&gt; in italiano, ma è
ovviamente possibile accedere anche a tutti gli altri titoli disponibili
in lingua straniera, per un totale di &lt;strong&gt;quasi un milione di libri a
disposizione&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quali sono i vantaggi per chi scrive?&lt;/strong&gt; Gli scrittori, grazie agli
ebook, hanno un modo ancora piu' facile e redditizio per pubblicare i
propri libri. Attualmente, se uno scrittore vuole pubblicare un libro,
deve trovare un editore che lo reputi interessante e decida di investire
per pubblicarlo. Visto che l'editore di assume un rischio molto alto, la
maggior parte del compenso va a lui. Con Amazon invece è possibile
pubblicare un proprio libro in modo economico e veloce. Non c'è
necessità di stampare migliaia di copie di un libro, così come avviene
per il cartaceo. I compensi inoltre sono molto alti: il &lt;strong&gt;70% del
ricavato va a chi scrive il libro&lt;/strong&gt;, non all'editore. Su un libro da 10€
quindi, all'autore rimangono 7€.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Riassumiamo i vantaggi degli ebook&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;economici (costano 3-4€ in meno, molti sono persino gratuiti)&lt;/li&gt;
&lt;li&gt;ecologici (non c'è bisogno di stampare migliaia di copie)&lt;/li&gt;
&lt;li&gt;maggiori introiti per chi scrive i libri&lt;/li&gt;
&lt;li&gt;un e-reader è leggero, può contenere oltre 1000 libri, ottima autonomia con batterie che durano 1 mese&lt;/li&gt;
&lt;li&gt;comodità di poter acquistare un libro direttamente da casa ed averlo in pochi minuti&lt;/li&gt;
&lt;li&gt;nessun pericolo di acquistare un libro che non ci piace: con Kindle è possibile avere una copia dei primi capitoli del libro, senza spendere niente, in modo da valutare se il libro valga veramente la pena di essere letto&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se posso aggiungere un vantaggio, del tutto soggettivo, ma che
personalmente è il piu' importante: gli ebook mi hanno fatto tornare
anche la voglia di leggere!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 30 Dec 2011 21:23:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-12-30:/2011/12/30/ebook-valgono-la-pena-rispetto-ai-libri-cartacei-lesempio-amazon-kindle/</guid><category>Review</category><category>Amazon</category><category>ebook</category><category>ereader</category><category>Kindle</category><category>leggere</category><category>lettura</category><category>libri</category><category>review</category><category>recensione</category></item><item><title>Ubuntu Oneiric 11.10 problems and regressions</title><link>https://www.andreagrandi.it/2011/10/12/ubuntu-oneiric-11-10-problems-and-regressions/</link><description>&lt;p&gt;&lt;a href=""&gt;&lt;img alt="software bug" src="https://www.andreagrandi.it/images/2011/10/software-bug-300x199.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tomorrow &lt;strong&gt;Ubuntu 11.10&lt;/strong&gt; (Oneiric Ocelot) will be released officially
and I decided to test the RC (release candidate) version on my desktop
PC. Being involved in Unity-2D development I used only that desktop
environment on my development virtual machine so I didn't have much time
to test Unity (3D version).&lt;/p&gt;
&lt;p&gt;I must admit that there have been a lot of improvements from 11.04
(Natty Narval) release, but also a lot of &lt;strong&gt;bugs&lt;/strong&gt; and &lt;strong&gt;regressions&lt;/strong&gt;
have been introduced. I've noted all the problems I found in every day
use and as soon as possible I'll also submit proper &lt;strong&gt;bug report on
Launchpad&lt;/strong&gt; for each of them. In the mean time you can give a look to
the following list.&lt;/p&gt;
&lt;h2&gt;Bugs and regressions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Notifications broken:&lt;/strong&gt; on Ubuntu Natty when an application wants to
notify of a new message it popups an icon from the Launcher, then
displays a small blue triangle in the top-left corner of the screen.
Oneiric doesn’t have the small blue triangle anymore. In this way, if
the user is looking away when he gets a notification, he can miss it for
hours. There’s no way to know that there is a notify without manually
going with mouse to the left and making the launcher to appear.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Launcher visibility:&lt;/strong&gt; on Ubuntu Natty when the user moves the mouse
in the top-left corner the Launcher is shown. Oneiric doesn’t show
Launcher if you move the mouse in the top-left corner. You can’t use the
top 30-40 pixels (the height of the panel).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notify area icons:&lt;/strong&gt; often in Oneiric when you click an icon in the
notify area (for example the volume icon, the network manager icon
ecc...) the popup is shown and suddenly hidden. You have to click a
second time to view it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notify icon - Empathy:&lt;/strong&gt; in Oneiric you cannot open Empathy from the
notify area. If you click on “Chat” Empathy is open and visible on the
Launcher but not on the screen. You have to move to mouse to the
launcher then click on it to view the application window.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Empathy:&lt;/strong&gt; “Automatically connect on startup” doesn’t work. If you
enable this option in Empathy it doesn’t start anyway when the system
start.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Launcher doesn’t work as expected:&lt;/strong&gt; sometimes when you move the mouse
on the left, Launcher is not shown. You can try it many times and it
still doesn’t appear. I’ve to SUPER+D a couple of times (to show/hide
Desktop) to show view it. Even the opposite problem happens: sometime
you cannot hide the Launcher.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Boot failing:&lt;/strong&gt; every time I boot Oneiric the first boot fails. I
cannot know what happens because nothing is shown on video. I press
CTRL+ALT+CANC, the system reboot and then boot normally.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Showing Skype:&lt;/strong&gt; on Natty you just need to double-click on Skype icon
in the notify bar to show it, now you need to click once on the icon,
choose “Activate” from menu and you show it. Why the need to complicate
an easy thing?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Webcam problems with Skype:&lt;/strong&gt; with Natty I could use my webcam with
Skype without any problem. Now I can still use it but if I activate the
view of myself during a videcall, the video completly locks and it
doesn’t work anymore. Skype is always the same version, so probably
there is a problem with the new driver used.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Window manager:&lt;/strong&gt; sometimes moving an application window doesn’t work.
You drag a window around the screen then suddenly the window stop moving
and the mouse icon starts vibrating. You have to release and click again
to move the window and stop mouse icon vibrating.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In the next days I'll work on checking for these bugs on Launchpad to
see if they're already submitted and if not I'll submit them, hoping
they will be fixed as soon as possible before end users start bothering
about them.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 12 Oct 2011 23:27:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-10-12:/2011/10/12/ubuntu-oneiric-11-10-problems-and-regressions/</guid><category>Linux, Ubuntu (EN)</category><category>ubuntu oneiric ocelot</category></item><item><title>CuteSoma: Soma.Fm client for Nokia N9/N950 now available on OVI Store</title><link>https://www.andreagrandi.it/2011/09/30/cutesoma-soma-fm-client-for-nokia-n9n950-now-available-on-ovi-store/</link><description>&lt;p&gt;&lt;strong&gt;CuteSoma&lt;/strong&gt; is a client of &lt;strong&gt;&lt;a href="http://somafm.com/"&gt;Soma.Fm&lt;/a&gt;&lt;/strong&gt; streaming
radio that I wrote using Qt/QML for &lt;strong&gt;Nokia N9&lt;/strong&gt; and &lt;strong&gt;Nokia N950&lt;/strong&gt;.
Previously it was available as a .deb only, now you can install it
directly from the &lt;strong&gt;&lt;a href="http://store.ovi.com/content/205737"&gt;OVI Store&lt;/a&gt;&lt;/strong&gt;.
It's only a 0.1 version and even if it's quite stable it may contains
some bugs: please report me any bug so I can try to fix them as soon as
possible.&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;&lt;img alt="cutesoma" src="https://www.andreagrandi.it/images/2011/09/CuteSoma_ss01-168x300.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CuteSoma is opensource and released under the GPL v.3 license. You can find the
complete source code here: &lt;a href="https://github.com/andreagrandi/CuteSoma"&gt;https://github.com/andreagrandi/CuteSoma&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is a poll available to let the final users choose the new icon for this application, you can find it here: &lt;a href="http://forum.meego.com/showthread.php?t=4619"&gt;http://forum.meego.com/showthread.php?t=4619&lt;br&gt;
&lt;/a&gt; 
I asked for help to design a new icon and I received two, so I'm letting the final users choose which one they like most.&lt;/p&gt;
&lt;p&gt;To get this application you need to search "cutesoma" on &lt;strong&gt;OVI Store&lt;/strong&gt; client or visit this link &lt;a href="http://store.ovi.com/content/205737"&gt;http://store.ovi.com/content/205737&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please remember that CuteSoma is &lt;strong&gt;free&lt;/strong&gt;, but if you want you can make me a &lt;strong&gt;donation&lt;/strong&gt; or offer me a beer using the "Donazione" button on the right column.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 30 Sep 2011 11:53:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-09-30:/2011/09/30/cutesoma-soma-fm-client-for-nokia-n9n950-now-available-on-ovi-store/</guid><category>Maemo (EN), MeeGo</category></item><item><title>HowTo extend HTC Desire internal memory to 2Gb using CyanogenMod 7 and Data2SD</title><link>https://www.andreagrandi.it/2011/08/13/howto-extend-htc-desire-internal-memory-to-2gb-using-cyanogenmod-7-and-data2sd/</link><description>&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2011/08/htc-desire-300x260.jpg"&gt;&lt;img alt="htc-desire" src="https://www.andreagrandi.it/images/2011/08/htc-desire-300x260.jpg" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Even if it's not a new model, the &lt;strong&gt;HTC Desire&lt;/strong&gt; is still a very good
Android device, thanks to its &lt;strong&gt;1Ghz&lt;/strong&gt; CPU and &lt;strong&gt;512 Mb RAM&lt;/strong&gt;, but one
of the biggest problems of this phone is that it comes with &lt;strong&gt;only
148Mb&lt;/strong&gt; available in the ROM. Once the operating system is installed
(ROM I mean), after installing few useful applications you'll end the
available space very soon. There are many apps available, like App2SD
that move your applications to the SD card, but it's not enough because
only the application is moved, not the data. To move the data to the SD
card, there is a very nice utility called &lt;strong&gt;Data2SD&lt;/strong&gt;. Please note that
this procedure requires you to reflash your device and partition your SD
card, so &lt;strong&gt;please do a complete backup&lt;/strong&gt; before proceding.&lt;/p&gt;
&lt;h2&gt;What you need&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;strong&gt;rooted&lt;/strong&gt; HTC Desire (you need to have a rooted phone with a &lt;strong&gt;recovery&lt;/strong&gt; already installed)&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;4Gb&lt;/strong&gt; (or bigger) &lt;strong&gt;microSD&lt;/strong&gt;, at least &lt;strong&gt;class 4&lt;/strong&gt; (class 6 is even better while class 10 is reported not working with this phone)&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;microSD&lt;/strong&gt; card &lt;strong&gt;reader&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CyanogenMod 7&lt;/strong&gt;: http://download.cyanogenmod.com/get/update-cm-7.0.3-Desire-signed.zip&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data2SD&lt;/strong&gt;: &lt;a href="http://www.droidzone.in/roms/index.php?dir=StarBurst%2Fdata2sd%2F&amp;amp;download=Data2SDInstallerX1.zip"&gt;Data2SDInstallerX1.zip&lt;/a&gt; and &lt;a href="http://www.droidzone.in/roms/index.php?dir=StarBurst%2Fdata2sd%2F&amp;amp;download=Data2SDReInstallerX1.zip"&gt;Data2SDReInstallerX1.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Google Apps&lt;/strong&gt;: &lt;a href="http://wiki.cyanogenmod.com/wiki/Latest_Version#Google_Apps"&gt;http://wiki.cyanogenmod.com/wiki/Latest_Version#Google_Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GParted&lt;/strong&gt;: you can use the version available on Ubuntu Linux or you can download a live Linux image with GParted installed: &lt;a href="http://gparted.sourceforge.net/livecd.php"&gt;http://gparted.sourceforge.net/livecd.php&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Backup your data&lt;/h2&gt;
&lt;p&gt;Before following these instructions, please &lt;strong&gt;do a complete backup&lt;/strong&gt; of
your microSD, of your original ROM (using Nandroid or similar) ecc...&lt;/p&gt;
&lt;h2&gt;Prepare the microSD card&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Open GParted on your Ubuntu Linux or use the GParted Live CD/USB.&lt;/li&gt;
&lt;li&gt;Delete all partitions on this microSD&lt;/li&gt;
&lt;li&gt;Create the first one using FAT32 filesystem, leaving 2Gb (&lt;strong&gt;2047Mb&lt;/strong&gt;) available at the end.&lt;/li&gt;
&lt;li&gt;Create a second partition using &lt;strong&gt;ext4&lt;/strong&gt; filesystem.&lt;/li&gt;
&lt;li&gt;Confirm your changes&lt;/li&gt;
&lt;li&gt;Copy CyanogenMod7 rom, Data2SD installers and Google Apps on FAT32 partition&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CyanogenMod 7 installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Reboot your phone into &lt;strong&gt;Recovery&lt;/strong&gt; (turn it off then press volume down + power)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WIPE&lt;/strong&gt; all data (userdata, cache ecc...)&lt;/li&gt;
&lt;li&gt;Choose "Install from SD card" and select CyanogenMod7 installation zip&lt;/li&gt;
&lt;li&gt;when finished reboot your phone&lt;/li&gt;
&lt;li&gt;Enter your Wifi settings, language ecc.... &lt;strong&gt;DO NOT enter&lt;/strong&gt; your Google account settings.&lt;/li&gt;
&lt;li&gt;reboot your phone&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Data2SD installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boot into &lt;strong&gt;Recovery&lt;/strong&gt; again&lt;/li&gt;
&lt;li&gt;Choose "Install from SD card" and select &lt;strong&gt;Data2SDInstallerX1.zip&lt;/strong&gt; (please note, you may have to &lt;strong&gt;turn off the signature verification&lt;/strong&gt; in Other-&amp;gt;Turn off ecc...)&lt;/li&gt;
&lt;li&gt;when finished reboot your phone&lt;/li&gt;
&lt;li&gt;now you should see &lt;strong&gt;1,97Gb&lt;/strong&gt; if you go in Settings-&amp;gt;Storage-&amp;gt;Internal Storage-&amp;gt;Total space&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Google Apps installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Reboot your phone into Recovery&lt;/li&gt;
&lt;li&gt;Choose "Install from SD card" and select the Google Apps zip file&lt;/li&gt;
&lt;li&gt;reboot your phone&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;You now have &lt;strong&gt;1,97Gb total space available&lt;/strong&gt; instead of 148Mb. Enjoy your HTC Desire!&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Update Aug 1, 2012: since December 2011 I don't have an HTC Desire anymore. These informations could be still valid but in any other case I don't have the possibility to help you more.&lt;/strong&gt;&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 13 Aug 2011 22:08:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-08-13:/2011/08/13/howto-extend-htc-desire-internal-memory-to-2gb-using-cyanogenmod-7-and-data2sd/</guid><category>HowTo</category><category>Android</category><category>Google</category><category>Linux</category><category>howto</category><category>cyanogenmod</category></item><item><title>UDS day-3</title><link>https://www.andreagrandi.it/2011/05/11/uds-day-3/</link><description>&lt;p&gt;&lt;a href=""&gt;&lt;img alt="uds" src="https://www.andreagrandi.it/images/2011/05/IMG_0260-300x200.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Even this morning I didn't wake up early because I still felt sick (I already
know this sore throath won't abandon me untile I go back home).&lt;/p&gt;
&lt;p&gt;I had a &lt;strong&gt;light breakfast at 10:30&lt;/strong&gt; and then I finishes uploading some
pictures and published articles on my blog I already had written before.&lt;/p&gt;
&lt;p&gt;While waiting to attend a session, I found &lt;strong&gt;Mark Shuttleworth&lt;/strong&gt; around
and I congratulated with him for the effort he is putting into Ubuntu.
Without a similar distribution, I'm pretty sure that Linux would not be
so popular today.&lt;/p&gt;
&lt;p&gt;We had lunch at 13:00 as usual and after that I attended a couple of
presentation. The first one on Eucalyptus, then "&lt;strong&gt;Cooking Recipes&lt;/strong&gt;"
for Ubuntu and another one dedicated to &lt;strong&gt;Wine&lt;/strong&gt;. The Wine session was
so funny! They had a little problem with video projector and all the
images appeared with a blur effect so that you could think to be drunk
;)&lt;/p&gt;
&lt;p&gt;After these sessions I had to go back to my room since I didn't feel
very well, but I was able to attend "&lt;strong&gt;Unity's relations and
dependancies on GNOME&lt;/strong&gt;" thanks to audio streaming, IRC for asking
questions and etherpad to take notes.&lt;/p&gt;
&lt;p&gt;I attended also "&lt;strong&gt;desktop-dx-o-unity-a11y&lt;/strong&gt;" where there was a
discussion about the state of &lt;strong&gt;Unity&lt;/strong&gt; and what can be improved before
&lt;strong&gt;Oneiric&lt;/strong&gt; release. Lot of work has to be done yet, in particular about
accessibility.&lt;/p&gt;
&lt;p&gt;Last session of this day, a
&lt;strong&gt;&lt;a href="http://summit.ubuntu.com/uds-o/meeting/other-o-sabdfl-community-qa/"&gt;Q+A&lt;/a&gt;&lt;/strong&gt;
with &lt;strong&gt;Mark Shuttleworth&lt;/strong&gt;. The session was very interesting! He replied
to all questions coming from the public and from IRC.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 11 May 2011 18:24:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-05-11:/2011/05/11/uds-day-3/</guid><category>Linux, Ubuntu (EN), UDS</category><category>Budapest</category><category>Developer</category><category>Linux</category><category>summit</category><category>Ubuntu</category><category>UDS</category><category>UDS-O</category></item><item><title>UDS day-2</title><link>https://www.andreagrandi.it/2011/05/11/uds-day-2/</link><description>&lt;p&gt;&lt;a href=""&gt;&lt;img alt="uds" src="https://www.andreagrandi.it/images/2011/05/IMG_0323-300x200.jpg" title="IMG_0323"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This day at UDS started a bit late for me, since i woke up pretty sick (damn
air conditioned!!!). I did not follow any conferences in the morning. I
relly wanted to follow the &lt;strong&gt;Wayland&lt;/strong&gt; one, but when I arrived the room
was already full and it was almost impossible to enter, so I decided not
to enter.&lt;/p&gt;
&lt;p&gt;I attended "&lt;strong&gt;What's wrong with UDS and how we can fix it&lt;/strong&gt;" session
before having lunch. We discussed the possibility to improve all the
session in general, for example giving them a proper order so that a
team can first discuss some API interface, then another team can discuss
how to design them.&lt;/p&gt;
&lt;p&gt;We had another wonderful and tasty &lt;strong&gt;lunch&lt;/strong&gt;, even if I didn't eat so
much, but food was very good anyway.&lt;/p&gt;
&lt;p&gt;During the afternoon I followed an interesting track: "&lt;strong&gt;Recommend music
based on current song playing or on users media library&lt;/strong&gt;". We discussed
the possibilities to implement a music suggestion service, based on
user's tastes.&lt;/p&gt;
&lt;p&gt;I spent the rest of theconference time writing these blog posts and
uploading pictures.&lt;/p&gt;
&lt;p&gt;After the sessions we had the &lt;strong&gt;Linaro Showcase&lt;/strong&gt;: lot of demo running
on Linaro and ARM processors. I was really impressed by a robot with
Kinect that was able to follow people recognizing their faces. During
the showcase there was a very nice dinner.&lt;/p&gt;
&lt;p&gt;After dinner I went out with my friend &lt;strong&gt;Manrique Lopez&lt;/strong&gt; who is here in
Budapest for another conference, so we decided to meet for a good beer.&lt;/p&gt;
&lt;p&gt;Before coming back to the hotel me, &lt;strong&gt;Marco Trevisan&lt;/strong&gt; and &lt;strong&gt;Andrea
Azzarone&lt;/strong&gt; had a nice talk with &lt;strong&gt;Jorge Castro&lt;/strong&gt;. He really make us feel
part of the Ubuntu family!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 11 May 2011 11:20:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-05-11:/2011/05/11/uds-day-2/</guid><category>Ubuntu (EN), UDS</category><category>Budapest</category><category>summit</category><category>Ubuntu</category><category>UDS</category><category>UDS-O</category></item><item><title>UDS day-1</title><link>https://www.andreagrandi.it/2011/05/11/uds-day-1/</link><description>&lt;p&gt;&lt;a href=""&gt;&lt;img alt="uds" src="https://www.andreagrandi.it/images/2011/05/IMG_0286-300x200.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My day started at 7:30 with a &lt;strong&gt;very nice breakfast!&lt;/strong&gt; I was alone with
just another guy this morning, in a very big breakbast room.&lt;/p&gt;
&lt;p&gt;After it I grabbed my badge to avoid queue later and went back to my
room to wake up &lt;strong&gt;Marco Trevisan&lt;/strong&gt; (he was still sleeping :P ).&lt;/p&gt;
&lt;p&gt;The keynote was opened by &lt;strong&gt;Jono Bacon&lt;/strong&gt; (the Ubuntu Community manager),
followed by Ubuntu founder &lt;strong&gt;Mark Shuttleworth&lt;/strong&gt;. The most interesting
(and tweeted) part of the keynote was "&lt;strong&gt;how to prounounce Oneiric&lt;/strong&gt;"
(Oeniric will be the next Ubuntu release).&lt;/p&gt;
&lt;p&gt;The keynote finished with a bit late, so all the other tracks were
shifted forward. I followed "&lt;strong&gt;Unity 2D Oneiric Improvements&lt;/strong&gt;", it was
interesting because there were some &lt;strong&gt;Nokia/Qt&lt;/strong&gt; guys and they looked
very interested in helping the Unity 2D team and collaborating with
them.&lt;/p&gt;
&lt;p&gt;Now following "&lt;strong&gt;&lt;a href="https://wiki.ubuntu.com/DocumentationTeam/SystemDocumentation/Tasks/Oneiric"&gt;Shaping a strategy for Ubuntu user assistance&lt;/a&gt;&lt;/strong&gt;",
I just had the possibility my involvement into helping people that
require Ubuntu assistance.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;lunch&lt;/strong&gt; has been very tasty, I had the possibility to eat some
local recipes, not bad at all.&lt;/p&gt;
&lt;p&gt;After lunch we had a short session on &lt;strong&gt;Qt&lt;/strong&gt;. The version 4.8 is going
to be released in a couple of months, while 5.0 is announced to be
released in 1 year from now: it will be almost code-compatible with 4.x,
it will have an improved support for Qt Quick and QML.&lt;/p&gt;
&lt;p&gt;As last track of the day I decided to follow "&lt;strong&gt;Personal Cloud&lt;/strong&gt;". Not a
perfect track, since the person who should have been here was only
talking with us using Skype and it was more difficoult to hear what he
said.&lt;/p&gt;
&lt;p&gt;At the end of this day there was the "&lt;strong&gt;Meet &amp;amp; Greet&lt;/strong&gt;" party, sponsored
by Freescale and Openstack. They offered a dinner and we had some good
music after it.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 11 May 2011 11:05:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-05-11:/2011/05/11/uds-day-1/</guid><category>Ubuntu (EN), UDS</category><category>Budapest</category><category>Canonical</category><category>conference</category><category>Ubuntu</category><category>UDS</category></item><item><title>UDS day-0</title><link>https://www.andreagrandi.it/2011/05/11/uds-day-0/</link><description>&lt;p&gt;&lt;a href=""&gt;&lt;img alt="uds" src="https://www.andreagrandi.it/images/2011/05/IMG_0254-300x200.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I left from &lt;strong&gt;Firenze&lt;/strong&gt; with my friend &lt;strong&gt;Marco Trevisan&lt;/strong&gt;, to go to
&lt;strong&gt;&lt;a href="http://uds.ubuntu.com"&gt;Ubuntu Developer Summit&lt;/a&gt;&lt;/strong&gt; in &lt;strong&gt;Budapest&lt;/strong&gt;. We
changed flight in &lt;strong&gt;Rome&lt;/strong&gt; where we met also &lt;strong&gt;Andrea Azzarone&lt;/strong&gt;.
Unluckly &lt;strong&gt;Alitalia losts Marco's baggage&lt;/strong&gt;, so he's still waiting for
it.&lt;/p&gt;
&lt;p&gt;We arrived at the hotel at 20:00 more or less where we met other people
of the community. There are &lt;strong&gt;lot of italians&lt;/strong&gt; at UDS. Most work for
Canonical, other were sponsored by.&lt;/p&gt;
&lt;p&gt;I met &lt;strong&gt;Marianna Raffaele&lt;/strong&gt; (one of the UDS organizer... yeah, she's
italian too!), I had to explain her a little problem I had with my
booking (nothing bad) and she managed to help me. She also gave me a
very nice guitar plettre with Ubuntu logo. Thank you Marianna for this!&lt;/p&gt;
&lt;p&gt;We went out with &lt;strong&gt;Jorge Castro&lt;/strong&gt; to drink some beers (he offered me
one, thanks Jorge!!!) and we met lot of other Ubuntu people. A really
amazing start!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 11 May 2011 10:40:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-05-11:/2011/05/11/uds-day-0/</guid><category>Ubuntu (EN), UDS</category><category>Budapest</category><category>conference</category><category>summit</category><category>Ubuntu</category><category>UDS</category></item><item><title>Some ideas to improve Community collaboration for Ubuntu Developer Summit</title><link>https://www.andreagrandi.it/2011/04/09/some-ideas-to-improve-community-collaboration-for-ubuntu-developer-summit/</link><description>&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2011/04/Ubuntu-Developer-Summit.png"&gt;&lt;img alt="ubuntu developer summit" src="https://www.andreagrandi.it/images/2011/04/Ubuntu-Developer-Summit-300x229.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A few days ago I received an email from &lt;strong&gt;Jorge O. Castro&lt;/strong&gt; of the Ubuntu
Community, announcing me that my request of sponsorization for &lt;strong&gt;&lt;a href="http://uds.ubuntu.com/"&gt;Ubuntu
Developer Summit&lt;/a&gt;&lt;/strong&gt; has been accepted. I have
never attended an UDS before, so I must admit I feel a bit disoriented
at the moment and maybe I'm missing some important informations, but at
least I'm a good test for the situation of a community member
approaching it for the first time. Since I would like to actively help
the organization of the Summit, I started looking for the right place to
do it. I've a good experience about events organization and during these
years I helped, for example, in the organization of &lt;strong&gt;Maemo Summit&lt;/strong&gt; and
&lt;strong&gt;MeeGo Conference&lt;/strong&gt;, so I'd like to share my experience with the Ubuntu
Community too.&lt;/p&gt;
&lt;h2&gt;USD Website&lt;/h2&gt;
&lt;p&gt;The Ubuntu Developer Summit website is &lt;a href="http://uds.ubuntu.com/"&gt;http://uds.ubuntu.com/&lt;/a&gt;. It
looks nice at first view, but it's missing a lot of important
informations and it contains some errors. The
&lt;a href="http://uds.ubuntu.com/travel/"&gt;Travel&lt;/a&gt; section, for example should
be named "Travel and Accomodation" and should contains not only
information about the main hotel where the Summit will take place, but
also useful informations about cheap hotels/hostels for Community people
who are not sponsored. The &lt;a href="http://uds.ubuntu.com/tracks/"&gt;Tracks&lt;/a&gt;
section is still empty. Is it possible that when less than 1 month is
missing, official tracks are not available yet? I don't mean categories,
I mean tracks inside them. The Schedule is still empty too. Clicking any
track take to a page containing an error: I would like to submit this
bug, but where? Even worse, clicking on Schedule takes the visitor to a
different website and there is no ways to navigate back (except clicking
the back button on browser).&lt;/p&gt;
&lt;h2&gt;Forum&lt;/h2&gt;
&lt;p&gt;I wasn't able to find any section in the &lt;a href="http://ubuntuforums.org/"&gt;official Ubuntu
forum&lt;/a&gt; where to talk about Ubuntu Developer
Summit. I think it would be useful to have a dedicated section to talk
about UDS or about generic Ubuntu related events. It would be useful for
people to be able to meet/know each other before attending. I was lucky
to meet Marco Trevisan, from the Ubuntu Italian Community, so we will
travel together (thanks to a Twitter message I sent!).&lt;/p&gt;
&lt;h2&gt;IRC&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;#ubuntu-uds&lt;/code&gt;&lt;/strong&gt; channel on &lt;strong&gt;FreeNode&lt;/strong&gt; is not much populated and a
couple of times I visited it nobody wrote anything. We should keep at
least 2-3 people, in turns, always available to answer any question
about UDS, it would be easier for people to find the informations they
look for.&lt;/p&gt;
&lt;h2&gt;Wiki&lt;/h2&gt;
&lt;p&gt;It would be nice to have a page on the wiki to organize better the
event. We could write a list of tasks to do and each Community member
could pick one and help with it. In this way we could divide the jobs. I
know there is a lot to do when we organize these kind of events and the
help of the Community is something we cannot risk to miss.&lt;/p&gt;
&lt;h2&gt;Media&lt;/h2&gt;
&lt;p&gt;We should give some informations to people who will attend UDS to be
sure they will use proper tags when they will publish pictures, tweets,
blog entries ecc... Do we have a tag to use on Flickr? What is the right
tag to use on Twitter? What keywords should we use when we will blog
about the Summit? All these informations are important if we want to be
sure other people will find our posts in an easy way.&lt;/p&gt;
&lt;h2&gt;Mailing List&lt;/h2&gt;
&lt;p&gt;Ubuntu has a lot of &lt;a href="https://lists.ubuntu.com/"&gt;mailing lists&lt;/a&gt;, but it
looks like none dedicated to events discussion. There is one called
&lt;a href="https://lists.ubuntu.com/mailman/listinfo/Ubuntu-event-planners"&gt;ubuntu-events-planners&lt;/a&gt;
but nobody is using it since months ago. We should use a mailing list to
discuss about events organization and/or create a dedicated one for UDS.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sat, 09 Apr 2011 19:33:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-04-09:/2011/04/09/some-ideas-to-improve-community-collaboration-for-ubuntu-developer-summit/</guid><category>Ubuntu (EN)</category></item><item><title>MeeGo Events Meeting - April 4th 2011 - Notes</title><link>https://www.andreagrandi.it/2011/04/06/meego-events-meeting-april-4th-2011-notes/</link><description>&lt;h2&gt;MeeGo Conference Updates&lt;/h2&gt;
&lt;p&gt;We have &lt;strong&gt;315&lt;/strong&gt; registrants as of today for the conference, so numbers
are looking good without having any agenda published yet! A good portion
of sessions should be approved by April 8th, this Friday and you will
receive an email when/if your session has been approved yet. Not all the
sessions will be approved by Friday though so if you do not hear from
the committee then do not worry they are probably just working through
it. The program committee is tenatively planning to have a first draft
of the Agenda up by April 15th. &lt;strong&gt;Sponsored Travel attendees&lt;/strong&gt; should
start receiving approvals during next week and approvals will continue
through April 25th.&lt;/p&gt;
&lt;h2&gt;Warm-up&lt;/h2&gt;
&lt;p&gt;You can follow the updates and planning on the Warm-up at
&lt;a href="http://wiki.meego.com/MeeGo_Conference_Spring_2011#MeeGo_Conference_Warm-Up"&gt;http://wiki.meego.com/MeeGo_Conference_Spring_2011#MeeGo_Conference_Warm-Up&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;T-shirt design contest&lt;/h2&gt;
&lt;p&gt;For anyone who didn't see it on the mailing list this morning from Brian
the winner of the &lt;a href="http://sf2011.meego.com/logistics/t-shirt-designs"&gt;T-shirt
contest&lt;/a&gt; will receive
sponsored airfare and hotel for the event in San Francisco. The contest
closes next Friday, so get drawing!&lt;/p&gt;
&lt;h2&gt;MeeGo Summit FI update&lt;/h2&gt;
&lt;p&gt;MeeGo Summit FI (15-16th Apr). Summit will be 2-day developer oriented
event as planned. Program contains keynotes, three tracks, meegathon
competition, AR.Drone fun, evening party, Intel AppUp Lab, BoFs and
more. &lt;a href="http://summit.meegonetwork.fi"&gt;http://summit.meegonetwork.fi&lt;/a&gt;&lt;br&gt;
Interest towards summit has been huge, beyond our expectations. We were
fully booked after one week. We have \~350 participants (limited by
facilities and other details), over 140 are (still) in queue for
cancellation seat.&lt;/p&gt;
&lt;h2&gt;MeeGo Corporate Guidelines and Regional and Local Assets and Guidelines&lt;/h2&gt;
&lt;p&gt;We in conjunction with Jarkko and the Finland team, the many
contributors from the community, the Linux foundation, the events team,
and the Caffelli design team have pulled together the guidelines for
MeeGo Events. Thank you all for your contributions in putting these
together! The Guidelines and Collateral Assets are posted on the Event's
page at &lt;a href="http://wiki.meego.com/Events#MeeGo_Conferences"&gt;http://wiki.meego.com/Events#MeeGo_Conferences&lt;/a&gt; we would like
your feedback and input so please email me &lt;strong&gt;amy.l.leeland@intel.com&lt;/strong&gt;
please send us things that you think we missed or things we could change
to make the guidelines better.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you can find the original log
here &lt;a href="http://trac.tspre.org/meetbot/meego-meeting/2011/meego-meeting.2011-04-05-17.00.html"&gt;http://trac.tspre.org/meetbot/meego-meeting/2011/meego-meeting.2011-04-05-17.00.html&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Wed, 06 Apr 2011 07:52:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2011-04-06:/2011/04/06/meego-events-meeting-april-4th-2011-notes/</guid><category>MeeGo</category></item><item><title>Utilizzare la Carta Sanitaria Europea su Ubuntu Linux</title><link>https://www.andreagrandi.it/2010/11/11/utilizzare-la-carta-sanitaria-europea-su-ubuntu-linux/</link><description>&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2010/11/jpg_2056020.jpg"&gt;&lt;img alt="CSE_Toscana" src="https://www.andreagrandi.it/images/2010/11/jpg_2056020.jpg" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In questo periodo le regioni stanno inviando a casa di ogni cittadino la nuova versione della
&lt;strong&gt;Carta Sanitaria Europea&lt;/strong&gt;, simile a quella che potete vedere nella
foto. Questa nuova carta, oltre a conservare gli stessi utilizzi di
quella vecchia, comprende anche un micro chip che permette di
utilizzarla con i comuni lettori di smartcard.&lt;/p&gt;
&lt;p&gt;Ma a cosa serve poter utilizzare la CSE con un lettore di smartcard? Ad
esempio ad accedere al proprio &lt;strong&gt;fascicolo sanitario&lt;/strong&gt; tramite il sito
della regione, che ci permetterà di vedere alcuni nostri dati come ad
esempio: medicine prese, esenzioni, ricoveri in ospedale, ricoveri al
pronto soccorso, risultati delle analisi ecc...&lt;/p&gt;
&lt;p&gt;Per accedere all'area riservata non viene utilizzato il classico metodo
di username/password, ma bensì l'autenticazione tramite smartcard.&lt;/p&gt;
&lt;h2&gt;Installazione del lettore di smartcard&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2010/11/miniLectorBox.jpg"&gt;&lt;img alt="miniLectorBox" src="https://www.andreagrandi.it/images/2010/11/miniLectorBox.jpg" width="60%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Prima di utilizzare la carta su &lt;strong&gt;Ubuntu Linux&lt;/strong&gt; è necessario intanto
procurarsi un lettore di smartcard (&lt;strong&gt;vi consiglio di acquistare il
kit&lt;/strong&gt; che vendono dove siete andati ad attivare la vostra CSE, poichè
viene venduto ad un prezzo vantaggioso di &lt;strong&gt;4,20€&lt;/strong&gt; mentre se provate a
comprare il lettore altrove non lo troverete a meno di 15-20€) e poi
installare sul proprio sistema alcuni pacchetti necessari al suo
funzionamento.&lt;/p&gt;
&lt;p&gt;Il lettore, una volta inserito nel proprio PC dovrebbe essere
identificabile tramite la seguente stringa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;andrea@centurion:&lt;span class="se"&gt;\~\$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;lsusb
Bus&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;002&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Device&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;004&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;ID&lt;span class="w"&gt; &lt;/span&gt;072f:90cc&lt;span class="w"&gt; &lt;/span&gt;Advanced&lt;span class="w"&gt; &lt;/span&gt;Card&lt;span class="w"&gt; &lt;/span&gt;Systems,&lt;span class="w"&gt; &lt;/span&gt;Ltd&lt;span class="w"&gt; &lt;/span&gt;ACR38
SmartCard&lt;span class="w"&gt; &lt;/span&gt;Reader
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Per installare il software necessario, occorre eseguire il seguente
comando da terminale:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pcsc-tools&lt;span class="w"&gt; &lt;/span&gt;pcscd&lt;span class="w"&gt; &lt;/span&gt;libccid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;dopo di che dovrete procurarvi il driver del lettore, che potete trovare
a &lt;a href="http://www.regione.toscana.it/Carta_sanitaria/software/linux/Installazione_lettore_LINUX/lettore/soft_lettore.zip"&gt;questo
indirizzo&lt;/a&gt;
ed installarlo con il seguente comando (dopo aver scompattato l'archivio
in una cartella a piacimento):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;dpkg&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;libminilector38u-bit4id.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Se tutto è stato eseguito correttamente, utilizzando il programma
&lt;strong&gt;&lt;code&gt;pcsc_scan&lt;/code&gt;&lt;/strong&gt; da terminale, dovreste ottenere un output simile a
questo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;andrea@centurion:&lt;span class="se"&gt;\~\$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pcsc_scan&lt;span class="w"&gt;  &lt;/span&gt;
PC/SC&lt;span class="w"&gt; &lt;/span&gt;device&lt;span class="w"&gt; &lt;/span&gt;scanner&lt;span class="w"&gt;  &lt;/span&gt;
V&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.4.16&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2001&lt;/span&gt;-2009,&lt;span class="w"&gt; &lt;/span&gt;Ludovic&lt;span class="w"&gt; &lt;/span&gt;Rousseau
&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;lt&lt;span class="p"&gt;;&lt;/span&gt;ludovic.rousseau@free.fr&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;gt&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Compiled&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;PC/SC&lt;span class="w"&gt; &lt;/span&gt;lite&lt;span class="w"&gt; &lt;/span&gt;version:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.5.3&lt;span class="w"&gt;  &lt;/span&gt;
Scanning&lt;span class="w"&gt; &lt;/span&gt;present&lt;span class="w"&gt; &lt;/span&gt;readers...&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="m"&gt;0&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;ACS&lt;span class="w"&gt; &lt;/span&gt;ACR&lt;span class="w"&gt; &lt;/span&gt;38U-CCID&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt;

Thu&lt;span class="w"&gt; &lt;/span&gt;Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:08:37&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2010&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Reader&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;ACS&lt;span class="w"&gt; &lt;/span&gt;ACR&lt;span class="w"&gt; &lt;/span&gt;38U-CCID&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
Card&lt;span class="w"&gt; &lt;/span&gt;state:&lt;span class="w"&gt; &lt;/span&gt;Card&lt;span class="w"&gt; &lt;/span&gt;inserted,&lt;span class="w"&gt;  &lt;/span&gt;
ATR:&lt;span class="w"&gt; &lt;/span&gt;3B&lt;span class="w"&gt; &lt;/span&gt;DF&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;81&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;FE&lt;span class="w"&gt; &lt;/span&gt;7D&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;6B&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;0C&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;01&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;81&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;01&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;01&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;43&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;4E&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;53&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;E8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Configurazione di Firefox&lt;/h2&gt;
&lt;p&gt;Prima di poter configurare Firefox è necessario installare un'ultima
libreria che permetterà al browser di poter interagire con il lettore di
smartcard. Dobbiamo scaricare l'archivio presente a &lt;a href="http://www.regione.toscana.it/Carta_sanitaria/software/linux/Installazione_CSE_LINUX/Software/smart_card.zip"&gt;questo
indirizzo&lt;/a&gt;,
scompattarlo e poi copiare uno dei due file presenti (a seconda che si
utilizzi un sistema a 32 o 64 bit) all'interno della cartella
&lt;strong&gt;/usr/lib&lt;/strong&gt; ed infine digitare il comando &lt;strong&gt;sudo ldconfig&lt;/strong&gt; per
aggiornare l'elenco delle librerie.&lt;/p&gt;
&lt;p&gt;A questo punto bisogna aprire &lt;strong&gt;Firefox&lt;/strong&gt; ed andare su
&lt;strong&gt;Modifica--&amp;gt;Preferenze--&amp;gt;Avanzate--&amp;gt;Cifratura--&amp;gt;Dispositivi
di Sicurezza&lt;/strong&gt; cliccare su &lt;strong&gt;Carica&lt;/strong&gt; e specificare come descrizione
&lt;strong&gt;"CSE"&lt;/strong&gt; e come percorso quello dove avete copiato la libreria
installata nel passo precedente (che ad esempio potrà trovarsi in
&lt;strong&gt;/usr/lib/libaseCnsP11.so&lt;/strong&gt; ).&lt;/p&gt;
&lt;p&gt;Per verificare che tutto funzioni correttamente è sufficiente fare click
su &lt;strong&gt;Accedi&lt;/strong&gt; e se ci verrà chiesto di inserire la "password" (che nel
nostro caso sarà il &lt;strong&gt;PIN&lt;/strong&gt; della smartcard) vorrà dire che tutto sta
funzionando nel modo corretto.&lt;/p&gt;
&lt;p&gt;Per avere maggiori informazioni sulla &lt;strong&gt;Carta Sanitaria Europea&lt;/strong&gt; e per
conoscere tutti i servizi disponibili, vi consiglio di visitare la
seguente pagina presente sul sito della &lt;strong&gt;Regione Toscana&lt;/strong&gt;:
&lt;a href="http://www.regione.toscana.it/cartasanitaria/cse/cose/index.html"&gt;http://www.regione.toscana.it/cartasanitaria/cse/cose/index.html&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Thu, 11 Nov 2010 14:32:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2010-11-11:/2010/11/11/utilizzare-la-carta-sanitaria-europea-su-ubuntu-linux/</guid><category>HowTo</category><category>CSE</category><category>Firefox</category><category>Regione Toscana</category><category>SmartCard</category></item><item><title>MeeGo Conference 2010 / Early Bird Events</title><link>https://www.andreagrandi.it/2010/09/05/meego-conference-2010-early-bird-events/</link><description>&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2010/09/aviva_stadium.jpg"&gt;&lt;img alt="aviva stadium" src="https://www.andreagrandi.it/images/2010/09/aviva_stadium.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;It would be nice to organize a weekend like the &lt;a href="http://wiki.maemo.org/Maemo-Barcelona_Long_Weekend" title="http://wiki.maemo.org/Maemo-Barcelona_Long_Weekend"&gt;Barcelona Long
Weekend&lt;/a&gt;
we (the Maemo Community) organized on October 2009. These two days
should be completly organized by the community and for the community. No
formal conferences or talks, but interactive activities and hacking
sessions where you, the participant, are the main actor.&lt;/p&gt;
&lt;p&gt;What about the content of these two days? We could have (for example)
programming tutorials, Qt tutorials, hacking sessions on a specific
task, round tables where a developer explains his difficoulties
implementing a feature and the others help him, ecc...&lt;/p&gt;
&lt;p&gt;The first thing to do is spreading this and asking people (users,
developers ecc...) what they would like to find during these two days.
Once we've gathered some nice ideas we can organize them better.&lt;/p&gt;
&lt;h2&gt;When and Where&lt;/h2&gt;
&lt;p&gt;The basic idea is to organize these two days on &lt;strong&gt;November 13th, 14th&lt;/strong&gt;.
About the location that will host us we still have no idea. Probably it
will be possible to use the same
&lt;a href="http://www.d4hotels.ie/" title="http://www.d4hotels.ie"&gt;hotel&lt;/a&gt; used for the
MeeGo Conference, but this must be confirmed yet.&lt;/p&gt;
&lt;h2&gt;Ideas for the program structure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Active participation in the event - less talk, more code. No
    powerpoints - just you, the editor and the compiler. Be productive!&lt;/li&gt;
&lt;li&gt;A two-day Hackathon: Start putting your ideas into fresh code, or
    finish a project that has been on the back burner for some time&lt;/li&gt;
&lt;li&gt;Participants are encouraged to share their progress at the end of
    each day - what they accomplished, where they need further help,
    etc.&lt;/li&gt;
&lt;li&gt;A short but intensive indroduction to Qt/C++ (something like 3-4
    hours course, offered by some expert developer)&lt;/li&gt;
&lt;li&gt;Round tables to discuss about UI improvements or features
    implementation: a developer could have found some difficoult
    implementing the UI for his application or to provide a particular
    feature. Other expert developers could try to help him with his
    problem.&lt;/li&gt;
&lt;li&gt;A workshop for x86 developers on getting started with MeeGo
    development for ARM - end goal: By the end of the session, everyone
    has a sample application running in an emulator on their laptop&lt;/li&gt;
&lt;li&gt;Developer tools training - a half day on using git, valgrind,
    oprofile&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Discussion resources&lt;/h2&gt;
&lt;p&gt;The official place where I would like to take this discussion forward is
the MeeGo Forum. The official thread is available here:
&lt;a href="http://forum.meego.com/showthread.php?t=1342"&gt;http://forum.meego.com/showthread.php?t=1342&lt;/a&gt;&lt;br&gt;
We also have started a discussion on Maemo Forum and you can find it
here: &lt;a href="http://talk.maemo.org/showthread.php?t=61708"&gt;http://talk.maemo.org/showthread.php?t=61708&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The official page with all informations available is on MeeGo Wiki: &lt;a href="http://wiki.meego.com/MeeGo_Conference_2010/Early_Bird_Events"&gt;http://wiki.meego.com/MeeGo_Conference_2010/Early_Bird_Events&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 05 Sep 2010 19:25:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2010-09-05:/2010/09/05/meego-conference-2010-early-bird-events/</guid><category>Linux, Maemo (EN), MeeGo, Programmazione</category></item><item><title>Announcing my standing for the Maemo Council Q3-2010</title><link>https://www.andreagrandi.it/2010/08/27/announcing-my-standing-for-the-maemo-council-q3-2010/</link><description>&lt;p&gt;I've decided to candidate myself again (yes, I wasn't elected last time)
for the &lt;a href="http://lists.maemo.org/pipermail/maemo-community/2010-August/004399.html"&gt;Maemo Council
elections&lt;/a&gt;.
During these months I've tried to help more the Maemo Community and I've
started working to two Qt/C++ projects. Here you can find something more
about me.&lt;/p&gt;
&lt;p&gt;Name: &lt;strong&gt;Andrea Grandi&lt;/strong&gt;&lt;br&gt;
maemo.org profile: &lt;strong&gt;Andy80&lt;/strong&gt; - &lt;a href="http://maemo.org/profile/view/andy80/"&gt;http://maemo.org/profile/view/andy80/&lt;/a&gt;&lt;br&gt;
Corporate affiliation: none&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;My name is Andrea Grandi, I live in Italy and I'm a
Computer Science student. I've worked for some years as a software
developer, then I started university. I'm part of the Maemo Community
since 2007. Since then I like to help new users, organizing events,
developing applications for Maemo. During this year I've started
developing applications using Qt/C++ for N900, to be ready when MeeGo
for handled devices will be out. I really like to collaborate with other
community members to build together the best product ever.&lt;/p&gt;
&lt;h2&gt;My life in the Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;May 2008:&lt;/strong&gt; PyMaemo: Python for Nokia Internet Tablet @ PyCon Italia
2 - &lt;a href="http://www.pycon.it/conference/talks/pymaemo-python-i-nokia-internet-tablet"&gt;http://www.pycon.it/conference/talks/pymaemo-python-i-nokia-internet-tablet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;September 2008:&lt;/strong&gt; ESBox and Pluthon Eclipse plugins: how to use
Eclipse to develop Maemo applications @ Maemo Summit 2008 -
&lt;a href="http://wiki.maemo.org/Maemo_Summit_2008"&gt;http://wiki.maemo.org/Maemo_Summit_2008&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Summer 2009:&lt;/strong&gt; I worked to python-mafw bindings, during a stage in
&lt;a href="http://www.igalia.com"&gt;&lt;strong&gt;Igalia&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;October 2009:&lt;/strong&gt; python-mafw: MAFW framework for Python developers @
Maemo Summit 2009 - &lt;a href="http://wiki.maemo.org/Maemo_Summit_2009"&gt;http://wiki.maemo.org/Maemo_Summit_2009&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;May 2010:&lt;/strong&gt; PySide: Python Bindings for the Qt Framework @ PyCon
Italia 4 - &lt;a href="http://www.pycon.it/conference/talks/qt-mobile-pyside-bindings"&gt;http://www.pycon.it/conference/talks/qt-mobile-pyside-bindings&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Current Activities&lt;/h2&gt;
&lt;p&gt;I'm currently working to two Maemo/MeeGo
projects. The first one is &lt;strong&gt;mSoma&lt;/strong&gt;, a Soma.Fm client that I'm
developing with Lorenzo Bettini. The other one is &lt;strong&gt;LastGo&lt;/strong&gt;, a Last.fm
client. Both applications are written in Qt/C++ and are using QtMobility
as multimedia libraries.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;mSoma&lt;/strong&gt;: &lt;a href="http://gitorious.org/msoma"&gt;http://gitorious.org/msoma&lt;/a&gt; - &lt;a href="http://maemo.org/packages/view/msoma"&gt;http://maemo.org/packages/view/msoma&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LastGo&lt;/strong&gt;: &lt;a href="http://gitorious.org/lastgo"&gt;http://gitorious.org/lastgo&lt;/a&gt; - &lt;a href="http://maemo.org/packages/view/lastgo"&gt;http://maemo.org/packages/view/lastgo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Motivations&lt;/h2&gt;
&lt;p&gt;I really would like to be able to do more for the
community and one of the best way could be to be part of the council, to
help both users/developers to explain their requests to Nokia and Nokia
to understand the requests from the community. There are a lot of
fantastic ideas coming from the community that could improve what we are
doing: the key is to organize them and giving them more attention. This
is what I've always looked for: working together to build something
great! This will be probably the last Maemo Council, since now we
(Maemo) and them (Moblin) are all part of the same community: MeeGo, and
I'd like to help Maemo people to feel the most comfortable possible in
our new Community.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Fri, 27 Aug 2010 01:36:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2010-08-27:/2010/08/27/announcing-my-standing-for-the-maemo-council-q3-2010/</guid><category>Maemo (EN), MeeGo</category></item><item><title>Maemo Coding Competition: voting open!</title><link>https://www.andreagrandi.it/2010/07/26/maemo-coding-competition-voting-open/</link><description>&lt;h2&gt;What is Maemo Coding Competition?&lt;/h2&gt;
&lt;p&gt;This competition has been organized by Maemo Community for the Maemo
Community. Developer can work to an application and submit it for one of
the six categories available: Desktop, System &amp;amp; Utilities, Games,
Graphics &amp;amp; Multimedia, Location &amp;amp; Navigation, Other. Another category is
available too, and it's for beginner developers. The competition entry
has now ended, but voting is open. You can find more information about
the competition, in the official wiki page:
&lt;a href="http://wiki.maemo.org/Maemo_Coding_Competition_1"&gt;http://wiki.maemo.org/Maemo_Coding_Competition_1&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;How can I vote?**&lt;/h2&gt;
&lt;p&gt;Voting is available using a forum's poll for each category. Every t.m.o.
user can give one vote for each category. Here's the complete list of
polls:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Desktop: &lt;a href="http://talk.maemo.org/showthread.php?p=760304"&gt;http://talk.maemo.org/showthread.php?p=760304&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;System &amp;amp; Utilities: &lt;a href="http://talk.maemo.org/showthread.php?p=764039"&gt;http://talk.maemo.org/showthread.php?p=764039&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Games: &lt;a href="http://talk.maemo.org/showthread.php?t=58990"&gt;http://talk.maemo.org/showthread.php?t=58990&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Graphics &amp;amp; Multimedia: &lt;a href="http://talk.maemo.org/showthread.php?p=763679"&gt;http://talk.maemo.org/showthread.php?p=763679&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Location &amp;amp; Navigation: &lt;a href="http://talk.maemo.org/showthread.php?t=58964"&gt;http://talk.maemo.org/showthread.php?t=58964&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other: &lt;a href="http://talk.maemo.org/showthread.php?t=59038"&gt;http://talk.maemo.org/showthread.php?t=59038&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Beginners: &lt;a href="http://talk.maemo.org/showthread.php?t=59074"&gt;http://talk.maemo.org/showthread.php?t=59074&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;p.s:&lt;/strong&gt; I partecipate in the &lt;strong&gt;Graphics &amp;amp; Multimedia&lt;/strong&gt; category with
two applications: &lt;a href="http://maemo.org/packages/view/lastgo/"&gt;&lt;strong&gt;LastGo&lt;/strong&gt;&lt;/a&gt;
and &lt;a href="http://maemo.org/packages/view/msoma/"&gt;&lt;strong&gt;mSoma&lt;/strong&gt;&lt;/a&gt;. Please at least
test them and let me know what do you think about!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Mon, 26 Jul 2010 13:06:00 +0200</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2010-07-26:/2010/07/26/maemo-coding-competition-voting-open/</guid><category>Linux, Maemo (EN), MeeGo, Programmazione, Qt</category><category>contest</category><category>N900</category><category>nokia</category></item></channel></rss>