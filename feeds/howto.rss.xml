<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Andrea Grandi - howto</title><link>https://www.andreagrandi.it/</link><description></description><lastBuildDate>Mon, 08 Feb 2016 22:49:00 +0000</lastBuildDate><item><title>Using a light sensor with BBC micro:bit and MicroPython</title><link>https://www.andreagrandi.it/2016/02/08/using-a-light-sensor-with-bbc-microbit-and-micropython/</link><description>&lt;p&gt;A &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Photoresistor"&gt;light sensor&lt;/a&gt;&lt;/strong&gt; is a
small component with a particular characteristic: it is basically a
resistor and its resistance decreases if the light is more intense. To
use it with micro:bit we need to use one of the &lt;strong&gt;analogic ports&lt;/strong&gt;. To
build this circuit you will need a &lt;strong&gt;breadboard&lt;/strong&gt;, &lt;strong&gt;3 jumper wires&lt;/strong&gt;, a
&lt;strong&gt;10k resistance&lt;/strong&gt; and possibly a &lt;strong&gt;&lt;a href="https://www.kitronik.co.uk/5609-prototyping-system-for-the-bbc-microbit.html"&gt;Kitronik breadboard
kit&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;The project&lt;/h3&gt;
&lt;p&gt;I wanted to realise a simple project where, depending on the light
intensity captured by the light sensor, the &lt;strong&gt;micro:bit&lt;/strong&gt; shows an image
of the &lt;strong&gt;Sun&lt;/strong&gt; if the light is intense and an image of the &lt;strong&gt;Moon&lt;/strong&gt; if
the light is less intense.&lt;/p&gt;
&lt;p&gt;Here is the complete &lt;strong&gt;circuit scheme&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_schema_light.png"&gt;&lt;img alt="microbit_breadboard_schema_light" src="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_schema_light.png" width="40%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;"Image Copyright © Kitronik"&lt;/h6&gt;
&lt;p&gt;and here is a picture of the &lt;strong&gt;finished project&lt;/strong&gt; I created:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_example_2.jpg"&gt;&lt;img alt="microbit_breadboard_example_2" src="https://www.andreagrandi.it/images/2016/02/microbit_breadboard_example_2.jpg" width="40%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;source code&lt;/strong&gt; I needed is available here:&lt;/p&gt;
&lt;p&gt;
&lt;script src="https://gist.github.com/andreagrandi/99a09be27c9626b1119d.js"&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;p&gt;and as a demo I realised this small &lt;strong&gt;video&lt;/strong&gt;:&lt;/p&gt;
&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/6vLE_AQc4Bc" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Mon, 08 Feb 2016 22:49:00 +0000</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2016-02-08:/2016/02/08/using-a-light-sensor-with-bbc-microbit-and-micropython/</guid><category>bbc</category><category>breadboard</category><category>embedded</category><category>microbit</category><category>micropython</category><category>howto</category><category>python</category></item><item><title>Using BBC MicroBit accelerometer with Python</title><link>https://www.andreagrandi.it/2016/01/26/using-bbc-microbit-accelerometer-with-python/</link><description>&lt;p&gt;In these days I'm having a bit of fun with &lt;strong&gt;&lt;a href="https://www.microbit.co.uk/"&gt;BBC
MicroBit&lt;/a&gt;&lt;/strong&gt; board and I'm learning how to
use the different sensors available. The latest one I wanted to try was
the accelerometer. The board can "sense" if you are moving it in any of
the 3 dimensional axes: X, Y, Z. According to the
&lt;a href="https://microbit-micropython.readthedocs.org/en/latest/accelerometer.html"&gt;documentation&lt;/a&gt;
there are four methods available that can be used to get these
values: &lt;strong&gt;microbit.accelerometer.get_values()&lt;/strong&gt; will return you a tuple with all the 3 values, while 
&lt;strong&gt;microbit.accelerometer.get_x()&lt;/strong&gt;, &lt;strong&gt;microbit.accelerometer.get_y()&lt;/strong&gt;, &lt;strong&gt;microbit.accelerometer.get_z()&lt;/strong&gt;
will give you the single values.&lt;/p&gt;
&lt;p&gt;The documentation on the official website doesn't explain much and for
example I didn't even know what was the range of the values I can get
back from these methods (by the way it's &lt;strong&gt;between -1024&lt;/strong&gt; and
&lt;strong&gt;1024&lt;/strong&gt;), so I decided to play with the code directly and write a very
simple example. The small example I wrote, shows a smile on the board
display if you keep it straight and shows a sad face if you bend it.&lt;/p&gt;
&lt;p&gt;This is the result:&lt;/p&gt;
&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/LX8fYBsOxA0" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;

&lt;p&gt;and this is all the needed code of the application:&lt;/p&gt;
&lt;p&gt;
&lt;script src="https://gist.github.com/andreagrandi/f4a7c8ee8597dde3070d.js"&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;p&gt;In the next days I will try to play with more sensors and to publish
other examples.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Tue, 26 Jan 2016 22:41:00 +0000</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2016-01-26:/2016/01/26/using-bbc-microbit-accelerometer-with-python/</guid><category>bbc</category><category>microbit</category><category>Python</category><category>howto</category></item><item><title>How to write a custom Django Middleware</title><link>https://www.andreagrandi.it/2015/08/23/how-to-write-a-custom-django-middleware/</link><description>&lt;p&gt;To understand how a &lt;strong&gt;&lt;a href="https://docs.djangoproject.com/en/1.8/topics/http/middleware/"&gt;Django
Middleware&lt;/a&gt;&lt;/strong&gt;
works we need to remember that the basic architecture of Django is
composed by a &lt;strong&gt;request&lt;/strong&gt; and a &lt;strong&gt;response&lt;/strong&gt;. A middleware is something
that stays in the middle. Let's give a look to the next diagram, taken
from official Django documentation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/wp-content/uploads/2015/08/middleware.png"&gt;&lt;img alt="middleware" src="https://www.andreagrandi.it/wp-content/uploads/2015/08/middleware.png"&gt;{.aligncenter
.size-full .wp-image-1012 width="601"
height="511"}&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Important things to know&lt;/h2&gt;
&lt;p&gt;There are four important things to know about middlewares:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You need to write a class that just inherit from &lt;strong&gt;&lt;em&gt;object&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;order&lt;/strong&gt; where you place your middleware in &lt;strong&gt;settings.py&lt;/strong&gt; is
    important: middlewares are processed from top to bottom during a
    request and from bottom to top during a response.&lt;/li&gt;
&lt;li&gt;You don't need to implement all the available methods of a
    middleware. For example you can just implement &lt;strong&gt;process_request&lt;/strong&gt;
    and &lt;strong&gt;process_template_response&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;If you implement &lt;strong&gt;process_request&lt;/strong&gt; and you decide to return an
    &lt;strong&gt;HttpResponse&lt;/strong&gt;, all the other middlewares, views etc... will be
    ignored and only your response will be returned&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Writing a middleware&lt;/h2&gt;
&lt;p&gt;In my example I wanted to implement a feature that saves the time when a
request is made and the time when a request has been processed, then
calculates the time delta and exposes this value in the context so that
is accessible from our templates. How to implement a similar feature
using a middleware? Here is my example:&lt;/p&gt;
&lt;p&gt;``` {.lang:python .decode:true}
from datetime import datetime&lt;/p&gt;
&lt;p&gt;class BenchmarkMiddleware(object):
    def process_request(self, request):
        request._request_time = datetime.now()&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def process_template_response(self, request, response):
    response_time = request._request_time - datetime.now()
    response.context_data[&amp;#39;response_time&amp;#39;] = abs(response_time)
    return response
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Please don't care about how I calculated the time. I'm aware that there
are better ways to do it, but I just wanted to keep it simple and show
how to implement a simple middleware.&lt;/p&gt;
&lt;p&gt;If you want to see a &lt;strong&gt;complete example&lt;/strong&gt; of a project that includes and
uses this middleware, here you can find the complete source
code: &lt;a href="https://github.com/andreagrandi/benchmark-middleware-example"&gt;https://github.com/andreagrandi/benchmark-middleware-example&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.8/topics/http/middleware/"&gt;https://docs.djangoproject.com/en/1.8/topics/http/middleware/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://agiliq.com/blog/2015/07/understanding-django-middlewares/"&gt;http://agiliq.com/blog/2015/07/understanding-django-middlewares/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.runnable.com/UrSGolK00ygpAAAQ/creating-a-custom-middleware-for-python-and-django"&gt;http://code.runnable.com/UrSGolK00ygpAAAQ/creating-a-custom-middleware-for-python-and-django&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Sun, 23 Aug 2015 21:46:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2015-08-23:/2015/08/23/how-to-write-a-custom-django-middleware/</guid><category>Django</category><category>HowTo</category><category>middleware</category><category>Python</category><category>tutorial</category></item><item><title>Getting started with Digital Ocean VPS: configuring DNS and Postfix for email forwarding</title><link>https://www.andreagrandi.it/2014/08/31/getting-started-with-digital-ocean-vps-configuring-dns-and-postfix-for-email-forwarding/</link><description>&lt;p&gt;I have recently migrated my website from a shared hosting to a dedicated
VPS on Digital Ocean. Having a VPS surely gives you unlimited
possibilities, compared to a shared hosting, but of course you have to
manage some services by yourself.&lt;/p&gt;
&lt;p&gt;In my case I only needed: SSH access, LEMP configuration (Nginx + MySQL
+ PHP) to serve my WordPress blog and Postfix to use email forwarding
from my aliases to my personal email.&lt;/p&gt;
&lt;h3&gt;Configuring DNS on Digital Ocean&lt;/h3&gt;
&lt;p&gt;Understanding how to properly configure the DNS entries in the panel
could be a bit tricky if it's not your daily bread. In particular there
is a Digital Ocean configuration that assumes certain things about your
droplet, so it's better to configure it properly.&lt;/p&gt;
&lt;p&gt;For example the droplet name should not be casual, but it should match
your domain name: I initially called my host "andreagrandi" and I had to
rename it to "andreagrandi.it" to have the proper PTR values.&lt;/p&gt;
&lt;p&gt;You will need to create at least a "mail" record, pointing to your IP
and an "MX" record pointing to mail.yourdomain.com. (please note the dot
at the end of the domain name). Here is the configuration of my own
droplet (you will notice also a CNAME record. You need it if you want
www.yourdomain.com to correctly point to your ip.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreagrandi.it/images/2014/08/dns_config_digitalocean.jpg"&gt;&lt;img alt="dns_config_digitalocean" src="https://www.andreagrandi.it/images/2014/08/dns_config_digitalocean.jpg" width="100%"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Configuring Postfix&lt;/h3&gt;
&lt;p&gt;In my case I only needed some aliases that I use to forward emails to my
GMail account, so the configuration is quite easy. First you need to
install Postfix:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install postfix
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then you need to edit&lt;strong&gt; /etc/postfix/main.cf&lt;/strong&gt; customizing myhostname
with your domain name and add &lt;strong&gt;virtual_alias_maps&lt;/strong&gt; and
&lt;strong&gt;virtual_alias_domains&lt;/strong&gt; parameters. Please also check that
&lt;strong&gt;mynetworks&lt;/strong&gt; is configured exactly as I did, or you will make your
mail server vulnerable to spam bots. You can see my complete
configuration here:&lt;/p&gt;
&lt;p&gt;
&lt;script src="https://gist.github.com/andreagrandi/fe6246dac228250ee2c0.js"&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;h3&gt;Add your email aliases&lt;/h3&gt;
&lt;p&gt;Edit &lt;strong&gt;/etc/postfix/virtual&lt;/strong&gt; file and add your aliases, one per line,
like in this example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;info@yourdomain.com youremail@gmail.com
sales@yourdomain.com youremail@gmail.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point update the alias map and reload Postfix configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo postmap /etc/postfix/virtual
sudo /etc/init.d/postfix reload
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;As you can see, configuring Postfix is quite easy, you just need to be
careful when you configure the DNS records in the control panel. Are you
curious to try how Digital Ocean VPS works? Fancy &lt;strong&gt;10\$ credit&lt;/strong&gt;
(enough for 2 months if you choose the basic droplet) for &lt;strong&gt;free&lt;/strong&gt;? Use
this link and enjoy it
&lt;a href="https://www.digitalocean.com/?refcode=cc8349e328a5"&gt;https://www.digitalocean.com/?refcode=cc8349e328a5&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrea Grandi</dc:creator><pubDate>Sun, 31 Aug 2014 17:02:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2014-08-31:/2014/08/31/getting-started-with-digital-ocean-vps-configuring-dns-and-postfix-for-email-forwarding/</guid><category>dns</category><category>postfix</category><category>vps</category><category>howto</category><category>digitalocean</category><category>email</category></item><item><title>Crepes HowTo: come preparare le crepes alla Nutella!</title><link>https://www.andreagrandi.it/2008/08/09/crepes-howto-come-preparare-le-crepes-alla-nutella/</link><description>&lt;p&gt;Chi l'ha detto che all'interno di un
&lt;a href="http://it.wikipedia.org/wiki/Linux_user_group"&gt;LUG&lt;/a&gt; vengono realizzati
soltanto guide e howto tecnici? Anche i pinguini dovranno pur mangiare,
non trovate?&lt;/p&gt;
&lt;p&gt;Grazie alla nostra pinguina Laura, il &lt;a href="http://www.ptlug.org"&gt;&lt;strong&gt;PtLUG&lt;/strong&gt;&lt;/a&gt;
è lieto di presentarvi il "&lt;strong&gt;Crepes HowTo&lt;/strong&gt;", una video-guida che spiega
come preparare le &lt;strong&gt;crepes alla Nutella&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;Gustatevi il video... e le crepes!&lt;/p&gt;
&lt;p&gt;&lt;object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="344" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"&gt;&lt;param name="allowFullScreen" value="true"&gt;&lt;/param&gt;&lt;param name="src" value="http://www.youtube.com/v/4aGWrHaD__o&amp;amp;hl=it&amp;amp;fs=1&amp;amp;rel=0"&gt;&lt;/param&gt;&lt;embed type="application/x-shockwave-flash" width="425" height="344" src="http://www.youtube.com/v/4aGWrHaD__o&amp;amp;hl=it&amp;amp;fs=1&amp;amp;rel=0" allowfullscreen="true"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Sat, 09 Aug 2008 13:48:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2008-08-09:/2008/08/09/crepes-howto-come-preparare-le-crepes-alla-nutella/</guid><category>crepes</category><category>HowTo</category><category>laura</category><category>nutella</category><category>ptlug</category><category>ricetta</category></item><item><title>Installing Maemo SDK 4 HowTo Updated</title><link>https://www.andreagrandi.it/2008/04/17/installing-maemo-sdk-4-howto-updated/</link><description>&lt;p&gt;I've updated my previous howto that explain how to install [Maemo SDK 4
(Chinook)]{style="font-weight: bold;"}. The other howto was written when
Maemo SDK 4 Beta was out, now it's updated to
[4.0.1]{style="font-weight: bold;"} version of the SDK.&lt;/p&gt;
&lt;p&gt;You can find it, as usual, on this wiki:
&lt;a href="http://www.ptlug.org/wiki/Howto_Installing_Maemo_SDK_4"&gt;http://www.ptlug.org/wiki/Howto_Installing_Maemo_SDK_4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you have any suggestion or if you want to give me any idea to improve
this howto, please leave me a comment.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Thu, 17 Apr 2008 14:41:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2008-04-17:/2008/04/17/installing-maemo-sdk-4-howto-updated/</guid><category>chinook</category><category>HowTo</category><category>maemo</category><category>nokia</category><category>SDK</category></item><item><title>Using GtkIconView in Python: a small tutorial</title><link>https://www.andreagrandi.it/2008/04/15/using-gtkiconview-in-python-a-small-tutorial/</link><description>&lt;p&gt;In these days I was looking for a simple tutorial to understand how to
use &lt;strong&gt;GtkIconView&lt;/strong&gt;, but the only thing I was able to find was an
example in PHP-Gtk. So I decided to translate it in &lt;strong&gt;Python&lt;/strong&gt; language,
thinking it would be useful for other people trying to use that Gtk
control. You can find the code here:&lt;/p&gt;
&lt;p&gt;[sourcecode language='python']&lt;br&gt;
import gtk&lt;br&gt;
import gobject&lt;/p&gt;
&lt;p&gt;DEFAULT_IMAGE_WIDTH = 100&lt;/p&gt;
&lt;p&gt;# Main Window setup&lt;br&gt;
window = gtk.Window(gtk.WINDOW_TOPLEVEL)&lt;br&gt;
window.set_size_request(400, 240)&lt;br&gt;
window.connect("destroy", gtk.main_quit)&lt;br&gt;
window.set_title("Python GtkIconView Test")&lt;/p&gt;
&lt;p&gt;# Add a VBox&lt;br&gt;
vbox = gtk.VBox()&lt;br&gt;
window.add(vbox)&lt;/p&gt;
&lt;p&gt;# Setup Scrolled Window&lt;br&gt;
scrolled_win = gtk.ScrolledWindow()&lt;br&gt;
scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)&lt;/p&gt;
&lt;p&gt;# Setup ListStore to contain images and description&lt;br&gt;
model = gtk.ListStore(gtk.gdk.Pixbuf, gobject.TYPE_STRING)&lt;/p&gt;
&lt;p&gt;# Create a tuple with image files&lt;br&gt;
immagini = ("BD786-TFR.jpg", "guido_sottozero.jpg", "IMG_0056.JPG",
"movies_card.jpg")&lt;/p&gt;
&lt;p&gt;for im in immagini:&lt;br&gt;
try:&lt;br&gt;
pixbuf = gtk.gdk.pixbuf_new_from_file(im)&lt;br&gt;
pix_w = pixbuf.get_width()&lt;br&gt;
pix_h = pixbuf.get_height()&lt;br&gt;
new_h = (pix_h * DEFAULT_IMAGE_WIDTH) / pix_w # Calculate the
scaled height before resizing image&lt;br&gt;
scaled_pix = pixbuf.scale_simple(DEFAULT_IMAGE_WIDTH, new_h,
gtk.gdk.INTERP_TILES)&lt;br&gt;
model.append((scaled_pix, im))&lt;br&gt;
except:&lt;br&gt;
pass&lt;/p&gt;
&lt;p&gt;# Setup GtkIconView&lt;br&gt;
view = gtk.IconView(model) # Pass the model stored in a ListStore to
the GtkIconView&lt;br&gt;
view.set_pixbuf_column(0)&lt;br&gt;
view.set_text_column(1)&lt;br&gt;
view.set_selection_mode(gtk.SELECTION_MULTIPLE)&lt;br&gt;
view.set_columns(0)&lt;br&gt;
view.set_item_width(150)&lt;/p&gt;
&lt;p&gt;# Pack objects and show them all&lt;br&gt;
scrolled_win.add(view)&lt;br&gt;
vbox.pack_start(scrolled_win)&lt;br&gt;
window.show_all()&lt;/p&gt;
&lt;p&gt;gtk.main()&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;The important thing to notice is that you have to store all the images
in a &lt;strong&gt;GtkListStore&lt;/strong&gt; and pass it to the &lt;strong&gt;GtkIconView&lt;/strong&gt; as &lt;em&gt;"model"&lt;/em&gt;
parameter. I hope this example is clear. If you have any question,
please comment this post and I'll try to answer.&lt;/p&gt;
&lt;p&gt;This is a screenshot of this example:&lt;/p&gt;
&lt;p&gt;&lt;img alt="gtkiconview" src="http://www.andreagrandi.it/wp-content/uploads/2008/04/gtkiconview_sample.png"&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">admin</dc:creator><pubDate>Tue, 15 Apr 2008 15:24:00 +0100</pubDate><guid isPermaLink="false">tag:www.andreagrandi.it,2008-04-15:/2008/04/15/using-gtkiconview-in-python-a-small-tutorial/</guid><category>gtk</category><category>gtkiconview</category><category>gtkliststore</category><category>HowTo</category><category>programming</category><category>Python</category><category>tutorial</category></item></channel></rss>