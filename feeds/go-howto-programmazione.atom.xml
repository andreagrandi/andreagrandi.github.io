<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Andrea Grandi - Go, HowTo, Programmazione</title><link href="https://www.andreagrandi.it/" rel="alternate"></link><link href="https://www.andreagrandi.it/feeds/go-howto-programmazione.atom.xml" rel="self"></link><id>https://www.andreagrandi.it/</id><updated>2015-04-19T12:26:00+01:00</updated><entry><title>Goenv - Go Environment Manager</title><link href="https://www.andreagrandi.it/2015/04/19/goenv-go-environment-manager/" rel="alternate"></link><published>2015-04-19T12:26:00+01:00</published><updated>2015-04-19T12:26:00+01:00</updated><author><name>admin</name></author><id>tag:www.andreagrandi.it,2015-04-19:/2015/04/19/goenv-go-environment-manager/</id><summary type="html">&lt;p&gt;To briefly explain what
&lt;a href="https://bitbucket.org/ymotongpoo/goenv"&gt;&lt;strong&gt;Goenv&lt;/strong&gt;&lt;/a&gt; is, I will assume
you have previously worked with &lt;strong&gt;Python&lt;/strong&gt;. Basically it's what
&lt;strong&gt;Virtualenv&lt;/strong&gt; is for Python. Goenv (and it's wrapper &lt;strong&gt;goof&lt;/strong&gt;) creates
a folder for a new project and set the &lt;strong&gt;\$GOPATH&lt;/strong&gt; env variable to that
folder path. At this point every time you do &lt;strong&gt;go get&lt;/strong&gt;, the libraries
will be installed in that specific &lt;strong&gt;\$GOPATH&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It's very important to use separate \$GOPATH for each project, because
this allow us to use different library versions for each project and
&lt;strong&gt;avoid version conflicts&lt;/strong&gt;.&lt;/p&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;``` {.toolbar:2 .lang:zsh .highlight:0 .decode:true}
$ git clone https://bitbucket.org/ymotongpoo/goenv
$ cd goenv
$ go build -o goenv *.go
$ chmod +x goenv
$ sudo cp goenv /usr/bin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Goenv is now installed, we will now install its wrapper **goof**:

``` {.toolbar:2 .lang:zsh .highlight:0 .decode:true}
$ sudo cp shellscripts/goenvwrapper.sh /usr/bin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit &lt;strong&gt;.bashrc&lt;/strong&gt; (or &lt;strong&gt;.zshrc&lt;/strong&gt; if you use zsh) and append these lines:&lt;/p&gt;
&lt;p&gt;``` {.toolbar:2 .lang:zsh .decode:true}
export GOENVHOME=$HOME/goenvs
source /usr/bin/goenvwrapper.sh&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;How to use it&lt;/span&gt;
&lt;span class="gh"&gt;=============&lt;/span&gt;

To &lt;span class="gs"&gt;**create**&lt;/span&gt; a new go environment use &lt;span class="gs"&gt;**make**&lt;/span&gt;:

&lt;span class="s"&gt;``` {.toolbar:2 .lang:default .highlight:0 .decode:true}&lt;/span&gt;
&lt;span class="s"&gt;➜  ~  goof make go-test&lt;/span&gt;
&lt;span class="s"&gt;Do you want to create all parental directory of &amp;#39;/Users/andrea/goenvs/go-test&amp;#39;? [y/N]: y&lt;/span&gt;
&lt;span class="s"&gt;Environment /Users/andrea/goenvs/go-test created!&lt;/span&gt;
&lt;span class="s"&gt;(go:go-test) ➜  go-test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To exit the go environment use &lt;strong&gt;deactivate&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;``` {.toolbar:2 .lang:default .highlight:0 .decode:true}
(go:go-test) ➜  go-test  deactivate
➜  go-test&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;To use an environment use **workon**:

``` {.toolbar:2 .lang:default .highlight:0 .decode:true}
➜  go-test  goof workon go-test
(go:go-test) ➜  go-test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To show available environments use &lt;strong&gt;show&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{.toolbar:2 .lang:default .highlight:0 .decode:true}
(go:go-test) ➜  go-test  goof show
* go-test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Goenv itself is not enough to manage Go packages. It would be like using
&lt;strong&gt;Virtualenv&lt;/strong&gt; only and not using &lt;strong&gt;pip&lt;/strong&gt; and &lt;strong&gt;requirements&lt;/strong&gt;. In a
future post I will explain how to use
&lt;a href="https://github.com/tools/godep"&gt;&lt;strong&gt;Godep&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;To briefly explain what
&lt;a href="https://bitbucket.org/ymotongpoo/goenv"&gt;&lt;strong&gt;Goenv&lt;/strong&gt;&lt;/a&gt; is, I will assume
you have previously worked with &lt;strong&gt;Python&lt;/strong&gt;. Basically it's what
&lt;strong&gt;Virtualenv&lt;/strong&gt; is for Python. Goenv (and it's wrapper &lt;strong&gt;goof&lt;/strong&gt;) creates
a folder for a new project and set the &lt;strong&gt;\$GOPATH&lt;/strong&gt; env variable to that
folder path. At this point every time you do &lt;strong&gt;go get&lt;/strong&gt;, the libraries
will be installed in that specific &lt;strong&gt;\$GOPATH&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It's very important to use separate \$GOPATH for each project, because
this allow us to use different library versions for each project and
&lt;strong&gt;avoid version conflicts&lt;/strong&gt;.&lt;/p&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;``` {.toolbar:2 .lang:zsh .highlight:0 .decode:true}
$ git clone https://bitbucket.org/ymotongpoo/goenv
$ cd goenv
$ go build -o goenv *.go
$ chmod +x goenv
$ sudo cp goenv /usr/bin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Goenv is now installed, we will now install its wrapper **goof**:

``` {.toolbar:2 .lang:zsh .highlight:0 .decode:true}
$ sudo cp shellscripts/goenvwrapper.sh /usr/bin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit &lt;strong&gt;.bashrc&lt;/strong&gt; (or &lt;strong&gt;.zshrc&lt;/strong&gt; if you use zsh) and append these lines:&lt;/p&gt;
&lt;p&gt;``` {.toolbar:2 .lang:zsh .decode:true}
export GOENVHOME=$HOME/goenvs
source /usr/bin/goenvwrapper.sh&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;How to use it&lt;/span&gt;
&lt;span class="gh"&gt;=============&lt;/span&gt;

To &lt;span class="gs"&gt;**create**&lt;/span&gt; a new go environment use &lt;span class="gs"&gt;**make**&lt;/span&gt;:

&lt;span class="s"&gt;``` {.toolbar:2 .lang:default .highlight:0 .decode:true}&lt;/span&gt;
&lt;span class="s"&gt;➜  ~  goof make go-test&lt;/span&gt;
&lt;span class="s"&gt;Do you want to create all parental directory of &amp;#39;/Users/andrea/goenvs/go-test&amp;#39;? [y/N]: y&lt;/span&gt;
&lt;span class="s"&gt;Environment /Users/andrea/goenvs/go-test created!&lt;/span&gt;
&lt;span class="s"&gt;(go:go-test) ➜  go-test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To exit the go environment use &lt;strong&gt;deactivate&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;``` {.toolbar:2 .lang:default .highlight:0 .decode:true}
(go:go-test) ➜  go-test  deactivate
➜  go-test&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;To use an environment use **workon**:

``` {.toolbar:2 .lang:default .highlight:0 .decode:true}
➜  go-test  goof workon go-test
(go:go-test) ➜  go-test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To show available environments use &lt;strong&gt;show&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{.toolbar:2 .lang:default .highlight:0 .decode:true}
(go:go-test) ➜  go-test  goof show
* go-test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Goenv itself is not enough to manage Go packages. It would be like using
&lt;strong&gt;Virtualenv&lt;/strong&gt; only and not using &lt;strong&gt;pip&lt;/strong&gt; and &lt;strong&gt;requirements&lt;/strong&gt;. In a
future post I will explain how to use
&lt;a href="https://github.com/tools/godep"&gt;&lt;strong&gt;Godep&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</content><category term="go"></category><category term="golang"></category></entry></feed>