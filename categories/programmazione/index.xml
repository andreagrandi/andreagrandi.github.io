<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Programmazione on Andrea Grandi</title>
        <link>https://www.andreagrandi.it/categories/programmazione/</link>
        <description>Recent content in Programmazione on Andrea Grandi</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 31 Aug 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreagrandi.it/categories/programmazione/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Understanding Python decorators optimizing a recursive Fibonacci implementation</title>
        <link>https://www.andreagrandi.it/posts/understanding-python-decorators-optimizing-a-recursive-fibonacci-implementation/</link>
        <pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/understanding-python-decorators-optimizing-a-recursive-fibonacci-implementation/</guid>
        <description>&lt;p&gt;A &lt;strong&gt;decorator&lt;/strong&gt; is a Python function that takes a &lt;em&gt;function object&lt;/em&gt; as
an argument and returns a function as a &lt;em&gt;value&lt;/em&gt;. Here is an example of
decorator definition:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# make a new function&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;new_function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# some code&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_function&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;To apply a decorator to an existing function, you just need to put
&lt;strong&gt;@&lt;em&gt;decorator_name&lt;/em&gt;&lt;/strong&gt; in the line before its definition, like this
example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@foo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This decorator doesn&amp;rsquo;t do anything, so let&amp;rsquo;s think about a more concrete
problem we could solve using decorators.&lt;/p&gt;
&lt;h2 id=&#34;fibonaccisequence&#34;&gt;FibonacciÂ sequence
&lt;/h2&gt;&lt;p&gt;By definition, the first two numbers in the
&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Fibonacci_number&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Fibonacci&lt;/a&gt;&lt;/strong&gt; sequence
are either 1 and 1 or 0 and 1. All the other numbers are the sum of the
previous two numbers of the sequence. Example:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;0, 1: the third number is 1&lt;/li&gt;
&lt;li&gt;0, 1, 1: the fourth number is 2&lt;/li&gt;
&lt;li&gt;0, 1, 1, 2: the fifth number is 3&lt;/li&gt;
&lt;li&gt;0, 1, 1, 2, 3: the sixth number is 5&lt;/li&gt;
&lt;li&gt;etc&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If we wanted to give a &lt;strong&gt;math definition&lt;/strong&gt; of the sequence, we could
describe it in this way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;F(0): 0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F(1): 1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F(n): F(n-1) + F(n-2)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In &lt;strong&gt;Python&lt;/strong&gt; we could have a &lt;strong&gt;recursive function&lt;/strong&gt; like the following
one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;What&amp;rsquo;s the problem with this implementation? The code works as expected,
but it&amp;rsquo;s very &lt;strong&gt;inefficient&lt;/strong&gt;. The next picture will explain what
happens when we will try, for example, to calculate the 5th number of
the sequence:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;fibo.png&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/understanding-python-decorators-optimizing-a-recursive-fibonacci-implementation/fibo.png&#34;
	width=&#34;617&#34;
	height=&#34;359&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;fibo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;412px&#34;
	
&gt;{ width=60%}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fib(5) is Fib(4) + Fib(3), but Fib(4) itself is Fib(3) + Fib(2), and&amp;hellip;
the picture just tell us that we have calculated Fib(3) 2 times, Fib(2)
3 times, Fib(1) 5 times! Why are we repeating the same operation every
time if we already calculated the result?&lt;/p&gt;
&lt;h2 id=&#34;memoization&#34;&gt;Memoization
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In computing, &lt;strong&gt;memoization&lt;/strong&gt; is an optimization technique used
primarily to speed up computer programs by storing the results of
expensive function calls and returning the cached result when the same
inputs occur again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We need to store values of the sequence we have already calculated and
get them later when we need them. Let&amp;rsquo;s implement a simple memoization
decorator:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;memoize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;decorated_function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decorated_function&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The decorator defines a dict at the beginning that is used as a cache.
When we want to find the n number of the sequence, it first checks if
the value was already calculated and that value is returned instead of
being calculated again. If the value is not found, then the original
function is being called and then the value is store in the cache, then
returned to the caller.&lt;/p&gt;
&lt;h2 id=&#34;using-the-memoize-decorator&#34;&gt;Using the memoize decorator
&lt;/h2&gt;&lt;p&gt;How much this decorator can speed up our fib method? Let&amp;rsquo;s try to
benchmark the execution using Python
&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/2/library/timeit.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;timeit&lt;/a&gt;&lt;/strong&gt; module.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# First example, not using the memoize decorator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;timeit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timeit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Timer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;fib(35)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;from __main__ import fib&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timeit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The required time to calculate the 35th number of the Fibonacci sequence
on my laptop is:Â &lt;strong&gt;4.73480010033&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Second example, using the memoize decorator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;timeit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;memoize&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memoize&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# For convenience I put my decorator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;c1&#34;&gt;# in a module named memoize.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@memoize&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timeit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Timer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;fib(35)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;from __main__ import fib&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timeit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The required time to calculate the 35th number of the Fibonacci sequence
on my laptop is:Â &lt;strong&gt;0.000133037567139&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Quite faster, don&amp;rsquo;t you think? I will let you try how long does it take
to calculate the 60th number of the sequence with and without using the
decorator. &lt;strong&gt;Hint:&lt;/strong&gt; grab a cup of coffee before beginning!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Django Notes: read values from settings in a safe way</title>
        <link>https://www.andreagrandi.it/posts/django-notes-read-values-from-settings-in-a-safe-way/</link>
        <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/django-notes-read-values-from-settings-in-a-safe-way/</guid>
        <description>&lt;p&gt;Working on &lt;strong&gt;Django&lt;/strong&gt; projects I find very often that many developers
access the values that are defined in &lt;strong&gt;settings&lt;/strong&gt; in this way&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.conf&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MY_SETTING&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;What happens if &lt;code&gt;MY_SETTING&lt;/code&gt;Â has not been defined in &lt;strong&gt;settings.py&lt;/strong&gt;?
The code will raise an error and crash, of course. How can we make the
code more reliable? We could &lt;em&gt;try/except&lt;/em&gt; the code block that tries to
read the value and maybe set a value if we get an exception, but this
would not be a clean way to do this job.&lt;/p&gt;
&lt;p&gt;A cleaner way to do it is to use &lt;strong&gt;getattr&lt;/strong&gt; in this way:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.conf&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;getattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;MY_SETTING&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;my-default-value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;getattr&lt;/strong&gt; will try to read &lt;code&gt;MY_SETTING&lt;/code&gt; value from &lt;strong&gt;settings.py&lt;/strong&gt;,
if the value doesn&amp;rsquo;t exist &lt;code&gt;my_value&lt;/code&gt; will be assigned with
&lt;code&gt;&#39;my-default-value&#39;&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Goenv - Go Environment Manager</title>
        <link>https://www.andreagrandi.it/posts/goenv-go-environment-manager/</link>
        <pubDate>Sun, 19 Apr 2015 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/goenv-go-environment-manager/</guid>
        <description>&lt;p&gt;To briefly explain what
&lt;a class=&#34;link&#34; href=&#34;https://bitbucket.org/ymotongpoo/goenv&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Goenv&lt;/strong&gt;&lt;/a&gt; is, I will assume
you have previously worked with &lt;strong&gt;Python&lt;/strong&gt;. Basically it&amp;rsquo;s what
&lt;strong&gt;Virtualenv&lt;/strong&gt; is for Python. Goenv (and it&amp;rsquo;s wrapper &lt;strong&gt;goof&lt;/strong&gt;) creates
a folder for a new project and set the &lt;code&gt;$GOPATH&lt;/code&gt; env variable to that
folder path. At this point everyÂ time you do &lt;strong&gt;go get&lt;/strong&gt;, the libraries
will be installed in that specific &lt;code&gt;$GOPATH&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s very important to use separate &lt;code&gt;$GOPATH&lt;/code&gt; for each project, because
this allow us to use different library versions for each project and
&lt;strong&gt;avoid version conflicts&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://bitbucket.org/ymotongpoo/goenv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; goenv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go build -o goenv *.go
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod +x goenv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo cp goenv /usr/bin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Goenv is now installed, we will now install its wrapper &lt;strong&gt;goof&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo cp shellscripts/goenvwrapper.sh /usr/bin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Edit &lt;code&gt;.bashrc&lt;/code&gt; (or &lt;code&gt;.zshrc&lt;/code&gt; if you use zsh) and append these lines:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GOENVHOME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/goenvs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; /usr/bin/goenvwrapper.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;how-to-use-it&#34;&gt;How to use it
&lt;/h2&gt;&lt;p&gt;To &lt;strong&gt;create&lt;/strong&gt; a new go environment use &lt;strong&gt;make&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;goof make go-test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Do you want to create all parental directory of &lt;span class=&#34;s1&#34;&gt;&amp;#39;/Users/andrea/goenvs/go-test&amp;#39;&lt;/span&gt;? &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;y/N&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Environment /Users/andrea/goenvs/go-test created!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;go:go-test&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; â  go-test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;To exit the go environment use &lt;strong&gt;deactivate&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;go:go-test&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; â  go-test  deactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go-test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;To use an environment use &lt;strong&gt;workon&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go-test  goof workon go-test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;go:go-test&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; â  go-test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;To show available environments use &lt;strong&gt;show&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;go:go-test&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; â  go-test  goof show
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go-test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Goenv itself is not enough to manage Go packages. It would be like using
&lt;strong&gt;Virtualenv&lt;/strong&gt; only and not using &lt;strong&gt;pip&lt;/strong&gt; and &lt;strong&gt;requirements&lt;/strong&gt;. In a
future post I will explain how to use
&lt;a class=&#34;link&#34; href=&#34;https://github.com/tools/godep&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Godep&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Â &lt;/p&gt;
&lt;p&gt;Â &lt;/p&gt;
</description>
        </item>
        <item>
        <title>Travis-ci.org and Coveralls.io: Continuous Integration and QA made easy</title>
        <link>https://www.andreagrandi.it/posts/travis-ci-org-and-coveralls-io-qa-made-easy/</link>
        <pubDate>Sun, 02 Mar 2014 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/travis-ci-org-and-coveralls-io-qa-made-easy/</guid>
        <description>&lt;p&gt;Developing a large web application or before deploying some code is very
important to verify the quality of the code itself, check if we have
introduced any regression or bug and have something that tell us if we
are increasing or decreasing the quality of the code.&lt;/p&gt;
&lt;p&gt;Suppose we are in an organization or a company where the basic rule is:
&lt;strong&gt;master&lt;/strong&gt; branch is always ready/stable to be deployed. In a team
usually people work on personal branches, then when the code is stable
it&amp;rsquo;s merged with master.&lt;/p&gt;
&lt;p&gt;How do we check if the code is stable and ready to be merged? First of
all we need to cover all our code with &lt;strong&gt;proper tests&lt;/strong&gt; (I won&amp;rsquo;t go in
details about unit testing here, I assume that the reader knows what I&amp;rsquo;m
talking about), then we need to actually run them, possibly in an
isolated environment that is similar to the production one, and check if
they all pass. If they do, we are quite safe to merge our code with
master branch.&lt;/p&gt;
&lt;p&gt;How can we ensure that all the developers remember to run tests when
they push some new code? To make things a bit more real, let&amp;rsquo;s take the
example of a Python/Django product (or even a library) that currently
supports &lt;strong&gt;Python 2.6, 2.7, 3.3&lt;/strong&gt; and &lt;strong&gt;Django 1.4.x, 1.5.x, 1.6.x&lt;/strong&gt;.
The whole matrix consists of &lt;strong&gt;9 possible combinations&lt;/strong&gt;. Do we have to
manually run tests on 9 configurations? No, we don&amp;rsquo;t.&lt;/p&gt;
&lt;h2 id=&#34;travis-ciorg&#34;&gt;Travis-ci.org
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Travis&lt;/strong&gt; is a continuous integration tool that, once configured, takes
care of these tasks and let us save lot of time (that we can use to
actually write code). &lt;a class=&#34;link&#34; href=&#34;https://travis-ci.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Travis-ci.org&lt;/a&gt; is an
online service that works with &lt;a class=&#34;link&#34; href=&#34;https://github.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt; (it
requires we use GitHub as repository for our code), and once we have
connected the two accounts and configured a very simple file in our
projects, it&amp;rsquo;s automatically triggered when we push on our GitHub
repository.&lt;/p&gt;
&lt;p&gt;The configuration consists of adding a file named &lt;strong&gt;.travis.yml&lt;/strong&gt; in the
root of our project. A working example is available here
&lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/workshopvenues/blob/master/.travis.yml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/workshopvenues/blob/master/.travis.yml&lt;/a&gt;
(all the env variables I set are not required normally, but that&amp;rsquo;s where
I save the values of my configuration, so they need to be initialized
before I can run tests).&lt;/p&gt;
&lt;p&gt;The service supports most of the languages that are commonly used and
even a good number of PAAS, making it very easy to automatically
&lt;strong&gt;deploy&lt;/strong&gt; our code. If it should not be enough for your needs, they
also expose a public &lt;strong&gt;API&lt;/strong&gt;. I suggest you to give a look at the
official documentation that will explain everything in details
&lt;a class=&#34;link&#34; href=&#34;http://docs.travis-ci.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://docs.travis-ci.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once everything is configured, we will have something like this on our
console
&lt;a class=&#34;link&#34; href=&#34;https://travis-ci.org/andreagrandi/workshopvenues/jobs/19882128&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://travis-ci.org/andreagrandi/workshopvenues/jobs/19882128&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;travis-ci-console.png&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/travis-ci-org-and-coveralls-io-qa-made-easy/travis-ci-console-1024x544.png&#34;
	width=&#34;1024&#34;
	height=&#34;544&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;travis-ci-console&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;451px&#34;
	
&gt;{ width=90% }&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If something goes wrong (if tests don&amp;rsquo;t pass for example) we receive a
notification with all the informations about the failing build, and if
we had configured an automatic deployment of course the code would not
be deployed in case of a failing build.&lt;/p&gt;
&lt;p&gt;Travis-ci.org is &lt;strong&gt;completly free&lt;/strong&gt; for opensource projects and has also
a paid version for private repositories.&lt;/p&gt;
&lt;h2 id=&#34;coverallsio&#34;&gt;Coveralls.io
&lt;/h2&gt;&lt;p&gt;There is a nice tool available for Python called
&lt;a class=&#34;link&#34; href=&#34;http://nedbatchelder.com/code/coverage&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;coverage&lt;/strong&gt;&lt;/a&gt;. Basically it
runs tests and checks the percentage of the source code that is covered
by tests, producing a nice report that shows us the percentage for every
single file/module and even the lines of code that have been tested.&lt;/p&gt;
&lt;p&gt;Thanks to Coveralls.io and the use of Travis, even these tasks are
completly automatized and the results are available online like in this
example &lt;a class=&#34;link&#34; href=&#34;https://coveralls.io/builds/560853&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://coveralls.io/builds/560853&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The configuration is quite easy. We need to connect our Coveralls.io
profile with GitHub, like we did for Travis-ci.org and then enable the
repository. To trigger Coveralls after a successful Travis build, we
need to have these lines at the end of our &lt;strong&gt;.travis.yml&lt;/strong&gt; file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;after_success&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;coveralls&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;coveralls-console.png&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/travis-ci-org-and-coveralls-io-qa-made-easy/coveralls-console-1024x767.png&#34;
	width=&#34;1024&#34;
	height=&#34;767&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;coveralls-console&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;{ width=90% }&lt;/a&gt;&lt;br&gt;
Even Coveralls.io is &lt;strong&gt;completly free&lt;/strong&gt; for opensource projects and
offers a paid version for private repositories.&lt;/p&gt;
&lt;h2 id=&#34;heroku&#34;&gt;Heroku
&lt;/h2&gt;&lt;p&gt;I use &lt;a class=&#34;link&#34; href=&#34;https://www.heroku.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Heroku&lt;/strong&gt;&lt;/a&gt; to host and run my web
application. Normally to deploy on Heroku you so something like this:
&lt;strong&gt;git push heroku master&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Adding these settings to the &lt;strong&gt;.travis.yaml&lt;/strong&gt; file, I can automatically
deploy the application on Heroku, if the build was successful:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;provider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;heroku&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;api_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;R4LFkVu1/io9wSb/FvVL6UEaKU7Y4vfen/gCDe0OnEwsH+VyOwcT5tyINAg05jWXhRhsgjYT9AuyB84uCuNZg+lO7HwV5Q4WnHo5IVcCrv0PUq/CbRPUS4C2kDD7zbA1ByCd224tcfBmUtu+DPzyouk23oJH+lUwa/FeUk0Yl+I=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;workshopvenues&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;andreagrandi/workshopvenues&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;python workshopvenues/manage.py syncdb&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;python workshopvenues/manage.py migrate&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Not only the code is deployed, after deployment the &lt;strong&gt;South migrations&lt;/strong&gt; are executed.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;These two tools are saving me lot of time and are ensuring that the code
I release for a project I&amp;rsquo;m working on
(&lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/workshopvenues&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;WorkshopVenues&lt;/strong&gt;&lt;/a&gt;)
is always tested when I push it on my repository.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Factoryboy: Creating data for unit tests in an easy way</title>
        <link>https://www.andreagrandi.it/posts/factoryboy-creating-data-for-unit-tests-in-an-easy-way/</link>
        <pubDate>Thu, 30 Jan 2014 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/factoryboy-creating-data-for-unit-tests-in-an-easy-way/</guid>
        <description>&lt;p&gt;I recently prepared a presentation about
&lt;a class=&#34;link&#34; href=&#34;http://factoryboy.readthedocs.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Factoryboy&lt;/strong&gt;&lt;/a&gt;, a Python library
that automates lot of the work when a developer needs to create some
data for unit testing.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been using this library since a couple of months, both in the
company where I work and on a personal open source project I&amp;rsquo;m working
on. I will give a presentation about this library in an internal
workshop in my company and I&amp;rsquo;m available to give it in any Python/Django
related event around &lt;strong&gt;London&lt;/strong&gt;, if anyone is interested.&lt;/p&gt;
&lt;p&gt;The slides are already available:&lt;/p&gt;
&lt;p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;55509260698a013170b8769b07168819&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How to fix pip under Debian 6.0 (squeeze): ImportError: cannot import name parser</title>
        <link>https://www.andreagrandi.it/posts/how-to-fix-pip-under-debian-6-0-squeeze-importerror-cannot-import-name-parser/</link>
        <pubDate>Thu, 02 May 2013 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/how-to-fix-pip-under-debian-6-0-squeeze-importerror-cannot-import-name-parser/</guid>
        <description>&lt;p&gt;The &lt;strong&gt;pip&lt;/strong&gt; utility distributed with Debian 6.0 has a bug once you
upgrade it withÂ &lt;strong&gt;pip install -U pip&lt;/strong&gt;. You will easily get this error
when you try to install a new package with it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root@worker2:~# pip install setproctitle
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Traceback &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;most recent call last&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;File &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/bin/pip&amp;#34;&lt;/span&gt;, line 8, in 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;from pip.baseparser import parser
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ImportError: cannot import name parser
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Luckly there is a very easy workaround:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;easy_install pip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm /usr/bin/pip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ln -sv /usr/local/bin/pip-2.6 /usr/bin/pip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install pip --upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Reference: &lt;a class=&#34;link&#34; href=&#34;http://blog.102web.ru/tag/virtualenvs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://blog.102web.ru/tag/virtualenvs/&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Using virtualenv to manage multiple Python/Django environments in the same machine</title>
        <link>https://www.andreagrandi.it/posts/using-virtualenv-to-manage-multiple-pythondjango-environments-in-the-same-machine/</link>
        <pubDate>Thu, 25 Apr 2013 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/using-virtualenv-to-manage-multiple-pythondjango-environments-in-the-same-machine/</guid>
        <description>&lt;p&gt;Developing Python applications sometimes it&amp;rsquo;s useful to be able to test
the code with different environments, for example a particular version
of Python or a specific Django version etc&amp;hellip; Setting up many different
virtual machines would be really too much work and even using a chroot
environment is not what you need in some cases. Thanks to
&lt;a class=&#34;link&#34; href=&#34;https://github.com/pypa/virtualenv&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;virtualenv&lt;/strong&gt;&lt;/a&gt; is it possible to
create a self contained Python environment with all the specific
libraries you may need. Using virtualenv is very easy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating the virtual environment: &lt;strong&gt;&lt;code&gt;virtualenvmyenvÂ --no-site-packages&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Entering the virtual environment: &lt;strong&gt;&lt;code&gt;source myenv/bin/activate&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Deactivating the virtual environment: &lt;strong&gt;&lt;code&gt;deactivate&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s it! Once you&amp;rsquo;re inside the virtual environment you will be using
the Python libraries inside it. I suggest you to install all the Python
libraries you need using &lt;a class=&#34;link&#34; href=&#34;https://pypi.python.org/pypi/pip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;pip&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Fundraising for CuteSoma (Soma.fm mobile client) development</title>
        <link>https://www.andreagrandi.it/posts/fundraising-for-cutesoma-soma-fm-mobile-client-development/</link>
        <pubDate>Sun, 10 Feb 2013 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/fundraising-for-cutesoma-soma-fm-mobile-client-development/</guid>
        <description>&lt;p&gt;Developing CuteSoma and maintaining it for three different platforms
(Nokia N9, Windows Phone, BlackBerry 10) is really taking me a lot of
time. I&amp;rsquo;ve many features in mind to add but I can&amp;rsquo;t dedicate much spare
time to them and to do it I should take time from other paid projects.
I&amp;rsquo;ve also discarded the idea to make CuteSoma a paid app, because it&amp;rsquo;s
been always free (except the Windows Phone one that was non-free for
just a month, but only 6 people &amp;ldquo;SIX&amp;rdquo; bought the app).&lt;/p&gt;
&lt;p&gt;So I decided to open a &lt;a class=&#34;link&#34; href=&#34;http://www.indiegogo.com/projects/cutesoma-soma-fm-client/x/2353169&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;fundraising
campaign&lt;/a&gt;
on
&lt;a class=&#34;link&#34; href=&#34;http://www.indiegogo.com/projects/cutesoma-soma-fm-client/x/2353169&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Indiegogo&lt;/strong&gt;&lt;/a&gt;
that is a service like &lt;strong&gt;KickStarter&lt;/strong&gt;, but it&amp;rsquo;s available all around
the world (not just in USA and UK like Kickstarter).&lt;/p&gt;
&lt;h2 id=&#34;what-do-i-need--what-you-get&#34;&gt;What do I Need &amp;amp; What You Get
&lt;/h2&gt;&lt;p&gt;I would like to raise at least &lt;strong&gt;5.000â¬&lt;/strong&gt; to be able to keep maintaining
the existing features and to implement new one. Developing for 3
different platforms really takes a lot of time. I also need to find a
way to get a Windows Phone 8 device because at the moment I cannot test
some features using just the emulator.&lt;/p&gt;
&lt;p&gt;What the application currently does:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can view the list of Soma.fm channels&lt;/li&gt;
&lt;li&gt;You can listen any channel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Features I would like to add:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scrobbling song to Last.fm&lt;/li&gt;
&lt;li&gt;Write a new MediaSource for Windows Phone (the default one is quite
bugged and I need to implement one from scratch)&lt;/li&gt;
&lt;li&gt;Port the BlackBerry10 version to the native CascadesUI&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-impact&#34;&gt;The Impact
&lt;/h2&gt;&lt;p&gt;Funding the development of CuteSoma you will make thousands of people
really happy, because they will be able to listen to Soma.fm on their
Nokia N9, Windows Phone and BlackBerry 10 devices. You will also make me
feel apreciated for all the hours I&amp;rsquo;m spending to write the code :)&lt;/p&gt;
&lt;h2 id=&#34;completly-opensource&#34;&gt;Completly Opensource
&lt;/h2&gt;&lt;p&gt;Yes. CuteSoma is completlyÂ &lt;strong&gt;opensource&lt;/strong&gt;. I keep my source code on
GitHub and BitBucket and it&amp;rsquo;s always updated. All the CuteSoma versions
are released under theÂ &lt;strong&gt;GPL license&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CuteSoma for Nokia N9 - source code:Â &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/CuteSoma&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/CuteSoma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CuteSoma for BlackBerry 10 - source code:Â &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/CuteSoma/tree/bb10&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/CuteSoma/tree/bb10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CuteSoma for Windows Phone - source code:Â &lt;a class=&#34;link&#34; href=&#34;https://bitbucket.org/andreagrandi/cutesoma/src&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bitbucket.org/andreagrandi/cutesoma/src&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;other-ways-you-can-help&#34;&gt;Other Ways You Can Help
&lt;/h2&gt;&lt;p&gt;If you want to contribute but you can&amp;rsquo;t or you don&amp;rsquo;t want to send money,
you could help me in the following ways:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1) Download&lt;/strong&gt;Â and use the application:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nokia N9&lt;/strong&gt;:Â &lt;a class=&#34;link&#34; href=&#34;http://store.ovi.com/content/205737&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://store.ovi.com/content/205737&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows Phone&lt;/strong&gt;:Â &lt;a class=&#34;link&#34; href=&#34;http://www.windowsphone.com/en-us/store/app/cutesoma/387185ca-1328-4d1c-a4c2-45568cf06470&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.windowsphone.com/en-us/store/app/cutesoma/387185ca-1328-4d1c-a4c2-45568cf06470&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BlackBerry 10&lt;/strong&gt;:Â &lt;a class=&#34;link&#34; href=&#34;http://appworld.blackberry.com/webstore/content/20200430/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://appworld.blackberry.com/webstore/content/20200430/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2) Tweet/Blog&lt;/strong&gt;Â about this fund raising
campaign:Â &lt;a class=&#34;link&#34; href=&#34;http://www.indiegogo.com/projects/cutesoma-soma-fm-client/x/2353169&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.indiegogo.com/projects/cutesoma-soma-fm-client/x/2353169&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How to install latest stable Node.js on Ubuntu</title>
        <link>https://www.andreagrandi.it/posts/how-to-install-latest-stable-node-js-on-ubuntu/</link>
        <pubDate>Fri, 08 Feb 2013 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/how-to-install-latest-stable-node-js-on-ubuntu/</guid>
        <description>&lt;p&gt;If you develop with &lt;a class=&#34;link&#34; href=&#34;http://nodejs.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Node.js&lt;/strong&gt;&lt;/a&gt; and you want to be
sure to have the latest stable version, luckly there is a PPA for it.
All you need is to follow these instructions:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install python-software-properties python g++ make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo add-apt-repository ppa:chris-lea/node.js
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get update 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install nodejs npm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;
&lt;p&gt;Reference:Â &lt;a class=&#34;link&#34; href=&#34;https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>The Windows Phone Emulator wasnât able to connect to the Windows Phone operating system: how to fix it</title>
        <link>https://www.andreagrandi.it/posts/the-windows-phone-emulator-wasnt-able-to-connect-to-the-windows-phone-operating-system-how-to-fix-it/</link>
        <pubDate>Sun, 03 Feb 2013 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/the-windows-phone-emulator-wasnt-able-to-connect-to-the-windows-phone-operating-system-how-to-fix-it/</guid>
        <description>&lt;p&gt;This morning when I started my Windows Phone 8 emulator to test an
application, the emulator refused to work, giving me this error &amp;ldquo;&lt;strong&gt;The
Windows Phone Emulator wasnât able to connect to the Windows Phone
operating system&lt;/strong&gt;&amp;rdquo;. Luckly it&amp;rsquo;s very easy to fix. It&amp;rsquo;s caused by the
virtual network interface that has been disabled for some reason
(well&amp;hellip; in my case it must depend on the other day when I tryed to
trick WP7 firmware upgrade and used the disconnect trick, but this is
another story).&lt;/p&gt;
&lt;p&gt;I searched on Google for a solution and I landed on this
pageÂ &lt;a class=&#34;link&#34; href=&#34;http://pauliom.com/2012/12/20/the-windows-phone-emulator-wasnt-able-to-connect-to-the-windows-phone-operating-system/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://pauliom.com/2012/12/20/the-windows-phone-emulator-wasnt-able-to-connect-to-the-windows-phone-operating-system/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All you have to do is going to &amp;ldquo;&lt;strong&gt;Network and Internet &amp;ndash;&amp;gt; Network
Connections&lt;/strong&gt;&amp;rdquo;, right click on &amp;ldquo;&lt;strong&gt;vEthernet (Internal Ethernet Port)
Windows Phone Emulator&lt;/strong&gt;&amp;rdquo; and &lt;strong&gt;Enable&lt;/strong&gt; it.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;network_interface_wp8.png&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/network_interface_wp8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;network\_interface\_wp8&#34;
	
	
&gt;{ width=100% }&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Using Cloud9 IDE to develop Django applications</title>
        <link>https://www.andreagrandi.it/posts/using-cloud9-ide-to-develop-django-applications/</link>
        <pubDate>Sat, 05 Jan 2013 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/using-cloud9-ide-to-develop-django-applications/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.djangoproject.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Django&lt;/a&gt; is becoming very popular for
dynamic websites development (actually it already is) so I decided to
start learning it, with the help of a &lt;a class=&#34;link&#34; href=&#34;http://www.apress.com/9781430219361&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;good
book&lt;/a&gt;. To develop Django web
applications you need a good IDE and an environment that support at
least Python and a database (SQL Lite, MySQL etc&amp;hellip;). If you have
multiple machines and you alternate from multiple operating systems, the
best thing is using an environment that you can use everywhere, from
your favourite browser.&lt;/p&gt;
&lt;p&gt;Here comes &lt;a class=&#34;link&#34; href=&#34;https://c9.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Cloud9&lt;/strong&gt;&lt;/a&gt;, a very nice service that you
could define as the &amp;ldquo;Google Docs&amp;rdquo; for developers. C9 offers you a
shared, always available on the cloud, environment to write your code.
They also offer access to a Linux terminal (so you can install
applications, like Django) and your websites are istantly available
online for remote testing.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;c9ide_django.png&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/using-cloud9-ide-to-develop-django-applications/c9ide_django.png&#34;
	width=&#34;1004&#34;
	height=&#34;737&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;c9ide\_django&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;136&#34;
		data-flex-basis=&#34;326px&#34;
	
&gt;{ width=100% }&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Installing and using Django on C9 is very easy. You just need to open a
new terminal tab (ALT+T) in C9 and execute these commands&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;easy_install django  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python ./../bin/django-admin.py startproject myproject  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python ./myproject/manage.py runserver &lt;span class=&#34;nv&#34;&gt;$OPENSHIFT_INTERNAL_IP&lt;/span&gt;:&lt;span class=&#34;nv&#34;&gt;$PORT&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;After these commands, your Django website will be live and accessible
using &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;http://projectname.username.c9.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://projectname.username.c9.io&lt;/a&gt;&lt;/strong&gt; (where &lt;em&gt;projectname&lt;/em&gt; is the
name of the project you just created and &lt;em&gt;username&lt;/em&gt; is your C9 user
name).&lt;/p&gt;
&lt;p&gt;source:Â &lt;a class=&#34;link&#34; href=&#34;http://support.cloud9ide.com/entries/21830983-django-development-in-c9&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://support.cloud9ide.com/entries/21830983-django-development-in-c9&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CuteSoma (Soma.fm client) ported to BlackBerry10</title>
        <link>https://www.andreagrandi.it/posts/cutesoma-soma-fm-client-ported-to-blackberry10/</link>
        <pubDate>Thu, 03 Jan 2013 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/cutesoma-soma-fm-client-ported-to-blackberry10/</guid>
        <description>&lt;p&gt;During these Christmas holidays I&amp;rsquo;ve ported the N9 version of
&lt;strong&gt;CuteSoma&lt;/strong&gt; to &lt;strong&gt;BlackBerry10&lt;/strong&gt; platform, thanks to the BB10 Alpha
device that RIM gave to me and thanks in particular to my friend
&lt;a class=&#34;link&#34; href=&#34;https://twitter.com/corneliushald&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Cornelius Hald&lt;/strong&gt;&lt;/a&gt; that helped me
with porting.&lt;/p&gt;
&lt;p&gt;The porting itself was quite easy after all: if you have a Qt
application that uses &lt;strong&gt;MeeGo&lt;/strong&gt; Qt components, you have to switch to
&lt;strong&gt;Symbian&lt;/strong&gt; components (they&amp;rsquo;re more portable and support higher
resolutions) and to do it I suggest you follow the informations on this
blog
postÂ &lt;a class=&#34;link&#34; href=&#34;http://www.johanpaul.com/blog/2011/12/porting-meego-qt-components-apps-to-symbian/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.johanpaul.com/blog/2011/12/porting-meego-qt-components-apps-to-symbian/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you need more detailed informations about Symbian Qt Components, you
can also read this nice blog post from Cornelius
HaldÂ &lt;a class=&#34;link&#34; href=&#34;http://kodira.de/2012/12/qt-components-on-blackberry-10/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://kodira.de/2012/12/qt-components-on-blackberry-10/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-does-it-look&#34;&gt;How does it look
&lt;/h2&gt;&lt;p&gt;So, what&amp;rsquo;s the result of my porting? Well, first of all a couple of
screenshots&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;IMG_00000004.png&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/cutesoma-soma-fm-client-ported-to-blackberry10/IMG_00000004-180x300.png&#34;
	width=&#34;180&#34;
	height=&#34;300&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;IMG\_00000004&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;60&#34;
		data-flex-basis=&#34;144px&#34;
	
&gt;{ width=&amp;ldquo;180&amp;rdquo; height=&amp;ldquo;300&amp;rdquo; }&lt;/a&gt;Â 
Â 
&lt;a class=&#34;link&#34; href=&#34;IMG_00000005.png&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/cutesoma-soma-fm-client-ported-to-blackberry10/IMG_00000005-180x300.png&#34;
	width=&#34;180&#34;
	height=&#34;300&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;IMG\_00000005&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;60&#34;
		data-flex-basis=&#34;144px&#34;
	
&gt;{ width=&amp;ldquo;180&amp;rdquo; height=&amp;ldquo;300&amp;rdquo; }&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source Code
&lt;/h2&gt;&lt;p&gt;And finally the source
code:Â &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/CuteSoma/tree/bb10&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/CuteSoma/tree/bb10&lt;br&gt;
&lt;/a&gt;The application
will be published soon in the BlackBerry App World and you will have it
available in time for the BlackBerry 10 launch!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Social Connect QML plugin: access Facebook, Twitter from your Qt/QML applications</title>
        <link>https://www.andreagrandi.it/posts/social-connect-qml-plugin-access-facebook-twitter-from-your-qtqml-applications/</link>
        <pubDate>Mon, 13 Aug 2012 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/social-connect-qml-plugin-access-facebook-twitter-from-your-qtqml-applications/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://projects.developer.nokia.com/socialconnect&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Social Connect&lt;/strong&gt;&lt;/a&gt;
is a library written in &lt;strong&gt;Qt&lt;/strong&gt; that allows applications to easily
connect to services like &lt;strong&gt;Facebook&lt;/strong&gt; and &lt;strong&gt;Twitter&lt;/strong&gt;. Recently I had
the opportunity to work on this library improving it and adding support
for &lt;strong&gt;Instagram&lt;/strong&gt; (work is still in progress but it&amp;rsquo;s almost finished).&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;SocialConnect.png&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/social-connect-qml-plugin-access-facebook-twitter-from-your-qtqml-applications/SocialConnect.png&#34;
	width=&#34;999&#34;
	height=&#34;702&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;social connect&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;142&#34;
		data-flex-basis=&#34;341px&#34;
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;main features&lt;/strong&gt; of this library are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Out-of-the-box support for Facebook and Twitter&lt;/li&gt;
&lt;li&gt;Integrated authentication implementation&lt;/li&gt;
&lt;li&gt;Simplified common interface for all supported services&lt;/li&gt;
&lt;li&gt;Provides interfaces for native API calls&lt;/li&gt;
&lt;li&gt;Design enabling easy addition of new services e.g. LinkedIn&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are writing an application that needs to access these services,
this could be the library for you. It can be extended to support even
other services like LinkedIn, Flickr etc&amp;hellip; and I would like to invite
people to contribute to the code. The library has been tested withÂ &lt;strong&gt;Qt
4.8.1&lt;/strong&gt;Â onÂ &lt;strong&gt;Ubuntu Linux 12.04&lt;/strong&gt;Â but it should be compatible with any
other versions/platforms.&lt;/p&gt;
&lt;p&gt;For more informations about getting started with the library, I suggest
you to give a look at this
pageÂ &lt;a class=&#34;link&#34; href=&#34;https://projects.developer.nokia.com/socialconnect/wiki/GettingStarted&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://projects.developer.nokia.com/socialconnect/wiki/GettingStarted&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Using QML qt-components with QtQNX for BlackBerry PlayBook</title>
        <link>https://www.andreagrandi.it/posts/using-qml-qt-components-with-qtqnx-for-blackberry-playbook/</link>
        <pubDate>Fri, 30 Mar 2012 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/using-qml-qt-components-with-qtqnx-for-blackberry-playbook/</guid>
        <description>&lt;p&gt;With BlackBerry PlayBook you can now use Qt libraries to develop your
applications. The problem is that QML components are not available yet
(they will be available with CascadesUI in the near future), but you can
use Symbian qt-components to develop your application UI. This should
also make the porting of an existing Symbian Qt application easier.&lt;/p&gt;
&lt;p&gt;We suppose you have already built and installed &lt;strong&gt;QtQNX&lt;/strong&gt; under this
directory: &lt;strong&gt;&lt;code&gt;~/QtQNX/ARM/&lt;/code&gt;&lt;/strong&gt; (please change it matching the folder where
you installed it).&lt;br&gt;
At this point you have to get qt-components sources using this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone git://gitorious.org/qt-components/qt-components.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;qt-components  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Now enter the directory you just checked and compile the components:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; qt-components  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;QTDIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\~&lt;/span&gt;/QtQNX/ARM/  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./configure -symbian  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Whend you complete all the previous operations, you&amp;rsquo;ll have two
directories inside &lt;strong&gt;qt-components/imports&lt;/strong&gt;, please copy them inside
the QtQNX installation directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp -R imports/Qt &lt;span class=&#34;se&#34;&gt;\~&lt;/span&gt;/QtQNX/ARM/imports/  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp -R imports/com &lt;span class=&#34;se&#34;&gt;\~&lt;/span&gt;/QtQNX/ARM/imports/  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s all for now. In the next posts I&amp;rsquo;ll show you how to use these
components, providing a small code example. In the mean time you can
find more informations
hereÂ &lt;a class=&#34;link&#34; href=&#34;http://supportforums.blackberry.com/t5/Native-SDK-for-BlackBerry-Tablet/QML-symbian-qt-components-for-PlayBook/td-p/1574275&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://supportforums.blackberry.com/t5/Native-SDK-for-BlackBerry-Tablet/QML-symbian-qt-components-for-PlayBook/td-p/1574275&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Nokia QtSDK installer crash on Ubuntu: how to fix it</title>
        <link>https://www.andreagrandi.it/posts/nokia-qtsdk-installer-crash-on-ubuntu-how-to-fix-it/</link>
        <pubDate>Thu, 12 Jan 2012 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/nokia-qtsdk-installer-crash-on-ubuntu-how-to-fix-it/</guid>
        <description>&lt;p&gt;If you try to install &lt;strong&gt;Nokia QtSDK&lt;/strong&gt; on Ubuntu using the Nokia
installer (that provides a newer version than the one distributed in
Ubuntu Software Center) you could get an error like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Qt_SDK_Lin32_offline_v1_1_3_en.run:3126&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: Gtk-CRITICAL **:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IA__gtk_widget_style_get: assertion &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;GTK_IS_WIDGET &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;widget&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;failed  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;to fix it, you need to run the installer with a specific parameter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./Qt_SDK_Lin32_offline_v1_1_4_en.run -style cleanlooks  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;and everything should work!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>MeeGo Conference 2010 / Early Bird Events</title>
        <link>https://www.andreagrandi.it/posts/meego-conference-2010-early-bird-events/</link>
        <pubDate>Sun, 05 Sep 2010 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/meego-conference-2010-early-bird-events/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;aviva_stadium.jpg&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/meego-conference-2010-early-bird-events/aviva_stadium.jpg&#34;
	width=&#34;378&#34;
	height=&#34;300&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;aviva stadium&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;302px&#34;
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;It would be nice to organize a weekend like the &lt;a class=&#34;link&#34; href=&#34;http://wiki.maemo.org/Maemo-Barcelona_Long_Weekend&#34;  title=&#34;http://wiki.maemo.org/Maemo-Barcelona_Long_Weekend&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Barcelona Long
Weekend&lt;/a&gt;
we (the Maemo Community) organized on October 2009. These two days
should be completly organized by the community and for the community. No
formal conferences or talks, but interactive activities and hacking
sessions where you, the participant, are the main actor.&lt;/p&gt;
&lt;p&gt;What about the content of these two days? We could have (for example)
programming tutorials, Qt tutorials, hacking sessions on a specific
task, round tables where a developer explains his difficoulties
implementing a feature and the others help him, ecc&amp;hellip;&lt;/p&gt;
&lt;p&gt;The first thing to do is spreading this and asking people (users,
developers ecc&amp;hellip;) what they would like to find during these two days.
Once we&amp;rsquo;ve gathered some nice ideas we can organize them better.&lt;/p&gt;
&lt;h2 id=&#34;when-and-where&#34;&gt;When and Where
&lt;/h2&gt;&lt;p&gt;The basic idea is to organize these two days on &lt;strong&gt;November 13th, 14th&lt;/strong&gt;.
About the location that will host us we still have no idea. Probably it
will be possible to use the same
&lt;a class=&#34;link&#34; href=&#34;http://www.d4hotels.ie/&#34;  title=&#34;http://www.d4hotels.ie&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hotel&lt;/a&gt; used for the
MeeGo Conference, but this must be confirmed yet.&lt;/p&gt;
&lt;h2 id=&#34;ideas-for-the-program-structure&#34;&gt;Ideas for the program structure
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Active participation in the event - less talk, more code. No
powerpoints - just you, the editor and the compiler. Be productive!```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A two-day Hackathon: Start putting your ideas into fresh code, or
finish a project that has been on the back burner for some time```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Participants are encouraged to share their progress at the end of
each day - what they accomplished, where they need further help,
etc.```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A short but intensive indroduction to Qt/C++ (something like 3-4
hours course, offered by some expert developer)```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Round tables to discuss about UI improvements or features
implementation: a developer could have found some difficoult
implementing the UI for his application or to provide a particular
feature. Other expert developers could try to help him with his
problem.```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A workshop for x86 developers on getting started with MeeGo
development for ARM - end goal: By the end of the session, everyone
has a sample application running in an emulator on their laptop```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developer tools training - a half day on using git, valgrind,
oprofile&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Discussion resources
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The official place where I would like to take this discussion forward is
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;the MeeGo Forum. The official thread is available here:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;http://forum.meego.com/showthread.php?t=1342&amp;gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;We also have started a discussion on Maemo Forum and you can find it
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;here: &amp;lt;http://talk.maemo.org/showthread.php?t=61708&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The official page with all informations available is on MeeGo Wiki: &amp;lt;http://wiki.meego.com/MeeGo_Conference_2010/Early_Bird_Events&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Maemo Coding Competition: voting open!</title>
        <link>https://www.andreagrandi.it/posts/maemo-coding-competition-voting-open/</link>
        <pubDate>Mon, 26 Jul 2010 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/maemo-coding-competition-voting-open/</guid>
        <description>&lt;h2 id=&#34;what-is-maemo-coding-competition&#34;&gt;What is Maemo Coding Competition?
&lt;/h2&gt;&lt;p&gt;This competition has been organized by Maemo Community for the Maemo
Community. Developer can work to an application and submit it for one of
the six categories available: Desktop, System &amp;amp; Utilities, Games,
Graphics &amp;amp; Multimedia, Location &amp;amp; Navigation, Other. Another category is
available too, and it&amp;rsquo;s for beginner developers. The competition entry
has now ended, but voting is open. You can find more information about
the competition, in the official wiki page:
&lt;a class=&#34;link&#34; href=&#34;http://wiki.maemo.org/Maemo_Coding_Competition_1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://wiki.maemo.org/Maemo_Coding_Competition_1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-can-i-vote&#34;&gt;How can I vote?**
&lt;/h2&gt;&lt;p&gt;Voting is available using a forum&amp;rsquo;s poll for each category. Every t.m.o.
user can give one vote for each category. Here&amp;rsquo;s the complete list of
polls:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Desktop: &lt;a class=&#34;link&#34; href=&#34;http://talk.maemo.org/showthread.php?p=760304&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://talk.maemo.org/showthread.php?p=760304&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;System &amp;amp; Utilities: &lt;a class=&#34;link&#34; href=&#34;http://talk.maemo.org/showthread.php?p=764039&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://talk.maemo.org/showthread.php?p=764039&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Games: &lt;a class=&#34;link&#34; href=&#34;http://talk.maemo.org/showthread.php?t=58990&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://talk.maemo.org/showthread.php?t=58990&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Graphics &amp;amp; Multimedia: &lt;a class=&#34;link&#34; href=&#34;http://talk.maemo.org/showthread.php?p=763679&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://talk.maemo.org/showthread.php?p=763679&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Location &amp;amp; Navigation: &lt;a class=&#34;link&#34; href=&#34;http://talk.maemo.org/showthread.php?t=58964&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://talk.maemo.org/showthread.php?t=58964&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other: &lt;a class=&#34;link&#34; href=&#34;http://talk.maemo.org/showthread.php?t=59038&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://talk.maemo.org/showthread.php?t=59038&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Beginners: &lt;a class=&#34;link&#34; href=&#34;http://talk.maemo.org/showthread.php?t=59074&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://talk.maemo.org/showthread.php?t=59074&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;p.s:&lt;/strong&gt; I partecipate in the &lt;strong&gt;Graphics &amp;amp; Multimedia&lt;/strong&gt; category with
two applications: &lt;a class=&#34;link&#34; href=&#34;http://maemo.org/packages/view/lastgo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;LastGo&lt;/strong&gt;&lt;/a&gt;
and &lt;a class=&#34;link&#34; href=&#34;http://maemo.org/packages/view/msoma/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;mSoma&lt;/strong&gt;&lt;/a&gt;. Please at least
test them and let me know what do you think about!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Announcing LastGo: Maemo/MeeGo client for Last.fm</title>
        <link>https://www.andreagrandi.it/posts/announcing-lastgo-maemomeego-client-for-last-fm/</link>
        <pubDate>Fri, 16 Jul 2010 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/announcing-lastgo-maemomeego-client-for-last-fm/</guid>
        <description>&lt;p&gt;While I&amp;rsquo;m still working to
&lt;a class=&#34;link&#34; href=&#34;%7bfilename%7d/2010/6-announcing-msoma-maemomeego-client-for-somafm.md&#34; &gt;mSoma&lt;/a&gt;
with Lorenzo Bettini, I decided to start writing another application. I
needed to write something from scratch to learn better how to use
&lt;strong&gt;C++&lt;/strong&gt; and &lt;strong&gt;Qt&lt;/strong&gt; libraries, so I decided to write a client for
&lt;a class=&#34;link&#34; href=&#34;http://www.lastfm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Last.fm&lt;/a&gt; service. The application is still in
full development, but you can already taste it if you have
&lt;strong&gt;extras-devel&lt;/strong&gt; repository enabled on your &lt;strong&gt;N900&lt;/strong&gt;. At the moment it
only supports basic radio features: tuning user&amp;rsquo;s radio, playing a song,
skipping a song and displaying song informations.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;Screenshot-20100716-222755.png&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/announcing-lastgo-maemomeego-client-for-last-fm/Screenshot-20100716-222755.png&#34;
	width=&#34;800&#34;
	height=&#34;480&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;lastgo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Other basic Last.fm features like scrobbling, marking a song as loved or
banned ecc.. are not supported yet, but of course they&amp;rsquo;re planned for
the stable release. Please not that the application is still a bit
unstable even if it works for normal tasks.&lt;/p&gt;
&lt;p&gt;If you are a &lt;a class=&#34;link&#34; href=&#34;http://www.lastfm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Last.fm&lt;/strong&gt;&lt;/a&gt; subscriber and you
want to test it, please install it from &lt;strong&gt;extras-devel&lt;/strong&gt; repository and
send me your feedback.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; since it&amp;rsquo;s not allowed to use Last.fm API from a mobile phone
(due to API license restrictions) I cannot distribute a valid api key
with the application. I&amp;rsquo;m writing this software mainly to learn C++ and
Qt and for the future tablets and netbooks that will be based on MeeGo.
If you feel to assume the responsability, you can &lt;a class=&#34;link&#34; href=&#34;http://gitorious.org/lastgo/lastgo/blobs/raw/master/LastGo/apikey.xml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;download the api key
file&lt;/a&gt;
and import it using &amp;ldquo;Import Api Key&amp;rdquo; that you can find in the
application menu.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Twitter client for Maemo in Qt &#43; Python: call for developers and UI designers</title>
        <link>https://www.andreagrandi.it/posts/twitter-client-for-maemo-in-qt-python-call-for-developers-and-ui-designers/</link>
        <pubDate>Mon, 22 Feb 2010 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/twitter-client-for-maemo-in-qt-python-call-for-developers-and-ui-designers/</guid>
        <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;My name&amp;rsquo;s &lt;strong&gt;Andrea Grandi&lt;/strong&gt;, I&amp;rsquo;m italian and I&amp;rsquo;m a Maemo
user/lover/contributor since the &lt;strong&gt;Nokia 770&lt;/strong&gt;. I love &lt;strong&gt;Python&lt;/strong&gt; as
development language and few months ago I also gave some contributions
to the &lt;a class=&#34;link&#34; href=&#34;http://pymaemo.garage.maemo.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;PyMaemo&lt;/strong&gt;&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;In these days I had the idea to start writing a &lt;strong&gt;Twitter&lt;/strong&gt; client for
&lt;strong&gt;Maemo&lt;/strong&gt; with a precise direction in my mind. I&amp;rsquo;ll try to explain all
my reasons here. First of all I&amp;rsquo;ve to thank the author of
&lt;a class=&#34;link&#34; href=&#34;http://mauku.henrikhedberg.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Mauku&lt;/strong&gt;&lt;/a&gt; client. I use it since its
first version and I&amp;rsquo;m quite happy with it. Then, why do I want to write
another one?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Maemo&lt;/strong&gt; (MeeGo) is moving to &lt;strong&gt;Qt&lt;/strong&gt; and for this reason I&amp;rsquo;m going
to use Qt, while Mauku uses Gtk.```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&amp;rsquo;m learning Qt and what is better than writing a complete (but not
too complex) application to learn better?```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mauku is not free as lot of people could think. Reading the source
codeyou find this &amp;ldquo;You are NOT allowed to modify or redistribute the
source code.&amp;rdquo;, while I want to write a client and release it under
&lt;strong&gt;GPL2&lt;/strong&gt; or &lt;strong&gt;GPL3&lt;/strong&gt; license.```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mauku is not updated since some months and we have no news about it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I love Python and I like to write free software in this language.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I want to give to Maemo a stronger contribute.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;my-request-for-help&#34;&gt;My request for help
&lt;/h2&gt;&lt;p&gt;Before lot of people start writing their own client resulting in 4-5
twitter clients for Maemo, why don&amp;rsquo;t we join our strength and work to a
common project? I&amp;rsquo;m not a Python expert nor a Qt one, but I&amp;rsquo;ve some
experience as project/team leader and since this is not a complex
project, I would be glad to lead it. So, I&amp;rsquo;m looking for Python
developers, Qt developers, UI designers and whoever want to contribute
to this project. I still have to find a good name and logo for this
application.&lt;/p&gt;
&lt;p&gt;Who want to help me?&lt;/p&gt;
</description>
        </item>
        <item>
        <title>UX meets Code hackfest in December @ Barcelona: confirmed!</title>
        <link>https://www.andreagrandi.it/posts/ux-meets-code-hackfest-in-december-barcelona-confirmed/</link>
        <pubDate>Tue, 03 Nov 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/ux-meets-code-hackfest-in-december-barcelona-confirmed/</guid>
        <description>&lt;p&gt;&lt;strong&gt;Quim Gil&lt;/strong&gt; just confirmed the &lt;strong&gt;UX hackfest&lt;/strong&gt; in &lt;strong&gt;Barcelona&lt;/strong&gt; for
&lt;strong&gt;4, 5, 6 december&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;http://talk.maemo.org/showthread.php?t=33719&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://talk.maemo.org/showthread.php?t=33719&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-is-ux-hackfest&#34;&gt;What is UX hackfest?
&lt;/h2&gt;&lt;p&gt;It&amp;rsquo;s a three days meeting for Maemo developers, UX experts and people
who want to learn about designing good user interfaces.&lt;/p&gt;
&lt;h2 id=&#34;when&#34;&gt;When?**
&lt;/h2&gt;&lt;p&gt;On 4, 5, 6 december 2009&lt;/p&gt;
&lt;h2 id=&#34;where&#34;&gt;Where?
&lt;/h2&gt;&lt;p&gt;Barcelona, Spain. The exact location has still to be confirmed, but it
should be &lt;a class=&#34;link&#34; href=&#34;http://citilab.eu&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://citilab.eu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##Â How many people invited?**&lt;br&gt;
About 50 people invited (Maemo developers, UX experts, ecc&amp;hellip;.)&lt;/p&gt;
&lt;p&gt;If you are a Maemo developer and you have good user interface designer
skills, this is the place for you.&lt;/p&gt;
&lt;p&gt;If you are a Maemo developer and you are not a UX expert, this IS anyway
the place for you: you&amp;rsquo;ll have the possibility to talk with experts and
improve your knowledge about UI design.&lt;/p&gt;
&lt;p&gt;Anyone interested, please join the discussion here:
&lt;a class=&#34;link&#34; href=&#34;http://talk.maemo.org/showthread.php?t=33719&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://talk.maemo.org/showthread.php?t=33719&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 3/11/2009 - 16:00:&lt;/strong&gt; a wiki page with all information has been
created here: &lt;a class=&#34;link&#34; href=&#34;http://wiki.maemo.org/Maemo-Barcelona_Long_Weekend&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://wiki.maemo.org/Maemo-Barcelona_Long_Weekend&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;please add your name/data&lt;/strong&gt; to the page if you requested to join the
UX hackfest.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Writing Python bindings of existing C libraries â (3) â Building and Installing with distutils</title>
        <link>https://www.andreagrandi.it/posts/writing-python-bindings-of-existing-c-libraries-building-and-installing-with-distutils/</link>
        <pubDate>Thu, 13 Aug 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/writing-python-bindings-of-existing-c-libraries-building-and-installing-with-distutils/</guid>
        <description>&lt;p&gt;In the last post of this series, we saw how to write a simple binding
and we finished to build and install it manually. This is of course not
a good way to manage the building/installation procedure.&lt;/p&gt;
&lt;p&gt;In Python we can use a library called &lt;strong&gt;distutils&lt;/strong&gt; that let us to
automatize the building and installing process. I&amp;rsquo;ll use the &lt;strong&gt;foo&lt;/strong&gt;
source code to create the package, so it will be easier to understand.&lt;/p&gt;
&lt;h2 id=&#34;using-distutils&#34;&gt;Using distutils
&lt;/h2&gt;&lt;p&gt;All we have to do is to write a &lt;strong&gt;setup.py&lt;/strong&gt; file similar to this one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;distutils.core&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Extension&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;foomodule&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Extension&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sources&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;foo.c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;setup&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Foo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;1.0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;This is a package for Foo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ext_modules&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foomodule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;As you can see, we have to first import needed modules with: &lt;strong&gt;from
distutils.core import setup, Extension&lt;/strong&gt;&lt;br&gt;
then we create an entry for each module we have (in this case just one,
&amp;ldquo;foomodule&amp;rdquo;). We then call the &lt;strong&gt;setup()&lt;/strong&gt; method passing it all the
parameters and our &lt;strong&gt;setup.py&lt;/strong&gt; is complete.&lt;/p&gt;
&lt;h2 id=&#34;building-and-installing&#34;&gt;Building and installing
&lt;/h2&gt;&lt;p&gt;To test it we can try to build the package in this way:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python2.5 setup.py build
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;if we want to install the module in our system:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python2.5 setup.py install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Official Python documentation: &lt;a class=&#34;link&#34; href=&#34;http://docs.python.org/extending/building.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://docs.python.org/extending/building.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>PyMaemo (Python for Maemo) second beta release for Fremantle</title>
        <link>https://www.andreagrandi.it/posts/pymaemo-python-for-maemo-second-beta-release-for-fremantle/</link>
        <pubDate>Mon, 10 Aug 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/pymaemo-python-for-maemo-second-beta-release-for-fremantle/</guid>
        <description>&lt;p&gt;The &lt;strong&gt;PyMaemo&lt;/strong&gt; team is pleased to announce the second beta release of
PyMaemo for &lt;strong&gt;Fremantle&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;This new release is available through the &lt;strong&gt;extras-devel&lt;/strong&gt; repository,
see installation instructions in&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://pymaemo.garage.maemo.org/sdk_installation.html#fremantle&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://pymaemo.garage.maemo.org/sdk_installation.html#fremantle&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-is-it&#34;&gt;What is it?
&lt;/h2&gt;&lt;p&gt;Python for Maemo (PyMaemo for short) main objective is to make possible
to use &lt;strong&gt;Python&lt;/strong&gt; programming language as the scripting and development
language for Maemo Platform, providing a better alternative for fast
prototyping and programming in Maemo environment besides the C
programming language.&lt;/p&gt;
&lt;p&gt;Python is for serious programming and to have fun. Python has a nice
syntax, it is easy to learn and powerful enough for a vast range of
applications, this is why we choose Python for Maemo.&lt;/p&gt;
&lt;h2 id=&#34;what-has-changed&#34;&gt;What has changed?
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;New packages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;python-mafw&lt;/strong&gt; (0.1-1maemo1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python bindings for the Media Application Framework [1]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Supported API is very basic at the moment, and there are some
bugs. Feedback is welcome!```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;python-hildondesktop&lt;/strong&gt; (0.0.3-1maemo1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python bindings for the home/status widgets API```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;python-notify&lt;/strong&gt; (0.1.1-2maemo1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python bindings for libnotify```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;pyclutter&lt;/strong&gt; (0.8.0-1maemo2)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python bindings for the Clutter API [2]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Experimental package, waiting for developer feedback&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Updated&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;packages&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gnome&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.26&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maemo1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;major&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;upgrade&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matching&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;current&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Debian&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;testing&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;release&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;feedback&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;welcome&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;replaces&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fairly&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;old&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;version&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pygtk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maemo7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Enable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;glade&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;support&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;python2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maemo1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Updated&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;latest&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;upstream&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;release&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;support&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;layout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;deb&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;central&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.6&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;11.1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maemo1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dependency&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;needed&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setuptools&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;defaults&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maemo3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Change&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PREVVER&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;debian&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;avoiding&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;old&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minimal&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;versions&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;had&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/bin/python&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;thus&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conflicts&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;with&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minimal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hildo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.9&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maemo10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lots&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bug&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fixes&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setuptools&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.6&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c9&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maemo1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;support&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;layout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;deb&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Bugs fixed:&lt;/strong&gt; MB#4530 [3], MB#4450 [4], MB#4629 [5], MB#4628 [6],&lt;br&gt;
MB#4647 [7], MB#4632 [8], Â MB#4646 [9], Â MB#4750 [10],Â MB#4749 [11],&lt;br&gt;
MB#4791 [12]&lt;/p&gt;
&lt;p&gt;##Â Known issues&lt;/p&gt;
&lt;p&gt;MB#4782 [13]: osso.Context causes segmentation fault&lt;br&gt;
MB#4821 [14]: Cannot create HildonTouchSelector with single text column&lt;br&gt;
MB#4824 [15]: python-mafw: source_browsing.py example does not work&lt;br&gt;
MB#4839 [16]: python-mafw: mafw.Registry lacks list_plugins() method&lt;br&gt;
MB#4849 [17]: python-mafw: MafwPluginDescriptorPublic structure is missing&lt;/p&gt;
&lt;p&gt;We will not migrate to python2.6 in fremantle due to a (unresolved) bug
(MB#4734 [18]), where a core SDK package explicitly conflicts with
python &amp;gt;= 2.6, preventing any further upgrades from the 2.5.x series.&lt;/p&gt;
&lt;p&gt;This release is supposed to be compatible with previous releases. If you
have any issues regarding building your Python application on Fremantle,
feel free to report it on the pymaemo-developers mailing list [19].&lt;/p&gt;
&lt;h2 id=&#34;acknowledgments&#34;&gt;Acknowledgments
&lt;/h2&gt;&lt;p&gt;Thanks to everybody who helped making this release possible.&lt;/p&gt;
&lt;p&gt;Bug reports, as always, should go to our Bugzilla [20]. Use the
&lt;strong&gt;pymaemo-developers&lt;/strong&gt; mailing list for help, feedback or suggestions.&lt;/p&gt;
&lt;p&gt;##Â References&lt;/p&gt;
&lt;p&gt;[1] &lt;a class=&#34;link&#34; href=&#34;https://garage.maemo.org/projects/mafw/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://garage.maemo.org/projects/mafw/&lt;/a&gt;&lt;br&gt;
[2] &lt;a class=&#34;link&#34; href=&#34;http://www.clutter-project.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.clutter-project.org/&lt;/a&gt;&lt;br&gt;
[3] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4530&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4530&lt;/a&gt;&lt;br&gt;
[4] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4450&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4450&lt;/a&gt;&lt;br&gt;
[5] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4629&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4629&lt;/a&gt;&lt;br&gt;
[6] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4628&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4628&lt;/a&gt;&lt;br&gt;
[7] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4647&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4647&lt;/a&gt;&lt;br&gt;
[8] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4632&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4632&lt;/a&gt;&lt;br&gt;
[9] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4646&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4646&lt;/a&gt;&lt;br&gt;
[10] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4750&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4750&lt;/a&gt;&lt;br&gt;
[11] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4749&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4749&lt;/a&gt;&lt;br&gt;
[12] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4791&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4791&lt;/a&gt;&lt;br&gt;
[13] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4782&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4782&lt;/a&gt;&lt;br&gt;
[14] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4821&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4821&lt;/a&gt;&lt;br&gt;
[15] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4824&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4824&lt;/a&gt;&lt;br&gt;
[16] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4839&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4839&lt;/a&gt;&lt;br&gt;
[17] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4849&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4849&lt;/a&gt;&lt;br&gt;
[18] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/show_bug.cgi?id=4734&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/show_bug.cgi?id=4734&lt;/a&gt;&lt;br&gt;
[19] &lt;a class=&#34;link&#34; href=&#34;https://garage.maemo.org/mailman/listinfo/pymaemo-developers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://garage.maemo.org/mailman/listinfo/pymaemo-developers&lt;/a&gt;&lt;br&gt;
[20] &lt;a class=&#34;link&#34; href=&#34;https://bugs.maemo.org/enter_bug.cgi?product=PyMaemo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bugs.maemo.org/enter_bug.cgi?product=PyMaemo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;credits&#34;&gt;Credits
&lt;/h2&gt;&lt;p&gt;This post was possible thanks to &lt;strong&gt;Anderson Lizardo&lt;/strong&gt;, from PyMaemo
team, who posted these informations on pymaemo-developers mailing list.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Writing Python bindings of existing C libraries â (2) â A simple example of binding</title>
        <link>https://www.andreagrandi.it/posts/writing-python-bindings-of-existing-c-libraries-a-simple-example-of-binding/</link>
        <pubDate>Thu, 06 Aug 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/writing-python-bindings-of-existing-c-libraries-a-simple-example-of-binding/</guid>
        <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;As I promised in the preceding post, I&amp;rsquo;ll provide a very easy example of
a python binding. Let&amp;rsquo;s suppose we don&amp;rsquo;t want to use the methods
included in Python to sum two integer values and we want to do it in C
and then call the add method from a python script. I&amp;rsquo;ll write the
complete source code first and then I&amp;rsquo;ll explain all the parts of it.&lt;/p&gt;
&lt;h2 id=&#34;source-code&#34;&gt;Source Code
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;Python.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PyObject&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;foo_add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PyObject&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PyObject&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PyArg_ParseTuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ii&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Py_BuildValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;i&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PyMethodDef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo_methods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;add&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PyCFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo_add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;METH_VARARGS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PyMODINIT_FUNC&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;initfoo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Py_InitModule3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo_methods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;My first extension module.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;how-it-works&#34;&gt;How it works
&lt;/h2&gt;&lt;p&gt;First of all we have to include &lt;strong&gt;Python.h&lt;/strong&gt; in our C file. This allows
us to write an extension for Python language. To be able to include this
header, we must have the python development packages installed in our
system. For example in Debian based distributions we can install them
with this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install python2.5-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Every module has at least three parts. In the first part we write
methods we want to call from the final python module: in this case we
have a method called &lt;strong&gt;foo_add&lt;/strong&gt; where &amp;ldquo;&lt;em&gt;foo&lt;/em&gt;&amp;rdquo; is the name of the
module and &amp;ldquo;&lt;em&gt;add&lt;/em&gt;&amp;rdquo; the name of the method. Every method is declared as
&lt;strong&gt;static PyObject&lt;/strong&gt;. The method does anything particular except calling
PyArg_ParseTuple to validate the input (we&amp;rsquo;ll discuss this later),
adding the two passed numbers and returning the result.&lt;/p&gt;
&lt;p&gt;In the second part we have something like a dictionary, defined as
static &lt;strong&gt;PyMethodDef&lt;/strong&gt; and called foo_methods (where &amp;ldquo;foo&amp;rdquo; again is the
name of the module). For each method we want to expose in our python
module, we have to add something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;add&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PyCFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo_add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;METH_VARARGS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;where &amp;ldquo;&lt;em&gt;add&lt;/em&gt;&amp;rdquo; is the name of the method we want to be visible in our
module, &lt;em&gt;(PyCFunction)foo_add&lt;/em&gt; is a pointer to our foo_add method,
implemented in the C module, METH_VARARGS means that we want to pass
some parameters to the function and the last one would be the
description of the method (we can leave it NULL if we want).&lt;/p&gt;
&lt;p&gt;Third part allows us to register the defined method/s and the module:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Py_InitModule3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo_methods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;My first extension module.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;parsing-parameters&#34;&gt;Parsing Parameters
&lt;/h3&gt;&lt;p&gt;The &lt;strong&gt;PyArg_ParseTuple&lt;/strong&gt; function extracts arguments from the
&lt;strong&gt;PyObject&lt;/strong&gt; passed as parameter to the current method and follows
almost the sscanf syntax to parse parameters (in this case we had &lt;em&gt;&amp;ldquo;ii&amp;rdquo;&lt;/em&gt;
for two integers). You can fin the complete reference here:
&lt;a class=&#34;link&#34; href=&#34;http://docs.python.org/c-api/arg.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://docs.python.org/c-api/arg.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##Â Building and installing&lt;/p&gt;
&lt;p&gt;To build the module, we have to be in the source directory and execute
this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc -shared -I/usr/include/python2.5 foo.c -o foo.so
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;then we&amp;rsquo;ve to copy the generated module to the python&amp;rsquo;s modules
directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp foo.so /usr/lib/python2.5/site-packages/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;##Â Testing our module&lt;/p&gt;
&lt;p&gt;Testing the module is really easy. We&amp;rsquo;ve to start a python shell or
create a python script with the following source code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;foo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;if all is working fine, the printed result should be &lt;strong&gt;5&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://docs.python.org/extending/extending.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://docs.python.org/extending/extending.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.wrox.com/WileyCDA/WroxTitle/productCd-0764596543.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.wrox.com/WileyCDA/WroxTitle/productCd-0764596543.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>MAFW and Python: asking for developers feedback</title>
        <link>https://www.andreagrandi.it/posts/mafw-and-python-asking-for-developers-feedback/</link>
        <pubDate>Wed, 05 Aug 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/mafw-and-python-asking-for-developers-feedback/</guid>
        <description>&lt;p&gt;MAFW is a new multimedia framework that will be used in Fremantle.&lt;/p&gt;
&lt;p&gt;The PyMaemo team is currently working on writing bindings for Python&lt;br&gt;
language for this library and at the moment we&amp;rsquo;ve released a 0.1&lt;br&gt;
version of python-mafw that you can install directly from Scratchbox&lt;br&gt;
repository.&lt;/p&gt;
&lt;p&gt;Not all the methods are implemented (you can manage the Registry and&lt;br&gt;
the Playlist, but nothing more), because even if we&amp;rsquo;re using codegen&lt;br&gt;
to generate bindings (and it&amp;rsquo;s helping us a lot), we&amp;rsquo;ve seen that at&lt;br&gt;
least 30-40 methods have to be overridden by hand so it&amp;rsquo;s taking us&lt;br&gt;
more time than we expected and we&amp;rsquo;re trying to organize how to&lt;br&gt;
continue this work.&lt;/p&gt;
&lt;p&gt;We would like to get feedback from python application developers and&lt;br&gt;
also from C application developers that are currently using MAFW so we&lt;br&gt;
can work on a &amp;ldquo;roadmap&amp;rdquo; that reflects what developers want:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;What are the functionalities you&amp;rsquo;re using in your application that
you think they cannot miss in the Python binding?```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have you already started using MAFW or even better python-mafw to
develop something?```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What is the currently missing method/methods you would like to be
implemented first?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Come on developers! We&amp;#39;re waiting for your feedback :)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Writing Python bindings of existing C libraries - (1) - Introduction</title>
        <link>https://www.andreagrandi.it/posts/writing-python-bindings-of-existing-c-libraries-1-introduction/</link>
        <pubDate>Mon, 03 Aug 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/writing-python-bindings-of-existing-c-libraries-1-introduction/</guid>
        <description>&lt;p&gt;This summer I&amp;rsquo;m having the pleasure of working in
&lt;a class=&#34;link&#34; href=&#34;http://www.igalia.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Igalia&lt;/strong&gt;&lt;/a&gt; (a spanish free software company)
for a couple of months and they assigned me to an interesting project:
developing &lt;strong&gt;Python bindings&lt;/strong&gt; for &lt;strong&gt;MAFW&lt;/strong&gt; library (a &lt;strong&gt;Maemo&lt;/strong&gt;
multimedia library that will be used in &lt;strong&gt;Fremantle&lt;/strong&gt; release).&lt;/p&gt;
&lt;p&gt;Having the opportunity to work both with &lt;strong&gt;C&lt;/strong&gt; (yes, Python bindings are
almost C code) and &lt;strong&gt;Python&lt;/strong&gt; (it&amp;rsquo;s a good practice to write unittest of
all implemented methods) it&amp;rsquo;s a good way to improve my knowledges in
both languages and since I wasn&amp;rsquo;t able to find much documentation about
these kind of things, I&amp;rsquo;m going to share my own experiences.&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-binding&#34;&gt;What is a Binding?
&lt;/h2&gt;&lt;p&gt;A binding is a Python module, written in C language, that allows Python
developers to call functions from existing C libraries from their python
applications. It&amp;rsquo;s just like a &amp;ldquo;&lt;em&gt;bridge&lt;/em&gt;&amp;rdquo; from C world to Python one.&lt;/p&gt;
&lt;h2 id=&#34;why-writing-bindings&#34;&gt;Why writing bindings?
&lt;/h2&gt;&lt;p&gt;There are a couple of reasons to write python bindings instead of
writing a library in python language from scratch.&lt;/p&gt;
&lt;p&gt;First of all I don&amp;rsquo;t think is good duplicating code, so if a library
already exists and it&amp;rsquo;s written in C, why writing it again in another
language? There&amp;rsquo;s no reason. A lot of code already exist in C world and
all we have to do is to create a bridge with python world.&lt;/p&gt;
&lt;p&gt;Another good reason, in particular when a C library doesn&amp;rsquo;t exist yet,
is the fact that python code is slower than C code for some tasks (for
example multimedia codecs). In these cases is good to implement the core
library in C language and then create a python binding for it.&lt;/p&gt;
&lt;h2 id=&#34;coming-next&#34;&gt;Coming next
&lt;/h2&gt;&lt;p&gt;As the title of this post says, this is only an introduction to the
subjects I&amp;rsquo;m going to write about. If you have any particular request
about any argument you would like to read, please feel free to leave me
a comment. Next posts will talk about these things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A simple example of binding:&lt;/strong&gt; I&amp;rsquo;ll write a simple library in C
language and I&amp;rsquo;ll show how to create the relative python binding,
providing complete source code and an example for python developers.```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Building and installing python bindings with distutils:&lt;/strong&gt; I&amp;rsquo;ll
explain how to use &lt;strong&gt;distutils&lt;/strong&gt; to build and install the binding
(using the well know method &amp;ldquo;python setup.py install&amp;rdquo;).```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Defining new types:&lt;/strong&gt; this post will be about how to write new
types in C language and being able to use them from python code.```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Using codegen to write bindings:&lt;/strong&gt; I&amp;rsquo;ll explain how to use
&lt;strong&gt;codegen&lt;/strong&gt; utils to automate lot of tasks, to generate the most
part of binding code and how to customize the generated code using
overrides.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>I officially joined the PyMaemo team</title>
        <link>https://www.andreagrandi.it/posts/i-officially-joined-the-pymaemo-team/</link>
        <pubDate>Sat, 25 Jul 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/i-officially-joined-the-pymaemo-team/</guid>
        <description>&lt;p&gt;This summer I&amp;rsquo;m working for 2 months at &lt;a class=&#34;link&#34; href=&#34;http://www.igalia.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Igalia&lt;/a&gt;,
a spanish free software company, and they assigned me the project of
writing a &lt;strong&gt;Python binding&lt;/strong&gt; for &lt;strong&gt;MAFW&lt;/strong&gt; (a new multimedia library that
will be included in &lt;strong&gt;Freemantle&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;After few days I discovered that
&lt;a class=&#34;link&#34; href=&#34;http://garage.maemo.org/projects/pymaemo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;PyMaemo&lt;/strong&gt;&lt;/a&gt; team was
already working to it, so I asked to join them and they accepted me!&lt;/p&gt;
&lt;p&gt;I really love Python language and since I think other developers love it
too, I think we should provide good bindings for every library available
in Maemo, so lot of developers can start writing their applications in
this language.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll work to this project full time until the first week of september,
so I hope to be able to learn a lot and to contribute as much as I can
to this project.&lt;/p&gt;
&lt;p&gt;If anyone else want to join PyMaemo team and help us to develop Python
bindings, I think he will be welcome!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Develop a GPS-aware application for the Nokia N810</title>
        <link>https://www.andreagrandi.it/posts/develop-a-gps-aware-application-for-the-nokia-n810/</link>
        <pubDate>Tue, 24 Feb 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/develop-a-gps-aware-application-for-the-nokia-n810/</guid>
        <description>&lt;p&gt;&lt;strong&gt;Paul Ferrill&lt;/strong&gt; has written a serie of three articles about writing a
GPS-aware application for the Nokia N810, using the Maemo SDK, Eclipse
and PluThon plugin.&lt;/p&gt;
&lt;p&gt;Here is the complete serie:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.ibm.com/developerworks/linux/library/l-gps-nokia1/index.html?S_TACT=105AGX03&amp;amp;S_CMP=EDU&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Develop a GPS-aware application for the Nokia N810, Part 1: Development environment:&lt;/a&gt;
Learn how to configure a development environment targeted at the
Nokia N810 Internet Tablet, including setting up Eclipse on a target
development machine for the Python language.```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.ibm.com/developerworks/linux/library/l-gps-nokia2/index.html?S_TACT=105AGX03&amp;amp;S_CMP=EDU&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Develop a GPS-aware application for the Nokia N810, Part 2: Consider your options:&lt;/a&gt;
Discover the details of code design, library selection, unit
testing, and user interface choices that make the most sense for
you.&lt;a class=&#34;link&#34; href=&#34;http://www.ibm.com/developerworks/linux/library/l-gps-nokia2/index.html?S_TACT=105AGX03&amp;amp;S_CMP=EDU&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;/a&gt;```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.ibm.com/developerworks/linux/library/l-gps-nokia3/index.html?S_TACT=105AGX03&amp;amp;S_CMP=EDU&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Develop a GPS-aware application for the Nokia N810, Part 3: Finish the job&lt;/a&gt;:
In this last of three installments, you&amp;rsquo;ll put the final touches to
the GPS trip tracker and get it ready for release.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Convertire i file WMA in MP3 sotto Linux</title>
        <link>https://www.andreagrandi.it/posts/convertire-i-file-wma-in-mp3-sotto-linux/</link>
        <pubDate>Sun, 22 Feb 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/convertire-i-file-wma-in-mp3-sotto-linux/</guid>
        <description>&lt;p&gt;Se abbiamo dei file audio in formato &lt;strong&gt;.wma&lt;/strong&gt; e li vogliamo convertire
in formato &lt;strong&gt;.mp3&lt;/strong&gt; utilizzando Linux, Ã¨ sufficiente creare un piccolo
script in &lt;strong&gt;bash&lt;/strong&gt; che facendo uso di &lt;strong&gt;mplayer&lt;/strong&gt; e &lt;strong&gt;lame&lt;/strong&gt; provveda a
convertire tutti i file che si trovano all&amp;rsquo;interno di una certa
directory.&lt;/p&gt;
&lt;p&gt;Creiamo un file chiamato &lt;strong&gt;wma2mp3.sh&lt;/strong&gt; con all&amp;rsquo;interno il seguente
script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;current_directory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#remove spaces  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in *.wma&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; mv &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tr &lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#remove uppercase  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in *.&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Ww&lt;span class=&#34;o&#34;&gt;][&lt;/span&gt;Mm&lt;span class=&#34;o&#34;&gt;][&lt;/span&gt;Aa&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; mv &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tr &lt;span class=&#34;s1&#34;&gt;&amp;#39;[A-Z]&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[a-z]&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#Rip with Mplayer / encode with LAME  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in *.wma &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; mplayer -vo null -vc dummy -af &lt;span class=&#34;nv&#34;&gt;resample&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;44100&lt;/span&gt; -ao
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pcm:waveheader &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; lame -m s audiodump.wav -o &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#convert file names&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in *.wma&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; mv &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;`basename &amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; .wma`.mp3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm audiodump.wav  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;a questo punto basta mettere lo script nella cartella dove ci sono i
file .wma, dare i permessi di esecuzione a tale file (&lt;strong&gt;chmod +x
wma2mp3.sh&lt;/strong&gt;) ed eseguirlo con &lt;strong&gt;&lt;code&gt;./wma2mp3.sh&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;fonte-httpwwwlinuxquestionsorglinuxanswersapplications_gui_multimediaconvert_wma_to_mp3&#34;&gt;Fonte: &lt;a class=&#34;link&#34; href=&#34;http://www.linuxquestions.org/linux/answers/Applications_GUI_Multimedia/Convert_WMA_to_MP3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.linuxquestions.org/linux/answers/Applications_GUI_Multimedia/Convert_WMA_to_MP3&lt;/a&gt;*
&lt;/h3&gt;</description>
        </item>
        <item>
        <title>Maemo on Google Summer of Code 2009</title>
        <link>https://www.andreagrandi.it/posts/maemo-on-google-summer-of-code-2009/</link>
        <pubDate>Wed, 11 Feb 2009 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/maemo-on-google-summer-of-code-2009/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/maemo-on-google-summer-of-code-2009/soc08300x300_white.jpg&#34;
	width=&#34;300&#34;
	height=&#34;300&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gsoc logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This year the &lt;a class=&#34;link&#34; href=&#34;http://www.maemo.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Maemo&lt;/strong&gt;&lt;/a&gt; community will try to join the
&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;http://code.google.com/soc&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google Summer of code&lt;/a&gt;&lt;/strong&gt; program again.
Google Summer of code can be a very good opportunity for the Maemo
Community, and can also give a lots of good things, like new
projects/features and new people developing for Maemo.&lt;/p&gt;
&lt;p&gt;In order to apply to Summer of code, we need help from the community, we
need project ideas, mentors and interested students. The mentor
organizations submissions starts in &lt;strong&gt;March 9&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There is a &lt;a class=&#34;link&#34; href=&#34;http://wiki.maemo.org/GSoC_2009/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wiki page&lt;/a&gt; with some
information regarding the Maemo participation in GSoC, feel free to add
more information to the pages, especially for people that participated
in previous editions of GSoC.&lt;/p&gt;
&lt;p&gt;In 2007 some Nokia employee offered their help as mentors and backup
mentors, will be fine if that happens this year too.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; I reported this news thanks to &lt;strong&gt;Valerio Valerio&lt;/strong&gt; who wrote
this on &lt;strong&gt;maemo-community&lt;/strong&gt; mailing list.&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Android e Developer Device Program: come al solito l&#39;Italia Ã¨ di serie B</title>
        <link>https://www.andreagrandi.it/posts/android-e-developer-device-program-come-al-solito-litalia-e-di-serie-b/</link>
        <pubDate>Sat, 06 Dec 2008 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/android-e-developer-device-program-come-al-solito-litalia-e-di-serie-b/</guid>
        <description>&lt;p&gt;Google ha appena &lt;a class=&#34;link&#34; href=&#34;http://code.google.com/android/dev-devices.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;annunciato&lt;/a&gt; che
metterÃ  a disposizione per gli sviluppatori, delle versioni particolari
del G1, quello che tutti ormai conoscono come il nuovo telefono
cellulare di Google. Il G1 per sviluppatori costa circa &lt;strong&gt;399$&lt;/strong&gt; ed Ã¨
SIM-unlocked, rendendo quindi possibile l&amp;rsquo;utilizzo con qualsiasi
operatore di telefonia mobile.&lt;/p&gt;
&lt;p&gt;Il dispositivo &lt;strong&gt;non sara&amp;rsquo; disponibile&lt;/strong&gt; da subito &lt;strong&gt;in tutti i paesi&lt;/strong&gt;,
ma solo in 18 che Google ha selezionato: USA, Inghilterra, Germania,
Giappone, India, Canada, Francia, Taiwan, Spagna, Australia, Singapore,
Svizzera, Olanda, Austria, Svezia, Finlandia, Polonia e Ungheria.&lt;/p&gt;
&lt;p&gt;Ebbene si: persino Polonia e Ungheria hanno avuto la precedenza rispetto
all&amp;rsquo;Italia! Prima veniamo esclusi dal concorso per lo sviluppo di
applicazioni per Android (a causa di problemi legati alla nostra
burocrazia), e adesso questo.&lt;/p&gt;
&lt;p&gt;Noi poveri italiani cosa possiamo fare? Assolutamente niente, se non
cercare di far acquistare il G1 a qualche amico che si trova all&amp;rsquo;estero.
Questo perÃ² non porterÃ  mai alla creazione di una community italiana di
sviluppatori per Android.&lt;/p&gt;
&lt;p&gt;Una piccola nota, che non c&amp;rsquo;entra specificatamente con l&amp;rsquo;Italia, ma che
ci tengo a fare notare Ã¨ che Google, dal suo comunicato, &lt;strong&gt;sembra
ammettere che sul G1 ufficiale possono girare solo le applicazioni che
sono state scaricate dal Market di Android&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Note that Android Dev Phone 1 devices are &lt;em&gt;not&lt;/em&gt; intended for
non-developer end users. Since the devices can be configured with
system software not provided by or supported by Google or any other
company, end users operate these devices at their own risk.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ovvero (tradotto molto liberamente): i dispositivi per sviluppatori non
sono destinati agli utenti finali. Su questi telefoni Ã¨ possibile
installare software non fornito o supportato da Google o da altre
compagnie, gli utenti li utilizzeranno a loro rischio e pericolo.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
