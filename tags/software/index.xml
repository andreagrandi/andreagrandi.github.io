<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Software on Andrea Grandi</title>
        <link>https://www.andreagrandi.it/tags/software/</link>
        <description>Recent content in Software on Andrea Grandi</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 07 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreagrandi.it/tags/software/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Building a healthy and sustainable funding model for open source software</title>
        <link>https://www.andreagrandi.it/posts/building-healthy-sustainable-funding-model-opensource-software/</link>
        <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/building-healthy-sustainable-funding-model-opensource-software/</guid>
        <description>&lt;p&gt;If you work in software development, chances are high that your company is &lt;strong&gt;using open source software to build their products&lt;/strong&gt;. Nowadays open source software is nearly everywhere: it can be included in your operating system, in commercial software or it can be responsible for hosting your website or your application.&lt;/p&gt;
&lt;p&gt;In this post I will focus mainly on &lt;strong&gt;languages, libraries and frameworks&lt;/strong&gt; which are being used to build software applications, because they are the components I&amp;rsquo;m most familiar with.&lt;/p&gt;
&lt;h2 id=&#34;context&#34;&gt;Context
&lt;/h2&gt;&lt;p&gt;Suppose your company needs to build a new software service which is going to be offered as an API. You will need to pick a &lt;strong&gt;language&lt;/strong&gt; (for example &lt;strong&gt;Python&lt;/strong&gt;), possibly &lt;strong&gt;a web framework&lt;/strong&gt; (like &lt;strong&gt;Django&lt;/strong&gt;, &lt;strong&gt;Flask&lt;/strong&gt; or &lt;strong&gt;FastAPI&lt;/strong&gt;) and some additional &lt;strong&gt;libraries&lt;/strong&gt; (like &lt;strong&gt;SQLAlchemy&lt;/strong&gt;, &lt;strong&gt;requests&lt;/strong&gt;, etc&amp;hellip;) to build your service.&lt;/p&gt;
&lt;p&gt;Usually developers will pick the tools they are most familiar with, or the tools which are most popular in the community, but very few people ask themselves: &lt;strong&gt;who is behind these tools? Who is maintaining them? Who is fixing the bugs? Who is adding new features?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;And most importantly: &lt;strong&gt;how are these people being paid?&lt;/strong&gt; (You are not expecting them to work for free, right? üòè)&lt;/p&gt;
&lt;h2 id=&#34;the-current-funding-models&#34;&gt;The current funding models
&lt;/h2&gt;&lt;p&gt;Some languages and frameworks have a no profit foundation behind them (ie: &lt;a class=&#34;link&#34; href=&#34;https://www.python.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt; has &lt;a class=&#34;link&#34; href=&#34;https://www.python.org/psf-landing/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Python Software Foundation&lt;/strong&gt;&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://www.djangoproject.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Django&lt;/strong&gt;&lt;/a&gt; has &lt;a class=&#34;link&#34; href=&#34;https://www.djangoproject.com/foundation/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Django Software Foundation&lt;/strong&gt;&lt;/a&gt;, etc.) which are responsible for managing the project and the community around it.&lt;/p&gt;
&lt;p&gt;They can receive a lot of &lt;strong&gt;independent donations&lt;/strong&gt; or being &lt;strong&gt;funded by big companies&lt;/strong&gt; like Google or Microsoft (ie: &lt;strong&gt;Guido Van Rossum&lt;/strong&gt;, the creator of &lt;strong&gt;Python&lt;/strong&gt;, was previously working for Google and now he is currently working for Microsoft).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Big companies&lt;/strong&gt; (those earning billions every year) usually don&amp;rsquo;t have any problem spending some money to sustain the tools they also use, but this also means they &lt;strong&gt;can have a big influence on the direction&lt;/strong&gt; the project is taking.&lt;/p&gt;
&lt;p&gt;Some smaller projects (like &lt;a class=&#34;link&#34; href=&#34;https://fastapi.tiangolo.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FastAPI&lt;/a&gt;) are being funded entirely by &lt;strong&gt;independent donations&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://fastapi.tiangolo.com/fastapi-people/#sponsors&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://fastapi.tiangolo.com/fastapi-people/#sponsors&lt;/a&gt; but this is not a sustainable model for the long term because there is no guarantee that the donations will keep coming.&lt;/p&gt;
&lt;h3 id=&#34;the-venture-capital-model&#34;&gt;The Venture Capital model
&lt;/h3&gt;&lt;p&gt;A different way to fund open source projects is through private investors or &lt;strong&gt;venture capital&lt;/strong&gt;. For example &lt;a class=&#34;link&#34; href=&#34;https://pydantic.dev&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;pydantic&lt;/code&gt;&lt;/a&gt; (a library which is also used by FastAPI) has recently received a &lt;strong&gt;$4.7 million investment&lt;/strong&gt; from a few VCs: &lt;a class=&#34;link&#34; href=&#34;https://techcrunch.com/2023/02/16/sequoia-backs-open-source-data-validation-framework-pydantic-to-commercialize-with-cloud-services/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://techcrunch.com/2023/02/16/sequoia-backs-open-source-data-validation-framework-pydantic-to-commercialize-with-cloud-services/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Another quite recent example (which has sparked a lot of discussions in the Python community) is the case of &lt;a class=&#34;link&#34; href=&#34;https://astral.sh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Astral&lt;/strong&gt;&lt;/a&gt;, a small company backed by VCs which are developing a couple of tools for the Python community: &lt;a class=&#34;link&#34; href=&#34;https://astral.sh/ruff&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;ruff&lt;/code&gt;&lt;/a&gt; which is a code linter and &lt;a class=&#34;link&#34; href=&#34;https://github.com/astral-sh/uv&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;uv&lt;/code&gt;&lt;/a&gt; which is a Python package and project manager written in &lt;a class=&#34;link&#34; href=&#34;https://www.rust-lang.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;the-opinions-from-the-community&#34;&gt;The opinions from the Community
&lt;/h3&gt;&lt;p&gt;With specific regard to &lt;strong&gt;Astra&lt;/strong&gt;, there is an &lt;strong&gt;interesting conversation&lt;/strong&gt; happening in a &lt;a class=&#34;link&#34; href=&#34;https://social.jacobian.org/@jacob@jacobian.org@jacob@jacobian.orgian.org/113091418140504394&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mastodon thread&lt;/a&gt;, and from what I&amp;rsquo;ve seen, the &lt;strong&gt;opinions are quite divided&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Some of them are concerned because this company is using &lt;strong&gt;Rust&lt;/strong&gt; to implement these tools. This could cut Python developers out from directly contributing to the project, because they would need to learn a new language to do so.&lt;/p&gt;
&lt;p&gt;Others are concerned because the company is backed by &lt;strong&gt;VCs&lt;/strong&gt;, and they &lt;strong&gt;could cut funds&lt;/strong&gt; at any time, leaving the project in an abandoned state. This of course is a valid concern, but since the project is open source, the community could fork it and continue the development.&lt;/p&gt;
&lt;p&gt;Another issue that seems to be mentioned by a few people is the fact that Astral doesn&amp;rsquo;t seem to have a &lt;strong&gt;clear business model&lt;/strong&gt; (at least until the time of this article). When asked directly, they have been vague about how they intend to monetize their projects and for this reason some &lt;strong&gt;people are being cautious before adopting their tools&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Some people are being optimistic instead and looking at this funding as a &lt;strong&gt;good thing&lt;/strong&gt;, because observing how quickly &lt;code&gt;ruff&lt;/code&gt; and &lt;code&gt;uv&lt;/code&gt; have evolved in so little time, they recognise &lt;strong&gt;a lot can be done when people are allowed to work full time&lt;/strong&gt; on a project.&lt;/p&gt;
&lt;h3 id=&#34;my-own-opinion&#34;&gt;My own opinion
&lt;/h3&gt;&lt;p&gt;In the specific case of &lt;code&gt;ruff&lt;/code&gt; and &lt;code&gt;uv&lt;/code&gt;, I personally don&amp;rsquo;t have anything against the fact that they are written in Rust. My mantra is &lt;strong&gt;&amp;ldquo;use the right tool for the job&amp;rdquo;&lt;/strong&gt;, and if Rust is the right tool for the job (according to their tests, linting the whole CPython code base &lt;strong&gt;only takes 0.16s&lt;/strong&gt; with &lt;code&gt;ruff&lt;/code&gt;, while it takes &lt;strong&gt;11.63s&lt;/strong&gt; with &lt;code&gt;flake8&lt;/code&gt; and even &lt;strong&gt;60s&lt;/strong&gt; with &lt;code&gt;pylint&lt;/code&gt;), then so be it.&lt;/p&gt;
&lt;p&gt;By the way, relying on &lt;strong&gt;VCs for funding is a double-edged sword&lt;/strong&gt;: on one side you now have a lot of money to hire people and let them work full time on the project. This ensures the &lt;strong&gt;development will proceed at fast pace&lt;/strong&gt; and issues will be addressed quickly. On the other side, other companies and community members could initially be attracted by the tool, decide to adopt features which are not available (nor compatible with) in other similar tools and &lt;strong&gt;eventually find themselves locked in a proprietary ecosystem&lt;/strong&gt; (check what recently happened to the data scientists community using &lt;a class=&#34;link&#34; href=&#34;https://www.theregister.com/2024/08/08/anaconda_puts_the_squeeze_on/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Anaconda&lt;/strong&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;what-could-we-do-instead&#34;&gt;What could we do instead
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;I think an alternative&lt;/strong&gt; and mid ground solution to the ones described above &lt;strong&gt;exists&lt;/strong&gt;: each company should &lt;strong&gt;fund the projects&lt;/strong&gt; they use and rely on most and / or they should &lt;strong&gt;allow employees&lt;/strong&gt; to dedicate some time to &lt;strong&gt;contribute back&lt;/strong&gt; to these projects.&lt;/p&gt;
&lt;h3 id=&#34;funding-projects&#34;&gt;Funding projects
&lt;/h3&gt;&lt;p&gt;Let&amp;rsquo;s pick for example the 5 top components a company could rely on: &lt;strong&gt;Python, FastAPI, SQLAlchemy, Pydantic and PostgreSQL&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The company should allocate a yearly budget for these components and donate regularly to the projects. Many companies have no issues purchasing licenses and seats for the services they use, so why donating regularly should be a problem?&lt;/p&gt;
&lt;p&gt;By having many companies donating to a project, &lt;strong&gt;we avoid that a single company has too much influence&lt;/strong&gt; on the direction of development. If a single company decides to stop funding a component, there would be many other continuing to support it.&lt;/p&gt;
&lt;p&gt;Small projects (those with a single lead developer) could &lt;strong&gt;use the money&lt;/strong&gt; income to be able &lt;strong&gt;to work full time&lt;/strong&gt; on it. Larger projects could &lt;strong&gt;hire more people&lt;/strong&gt; to work full time. The necessary structure and organisation should reflect the size of the project itself.&lt;/p&gt;
&lt;p&gt;This would be a &lt;strong&gt;win win situation&lt;/strong&gt;. &lt;strong&gt;Developers&lt;/strong&gt; could &lt;strong&gt;work on something they love&lt;/strong&gt; and being paid for it. &lt;strong&gt;Companies&lt;/strong&gt; could trust the components they use even more because with people working full time on it, it&amp;rsquo;s more &lt;strong&gt;unlikely the project can be abandoned&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This is quite similar to the funding model of &lt;a class=&#34;link&#34; href=&#34;https://www.django-rest-framework.org/#funding&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Django Rest Framework&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;allowing-employees-to-contribute-back&#34;&gt;Allowing employees to contribute back
&lt;/h3&gt;&lt;p&gt;Sometimes project owners need some direct help fixing bugs, preparing releases etc&amp;hellip; another way of contribute could be &lt;strong&gt;allowing employees to dedicate some work time to contribute back&lt;/strong&gt; directly. This can have multiple advantages: employees can &lt;strong&gt;work on something fun&lt;/strong&gt; and they can &lt;strong&gt;learn new things&lt;/strong&gt; (reminder: often employees leave a company because they want to work on more interesting stuff and because they are not learning enough in their current role) while &lt;strong&gt;projects&lt;/strong&gt; can &lt;strong&gt;get additional&lt;/strong&gt; (even if not regular) &lt;strong&gt;help&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m convinced &lt;strong&gt;a more sustainable way for funding open source projects is possible&lt;/strong&gt;. As &lt;strong&gt;software developers&lt;/strong&gt; we &lt;strong&gt;can have an high impact on companies&lt;/strong&gt; (spreading the word, speaking at conferences, leading by example etc&amp;hellip;) and this can be beneficial both for the longevity of existing projects and for the safety of companies.&lt;/p&gt;
&lt;p&gt;What do &lt;strong&gt;you&lt;/strong&gt; think about this possibility?&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Truncating time when querying a PostgreSQL database</title>
        <link>https://www.andreagrandi.it/posts/truncating-time-in-postgresql-query/</link>
        <pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/truncating-time-in-postgresql-query/</guid>
        <description>&lt;p&gt;When you have to compare dates in a SQL query, you often want to ignore the time part. For example if you have two very common fields like &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; and you want to know if they are the same day, you have to &lt;strong&gt;truncate the time part&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;How to do this depends on the database you are using. Here is how you can do it in &lt;strong&gt;PostgreSQL&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;DATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;created_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;DATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;updated_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;created_at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DESC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This query will return all the users where the &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; fields are not on the same day, ignoring the time part.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>AI won‚Äôt take your Software Developer job (not yet)</title>
        <link>https://www.andreagrandi.it/posts/ai-wont-take-your-job-yet/</link>
        <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/ai-wont-take-your-job-yet/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/ai-wont-take-your-job-yet/ai-doing-developers-work-cover.webp" alt="Featured image of post AI won‚Äôt take your Software Developer job (not yet)" /&gt;&lt;p&gt;In the last 3 days I had the opportunity to participate to an internal hackathon organised by the company I work for.&lt;/p&gt;
&lt;p&gt;We had to build a project based on an SDK and the needed skills to build it were those of a frontend developer.&lt;/p&gt;
&lt;p&gt;Being a backend developer and having very basic (almost none) frontend skills, I was suggested to use ChatGPT to write some of the code.&lt;/p&gt;
&lt;h2 id=&#34;challenge-accepted&#34;&gt;Challenge accepted
&lt;/h2&gt;&lt;p&gt;Of course I accepted and I worked on the project with another colleague (also backend developer) who also used ChatGPT to write some of the code.&lt;/p&gt;
&lt;h2 id=&#34;how-i-normally-use-chatgpt&#34;&gt;How I normally use ChatGPT
&lt;/h2&gt;&lt;p&gt;ChatGPT is not new to me. I use it daily for my work, but I mostly use it as a &amp;ldquo;search engine on steroids&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Rather than searching something on a search engine, read a few blog posts or forums, then landing on a Stack Overflow page, to find some code and adapt it, I ask the same question to ChatGPT and then I adapt the produced example.&lt;/p&gt;
&lt;p&gt;I never ask for a complete feature or even a whole method. I usually need a small example for a very specific thing which I then insert in an existing code base.&lt;/p&gt;
&lt;h2 id=&#34;how-i-used-it-for-the-hackathon&#34;&gt;How I used it for the hackathon
&lt;/h2&gt;&lt;p&gt;In the case of the hackathon, I knew what I wanted to achieve, but I had no idea how to do it, so I asked it to produce almost everything I needed.&lt;/p&gt;
&lt;p&gt;At the beginning it was easy: I had nothing and I was adding small pieces every time.&lt;/p&gt;
&lt;p&gt;After a little bit I ended up with a lot of code I couldn&amp;rsquo;t understand anymore.&lt;/p&gt;
&lt;p&gt;I was having an issue with the produced code and ChatGPT, instead of helping, started to allucinate.&lt;/p&gt;
&lt;p&gt;Instead of asking it to fix a specific issue, I was passing back the whole JavaScript file, asking for the issues to be corrected.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t notice that while fixing the issues, ChatGPT was also rewriting the whole file and in a couple of occasions it started changing the logic entirely.&lt;/p&gt;
&lt;p&gt;The errors disappeared but the code started behaving differently.&lt;/p&gt;
&lt;p&gt;In the end we had to revert to a simpler and older version of our code, which at least was working correctly.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;I remain confident that tools like ChatGPT can be valuable assets for software developers, provided they already possess a strong understanding of the relevant domain, such as Python backend development in my experience.&lt;/p&gt;
&lt;p&gt;However, for areas outside one&amp;rsquo;s expertise, such as frontend development, relying solely on ChatGPT is insufficient.&lt;/p&gt;
&lt;p&gt;What is your experience with similar tools? Let me know in the comments.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Skipping tests depending on the Python version</title>
        <link>https://www.andreagrandi.it/posts/skipping-tests-depending-python-version/</link>
        <pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/skipping-tests-depending-python-version/</guid>
        <description>&lt;p&gt;Sometimes we want to run certain tests only on a specific version of Python.&lt;/p&gt;
&lt;p&gt;Suppose you are migrating a large project from Python 2 to Python 3 and you know in advance that certain tests won&amp;rsquo;t run
under Python 3.&lt;/p&gt;
&lt;p&gt;Chances are that during the migration you are already using the &lt;a class=&#34;link&#34; href=&#34;https://pythonhosted.org/six/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;six&lt;/a&gt; library. The &lt;strong&gt;six&lt;/strong&gt; libraries have
two boolean properties which are initialised to &lt;code&gt;True&lt;/code&gt; depending on the Python version which is being used: &lt;code&gt;PY2&lt;/code&gt; when running under Python 2
and &lt;code&gt;PY3&lt;/code&gt; when running under Python 3.&lt;/p&gt;
&lt;p&gt;This library, combined with the &lt;strong&gt;skipIf&lt;/strong&gt; method of &lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/3/library/unittest.html#skipping-tests-and-expected-failures&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;unittest library&lt;/a&gt;
can be used to easily skip tests when using Python 3:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;six&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;unittest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyTestCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unittest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TestCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nd&#34;&gt;@unittest.skipIf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;six&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PY3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;not compatible with Python 3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# This test won&amp;#39;t run under Python 3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;credits&#34;&gt;Credits
&lt;/h2&gt;&lt;p&gt;Thanks to my colleague &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/valnico&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nicola&lt;/a&gt;&lt;/strong&gt; for giving me the inspiration to write this post.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Installing Python and virtualenv on MacOS</title>
        <link>https://www.andreagrandi.it/posts/installing-python-and-virtualenv-on-osx/</link>
        <pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/installing-python-and-virtualenv-on-osx/</guid>
        <description>&lt;p&gt;Every time I need to install Python on MacOS or whenever a colleague asks for help, I have to search fo the most updated instructions on Google, and every time I find different ways of doing the exact same thing.&lt;/p&gt;
&lt;p&gt;Tired of this, I decided to write down my own notes. Please note that I don&amp;rsquo;t claim this to be the best way of installing Python on MacOS. It works fine for me so use it at your own risk.&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements
&lt;/h2&gt;&lt;p&gt;To follow these instructions you need to at least have installed &lt;strong&gt;brew&lt;/strong&gt; on MacOS. Please follow the instructions on the official website: &lt;a class=&#34;link&#34; href=&#34;https://brew.sh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://brew.sh&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;installing-python-37x-and-python-27x&#34;&gt;Installing Python 3.7.x and Python 2.7.x
&lt;/h2&gt;&lt;p&gt;Even if I strongly suggest to start every new project with Python 3 (since Python 2 will only be supported until the end of 2019), there may be use cases when version 2 is still required, so I will give you the instructions to install both.&lt;/p&gt;
&lt;h3 id=&#34;installing-python-37x&#34;&gt;Installing Python 3.7.x
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install python
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This will install Python 3 by default.&lt;/p&gt;
&lt;h3 id=&#34;installing-python-27x&#34;&gt;Installing Python 2.7.x
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install python@2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This will install version 2 of Python.&lt;/p&gt;
&lt;h3 id=&#34;add-the-python-locations-to-path&#34;&gt;Add the Python locations to PATH
&lt;/h3&gt;&lt;p&gt;Edit your &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;.zshrc&lt;/code&gt; and add this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;export PATH=&amp;#34;/usr/local/opt/python/libexec/bin:/usr/local/bin:$PATH&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You will need to close your terminal and reopen it for the changes to be applied. Once you have done it, you can verify if Python 3 and Python 2 have been installed correctly:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Python 3.7.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;and&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python2 --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Python 2.7.15
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;install-virtualenv-and-virtualenvwrapper&#34;&gt;Install virtualenv and virtualenvwrapper
&lt;/h2&gt;&lt;p&gt;When working with Python, it&amp;rsquo;s a good thing not to install packages system wide, but confine them in virtual environments. A good and well tested way of doing that is to use &lt;code&gt;virtualenv&lt;/code&gt; (and its companion &lt;code&gt;virtualenvwrapper&lt;/code&gt;) which makes the most common operations easier.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install virtualenv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install virtualenvwrapper
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Those (and only those) two packages will be installed system wide, because we will need them to be available outside of a virtual environment.&lt;/p&gt;
&lt;h3 id=&#34;configure-virtualenv&#34;&gt;Configure virtualenv
&lt;/h3&gt;&lt;p&gt;Edit again your &lt;code&gt;.bashrc&lt;/code&gt; (or &lt;code&gt;.zshrc&lt;/code&gt;) and add these lines:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;export WORKON_HOME=~/.virtualenvs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[ -f /usr/local/bin/virtualenvwrapper.sh ] &amp;amp;&amp;amp; source /usr/local/bin/virtualenvwrapper.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This will configure the default location where to store your virtual environments and will run a command every time you open a new terminal, to make sure &lt;code&gt;virtualenvwrapper&lt;/code&gt; can work correctly.&lt;/p&gt;
&lt;h2 id=&#34;test-if-the-installed-tools-are-working&#34;&gt;Test if the installed tools are working
&lt;/h2&gt;&lt;p&gt;To make sure everything has been configured correctly, please close and reopen your terminal and let&amp;rsquo;s try to create a new virtual environment:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkvirtualenv test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;which should output something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using base prefix &amp;#39;/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;New python executable in /Users/andrea/.virtualenvs/test/bin/python3.7
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Also creating executable in /Users/andrea/.virtualenvs/test/bin/python
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Installing setuptools, pip, wheel...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;done.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/predeactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/postdeactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/preactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/postactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/get_env_details
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(test) ‚ûú  ~
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;If you see something similar, it means that the virtual environment has been created correctly. Please note that by default this command will create an environment base on Python 3. Do you need to create one for Python 2? No problem, you just need to do the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkvirtualenv -p /usr/local/bin/python2 test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;which should output this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Running virtualenv with interpreter /usr/local/bin/python2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;New python executable in /Users/andrea/.virtualenvs/test/bin/python2.7
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Also creating executable in /Users/andrea/.virtualenvs/test/bin/python
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Installing setuptools, pip, wheel...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;done.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/predeactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/postdeactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/preactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/postactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/test/bin/get_env_details
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(test) ‚ûú  ~
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;That&amp;rsquo;s all you have to do to install and configure Python and virtualenv on MacOS. If you have problems, comments or questions, feel free to leave a comment on this post.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Why I mentor on Exercism.io</title>
        <link>https://www.andreagrandi.it/posts/why-i-mentor-on-exercism/</link>
        <pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/why-i-mentor-on-exercism/</guid>
        <description>&lt;p&gt;Exercism (&lt;a class=&#34;link&#34; href=&#34;https://exercism.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://exercism.io&lt;/a&gt;) is a platform that has been created to help people improving their coding skills, thanks to the volunteers mentoring the students. There are tracks for almost all the popular languages and each track has coding tests that the students can download, solve offline using their preferred editor, and test the solution against the provided unit tests. Once the solution is ready to be reviewed (or even if it&amp;rsquo;s not complete but the student needs help), it can be submitted to the website and it will go in a queue where the first available mentor will pick it and start mentoring.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;service is free&lt;/strong&gt; to use for all the students and &lt;strong&gt;the mentors are all volunteers&lt;/strong&gt; (this doesn&amp;rsquo;t mean that the platform doesn&amp;rsquo;t have any costs. If you are curious about the resources needed to keep the platform alive, you can give a look at &lt;a class=&#34;link&#34; href=&#34;https://www.reddit.com/r/Python/comments/9tugvn/exercismio_needs_python_mentors/e8zy5mq/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this answer on Reddit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When I found out about the platform, I decided to use it (as student) to &lt;strong&gt;improve my Go coding skills&lt;/strong&gt;. I must say that I&amp;rsquo;ve been learning a lot from the mentors and some of them are putting a lot of effort to give you all the possible advices to improve your coding style. In a single exercise once, I learnt at least five things about Go I didn&amp;rsquo;t know before!&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been a Python developer (professionally) for the last 5 years, but I&amp;rsquo;ve never considered myself an &amp;ldquo;expert&amp;rdquo;. I decided to give it a try with mentoring, because I felt I wanted to &lt;strong&gt;give something back to the community&lt;/strong&gt;, so I registered as mentor too and started mentoring in the Python track.&lt;/p&gt;
&lt;p&gt;The first surprise has been that mentoring other students, I was probably learning more than how much I was teaching. First of all, once you already know how to solve a problem, it&amp;rsquo;s always interesting to look at other possible solutions. I&amp;rsquo;ve found sometimes that students were providing better (more concise and readable) solutions than mine. Last but not least, before advising someone about conding style or a more idiomatic solution, I always double check things from different sources. There is nothing wrong making mistakes, especially if you are learning&amp;hellip; but it would be damaging for the student if I was teaching them something wrong, so I need to be sure about what I say. This of course makes me study, even the basic things, again and again and at the end of the day, my skills are better too.&lt;/p&gt;
&lt;p&gt;Once you join the mentors group, you are invited to a private Slack where you can count on the help of other mentors (we have channels for each track/language) or ask questions. So, if you are not sure about something, you can always ask around.&lt;/p&gt;
&lt;p&gt;If my story and experience convinced you, &lt;strong&gt;Exercism is looking for more mentors!&lt;/strong&gt; The more we have available, the less time the students have to wait in a queue to be mentored. You can find all the instructions at this address &lt;a class=&#34;link&#34; href=&#34;https://mentoring.exercism.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mentoring.exercism.io&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Using ipdb with Python 3.7.x breakpoint</title>
        <link>https://www.andreagrandi.it/posts/using-ipdb-with-python-37-breakpoint/</link>
        <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/using-ipdb-with-python-37-breakpoint/</guid>
        <description>&lt;p&gt;Python 3.7.x introduced a &lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/3/whatsnew/3.7.html#pep-553-built-in-breakpoint&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;new method to insert a breakpoint&lt;/a&gt; in the code.
Before Python 3.7.x to insert a debugging point we had to write &lt;code&gt;import pdb; pdb.set_trace()&lt;/code&gt; which honestly I could never remember (and I also created a snippet on VS Code to auto complete it).&lt;/p&gt;
&lt;p&gt;Now you can just write &lt;code&gt;breakpoint()&lt;/code&gt; that&amp;rsquo;s it!&lt;/p&gt;
&lt;p&gt;Now&amp;hellip; the only problem is that by default that command will use &lt;strong&gt;pdb&lt;/strong&gt; which is not exactly the best debugger you can have. I usually use &lt;strong&gt;ipdb&lt;/strong&gt; but there wasn&amp;rsquo;t an intuitive way of using it&amp;hellip; and no, just installing it in your virtual environment, it won&amp;rsquo;t be used by default.&lt;/p&gt;
&lt;p&gt;How to use it then? It&amp;rsquo;s very simple. The new debugging command will read an environment variable named &lt;strong&gt;PYTHONBREAKPOINT&lt;/strong&gt;. If you set it properly, you will be able to use ipdb instead of pdb.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;export PYTHONBREAKPOINT=ipdb.set_trace
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;At this point, any time you use &lt;code&gt;breakpoint()&lt;/code&gt; in your code, &lt;strong&gt;ipdb&lt;/strong&gt; will be used instead of &lt;strong&gt;pdb&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 id=&#34;references&#34;&gt;References
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hackernoon.com/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://hackernoon.com/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
