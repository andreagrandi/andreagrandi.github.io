<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>IOS on Andrea Grandi</title>
        <link>https://www.andreagrandi.it/tags/ios/</link>
        <description>Recent content in IOS on Andrea Grandi</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 05 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreagrandi.it/tags/ios/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>iA Writer Authorship: a brilliant feature with a problematic implementation</title>
        <link>https://www.andreagrandi.it/posts/ia-writer-authorship-brilliant-feature-problematic-implementation/</link>
        <pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/ia-writer-authorship-brilliant-feature-problematic-implementation/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/ia-writer-authorship-brilliant-feature-problematic-implementation/ia-writer-authorship-cover.webp" alt="Featured image of post iA Writer Authorship: a brilliant feature with a problematic implementation" /&gt;&lt;p&gt;I recently started using &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://ia.net/writer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;iA Writer&lt;/a&gt;&lt;/strong&gt; to edit my MarkDown files on iPad and I&amp;rsquo;m honestly quite impressed by its simplicity.&lt;/p&gt;
&lt;p&gt;With the latest version they introduced a feature called &lt;a class=&#34;link&#34; href=&#34;https://ia.net/writer/support/editor/authorship&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Authorship&lt;/a&gt; which basically helps you to keep track of external contributors.&lt;/p&gt;
&lt;p&gt;For example, suppose you asked a friend (or even ChatGPT) to write a conclusion for one of your articles, you copy-paste the text on your article and you start editing it. How do you keep track of what you or the other source wrote? With the Authorship feature, text edited by you will be rendered in a different way, so you can distinguish it.&lt;/p&gt;
&lt;p&gt;I think this is a brilliant idea and even if I don&amp;rsquo;t make much usage of GPT to write my posts (almost none so far), I may use it in the future.&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The problem&lt;/h2&gt;
&lt;p&gt;The problem with this feature is that if you enable it for one of your documents, iA Writer will add an &amp;ldquo;hidden&amp;rdquo; &lt;code&gt;Authorship&lt;/code&gt; section at the end of the file.&lt;/p&gt;
&lt;p&gt;This section won&amp;rsquo;t be visible in iA while editing the text, but it will be visible in any other editor.&lt;/p&gt;
&lt;p&gt;In my case, I plan to use iA Writer to write my blog posts, which I then push to GitHub using &lt;a class=&#34;link&#34; href=&#34;https://workingcopy.app/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Working Copy&lt;/a&gt;, where they are finally transformed by Hugo to my static website.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unless I edit the file with a different editor&lt;/strong&gt;, if I submit my article as is, &lt;strong&gt;Hugo&lt;/strong&gt; (but even Pelican, or Jekyll etc&amp;hellip; basically any engine which doesn&amp;rsquo;t know how to handle this block of information) &lt;strong&gt;will render the Authorship block into the final HTML page&lt;/strong&gt;, which is something nobody really wants.&lt;/p&gt;
&lt;h2 id=&#34;possible-solutions&#34;&gt;Possible solutions&lt;/h2&gt;
&lt;p&gt;I asked iA people on Mastodon about this issue and &lt;a class=&#34;link&#34; href=&#34;https://mastodon.online/@ia/112037948788436778&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;they told me&lt;/a&gt; they had considered different options but in any case something will break for someone.&lt;/p&gt;
&lt;p&gt;I agree, it&amp;rsquo;s not easy to find a solution which can cover every possible case, but I still think there could be margin for improvement.&lt;/p&gt;
&lt;h3 id=&#34;saving-authorship-in-an-external-file&#34;&gt;Saving Authorship in an external file&lt;/h3&gt;
&lt;p&gt;If these additional data was saved in an external file, it would be much easier to exclude it from the built pages. By the way, this would mean spreading the information across different files, making it more difficult to maintain.&lt;/p&gt;
&lt;h3 id=&#34;using-yaml-metadata&#34;&gt;Using YAML metadata&lt;/h3&gt;
&lt;p&gt;Adding the Authorship as metadata could be the best option, for a couple of reasons.&lt;/p&gt;
&lt;p&gt;iA Writer already makes use of YAML metadata where you can add information, so existing users would be used to see something at the beginning of the file which is not their content.&lt;/p&gt;
&lt;p&gt;Any unknown metadata is usually ignored by static websites generators (at least Hugo and Pelican behave in this way) so the Authorship won&amp;rsquo;t be rendered in the final HTML page.&lt;/p&gt;
&lt;h2 id=&#34;a-workaround-for-hugo&#34;&gt;A workaround for Hugo&lt;/h2&gt;
&lt;p&gt;While I hope iA will consider giving alternative options in the future, I&amp;rsquo;ve written a simple script you can use to remove all Authorship blocks from any MarkDown file found in your content.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/user/800e5e33ec05f8d51f61a1cdc4fc4d91.js?file=strip-annotation.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Please note that this will remove any Authorship block from your MarkDown files, even if you include them in a code block. If you want to improve the script, feel free to do it and let me know.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The introduction of the Authorship feature in iA Writer presents a creative solution for managing and distinguishing between original content and external contributions within documents.&lt;/p&gt;
&lt;p&gt;While the feature offers significant advantages for content creators seeking to track their collaborations, it also introduces challenges, particularly in the integration with static site generators like Hugo.&lt;/p&gt;
&lt;p&gt;My advice is that, as users, we give some &lt;strong&gt;constructive feedback&lt;/strong&gt; to iA (you can contact them at &lt;code&gt;support+newfeature@ia.net&lt;/code&gt;) to let them know how to improve this feature.&lt;/p&gt;
&lt;p&gt;Additionally, if you are more familiar with GitHub, you can discuss this specific feature directly in their &lt;a class=&#34;link&#34; href=&#34;https://github.com/iainc/Markdown-Annotations&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;repository&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Blogging from an iPad</title>
        <link>https://www.andreagrandi.it/posts/blogging-from-an-ipad/</link>
        <pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/blogging-from-an-ipad/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/blogging-from-an-ipad/editing-markdown-with-mweb.jpeg" alt="Featured image of post Blogging from an iPad" /&gt;&lt;p&gt;A few years ago, I &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/2017/07/02/migrating-from-wordpress-to-static-generated-website/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;migrated&lt;/a&gt; from my Wordpress based blog (which I self hosted… yeah… I know… no comment!) to a static generated (using &lt;a class=&#34;link&#34; href=&#34;https://getpelican.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pelican&lt;/a&gt;) one which is hosted (for free!) on GitHub Pages.&lt;/p&gt;
&lt;p&gt;This setup, believe me or not, is cool. I’ve all my blog posts written in &lt;strong&gt;MarkDown&lt;/strong&gt;, versioned on and kept safe on GitHub and when I’m ready to publish, I just need to make a pull request, merge it and a CI job will take care of using Pelican to build the pages and push them to the right place. You can find more information about my setup in &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/2019/02/24/how-to-deploy-static-website-github-pages-circleci/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this other post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, what’s the problem? Well, as you can imagine, to do all of this, you need a GitHub client, a MarkDown editor and you need to be able to commit, push and do pull requests.&lt;/p&gt;
&lt;p&gt;Is this  possible from an iPad? I believed it wasn’t (since the official GitHub client is very limited on what you can do, and online IDEs like VsCode.dev requires an internet connection, and I would like to be able to write also when I’m offline), but thanks to this &lt;a class=&#34;link&#34; href=&#34;https://www.marcogomiero.com/posts/2021/running-blog-ipad/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;blog post&lt;/a&gt; from &lt;strong&gt;Marco Gomiero&lt;/strong&gt;, I recently found out it’s possible!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/blogging-from-an-ipad/it-could-work.jpeg&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Frankenstein Junior - It could work!&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;working-copy-git-client-for-ios&#34;&gt;Working Copy: git client for iOS&lt;/h2&gt;
&lt;p&gt;The most important part of my workflow would not be possible without this amazing git client.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/blogging-from-an-ipad/working-copy.jpeg&#34;
	width=&#34;2360&#34;
	height=&#34;1640&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Working Copy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;345px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://workingcopy.app/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Working Copy&lt;/a&gt; is so far the best Git client you can find on iOS. It allows you to clone repositories and work offline. Checked out content is made available through the File explorer, so any iOS app has access to it and this means you can use any client to edit your files.&lt;/p&gt;
&lt;h2 id=&#34;mweb-a-simple-markdown-editor-for-ios&#34;&gt;MWeb: a simple MarkDown editor for iOS&lt;/h2&gt;
&lt;p&gt;Following the suggestion from Marco’s blog post I decided to start using &lt;a class=&#34;link&#34; href=&#34;https://www.mweb.im/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this editor&lt;/a&gt;. To be honest I’m still not sold on it (literally: I haven’t purchased it yet and I’m still using the free version), because I’ve found a couple of issues which I’ve promptly reported to the author (let’s see if and how long it will take for them to reply) but they are not bad enough to entirely disrupt my workflow.&lt;/p&gt;
&lt;p&gt;In case MWeb should not work for me, I’m planning to try a few others: &lt;a class=&#34;link&#34; href=&#34;https://www.textasticapp.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Textastic&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://serpensoft.info/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;iWriter Pro&lt;/a&gt; and maybe &lt;a class=&#34;link&#34; href=&#34;https://ia.net/writer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;iA Writer&lt;/a&gt; (but for its cost it has to be damn perfect!)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/blogging-from-an-ipad/editing-markdown-with-mweb.jpeg&#34;
	width=&#34;2360&#34;
	height=&#34;1640&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;MWeb&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;345px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;ios-shortcuts-and-automations&#34;&gt;iOS Shortcuts and Automations&lt;/h2&gt;
&lt;p&gt;Another idea I borrowed from Marco is the usage of &lt;strong&gt;iOS Shortcuts&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In my case I had to customise the flow quite a lot, either because I use Pelican instead of Hugo, and also because I’ve some conventions I want to follow when writing my blog posts, but overall I implemented similar features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“New Blog Post”: the first shortcut creates a new branch in my repository and creates a new MarkDown file, following my own convention. Then it fills the empty file with some headers which are normally used in Pelican MarkDown files.&lt;/li&gt;
&lt;li&gt;“Blog Photo”: this shortcut let me select a photo from my gallery, it converts it to JPEG (most of the time pictures taken with my iPhone had *.heic format, so they need to be converted) and place it in the expected folder in my repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Thanks for reading my first blog post, entirely written from my iPad, while I was relaxing on my sofa. If you have any questions or suggestions for a good MarkDown editor for iOS, feel free to leave a comment.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
