<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>GitHub on Andrea Grandi</title>
        <link>https://www.andreagrandi.it/tags/github/</link>
        <description>Recent content in GitHub on Andrea Grandi</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 31 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreagrandi.it/tags/github/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Self hosting a website analytics at zero cost</title>
        <link>https://www.andreagrandi.it/posts/self-hosting-analytics-at-zero-cost/</link>
        <pubDate>Wed, 31 Jul 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/self-hosting-analytics-at-zero-cost/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/self-hosting-analytics-at-zero-cost/cover-self-hosting-analytics.png" alt="Featured image of post Self hosting a website analytics at zero cost" /&gt;&lt;p&gt;I recently started using &lt;a class=&#34;link&#34; href=&#34;https://umami.is&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Umami&lt;/a&gt; (a &lt;strong&gt;privacy first&lt;/strong&gt;, &lt;strong&gt;GDPR compliant&lt;/strong&gt; solution) for this website analytics but I immediately found out that &lt;strong&gt;their free plan was not enough for my needs&lt;/strong&gt; (10k page views per month).&lt;/p&gt;
&lt;p&gt;Since it&amp;rsquo;s completely &lt;strong&gt;open source&lt;/strong&gt;, you can self host it anywhere you want.&lt;/p&gt;
&lt;p&gt;I was initially evaluating between &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/posts/buy-or-rent-raspberrypi-vs-vps&#34; &gt;buying a Raspberry Pi or renting a VPS&lt;/a&gt;, but I eventually found a third solution which comes at &lt;strong&gt;zero cost&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements
&lt;/h2&gt;&lt;p&gt;Your are going to need a few accounts if you want to follow exactly these steps, but keep in mind that my exact configuration is just an example and that you are free to use any other combination of services.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt;: used to login on other services and to host a fork of Umami&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/umami-software/umami&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Umami source code&lt;/strong&gt;&lt;/a&gt;: it&amp;rsquo;s available on their GitHub account&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://vercel.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Vercel&lt;/strong&gt;&lt;/a&gt;: used to host the app itself, they have a generous free plan&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://xata.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Xata&lt;/strong&gt;&lt;/a&gt;: they offer a very generous (15GB) free account for managed PostgreSQL&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cloudflare.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Cloudflare&lt;/strong&gt;&lt;/a&gt;: this service is optional, but I found it quite useful to get a nice &lt;code&gt;stats.andreagrandi.it&lt;/code&gt; which points to the deployed instance on Vercel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I won&amp;rsquo;t get into every specific detail of the next steps (like &amp;ldquo;click on the second link of this page, then click&amp;hellip;&amp;rdquo;). If you decide to self host something like this, you should have a basic understanding of how a web application works, what GitHub and a database are etc&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;github&#34;&gt;GitHub
&lt;/h2&gt;&lt;p&gt;Create a GitHub account, if you don&amp;rsquo;t have one, then go to &lt;a class=&#34;link&#34; href=&#34;https://github.com/umami-software/umami&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/umami-software/umami&lt;/a&gt; and fork their repository into your own account.&lt;/p&gt;
&lt;h3 id=&#34;fix-umami-migration-script&#34;&gt;Fix Umami migration script
&lt;/h3&gt;&lt;p&gt;There is an existing &lt;strong&gt;issue with Umami initial migration script and Xata PostgreSQL&lt;/strong&gt; instance. Umami tries to create an extension (which Xata already has) but Xata doesn&amp;rsquo;t allow the creation of new extensions in the free plan and the returned error will make the script to fail.&lt;/p&gt;
&lt;p&gt;To avoid this you need to comment &lt;a class=&#34;link&#34; href=&#34;https://github.com/umami-software/umami/blob/master/db/postgresql/migrations/01_init/migration.sql#L2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;the first line of this migration script&lt;/a&gt; (by the way, I got in touch with Xata support too and they mentioned they could eventually avoid returning an error in this case but I don&amp;rsquo;t have an estimate on when this will be done).&lt;/p&gt;
&lt;h2 id=&#34;xata&#34;&gt;Xata
&lt;/h2&gt;&lt;p&gt;Before you create the account on Vercel, I suggest you to create the Xata account. You will need the PostgreSQL connection string at hand during Vercel configuration, so it&amp;rsquo;s better to create it upfront.&lt;/p&gt;
&lt;p&gt;You can use the GitHub account to login to Xata, then create a new database and select the &lt;strong&gt;&amp;ldquo;Enable direct access to Postgres&amp;rdquo;&lt;/strong&gt; option.&lt;/p&gt;
&lt;p&gt;Xata &lt;strong&gt;free plan&lt;/strong&gt; allows you to have a database where &lt;strong&gt;you can store up to 15GB of data&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Finally copy the connection string in a safe place, you will need it later.&lt;/p&gt;
&lt;h3 id=&#34;connections-limit&#34;&gt;Connections limit
&lt;/h3&gt;&lt;p&gt;Since we are here, I suggest you also add &lt;code&gt;connection_limit=10&lt;/code&gt; to the connection string, otherwise you risk to saturate all the available connections in the free plan.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;postgresql://abc123:&amp;lt;YOUR_API_KEY&amp;gt;@eu-central-1.sql.xata.sh/umami:main?sslmode&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;require&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;connection_limit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;vercel&#34;&gt;Vercel
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://vercel.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Vercel&lt;/a&gt; is an hosting service which allows you to run web applications in a &lt;strong&gt;completely managed environment&lt;/strong&gt;. You won&amp;rsquo;t have to think about OS upgrades, manually install any framework or think about security. Everything will be managed and all the options can be adjusted from a web interface.&lt;/p&gt;
&lt;p&gt;The company behind it is the same behind &lt;a class=&#34;link&#34; href=&#34;https://nodejs.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;NodeJS&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create an account using GitHub login, so you won&amp;rsquo;t have to use a specific user/password to login.&lt;/li&gt;
&lt;li&gt;Import the fork: in my case it&amp;rsquo;s the one at &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/umami&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/umami&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Configure the project adding the PostgreSQL connection string: you can find this in the Xata dashboard.&lt;/li&gt;
&lt;li&gt;Test the connection and do the first deployment.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;umami&#34;&gt;Umami
&lt;/h2&gt;&lt;p&gt;Once the deployment is completed, &lt;strong&gt;Umami should be up and running&lt;/strong&gt; at the address specified here:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/self-hosting-analytics-at-zero-cost/vercel-domains.png&#34;
	width=&#34;2594&#34;
	height=&#34;1098&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Vercel deployment&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;236&#34;
		data-flex-basis=&#34;566px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;At this point you need to change the default password as soon as possible. Login using &lt;code&gt;admin&lt;/code&gt; and &lt;code&gt;umami&lt;/code&gt; and then go to the settings page to change it.&lt;/p&gt;
&lt;h2 id=&#34;cloudflare&#34;&gt;Cloudflare
&lt;/h2&gt;&lt;p&gt;In case you already use Cloudflare (I don&amp;rsquo;t suggest you go through a configuration from scratch just to have a nice url), I will show you what I did to have my stats running on &lt;code&gt;stats.andreagrandi.it&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To do this, you need to create a new CNAME record in your Cloudflare dashboard, pointing to the Vercel deployment url, like I did here:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/self-hosting-analytics-at-zero-cost/cloudflare-domain.png&#34;
	width=&#34;1964&#34;
	height=&#34;796&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Cloudflare CNAME record&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;246&#34;
		data-flex-basis=&#34;592px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Once the record has been created, you need to go back to Vercel and add the new domain to the project settings (see the previous screenshot), so that the application will be reachable from the new domain.&lt;/p&gt;
&lt;h2 id=&#34;complete-the-configuration&#34;&gt;Complete the configuration
&lt;/h2&gt;&lt;p&gt;The rest of the instructions are just about configuring the website and adding the analytics snippet to your website. I won&amp;rsquo;t go into details here, but you can find all the information you need in the &lt;a class=&#34;link&#34; href=&#34;https://umami.is/docs&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;official Umami documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;add-a-website&#34;&gt;Add a website
&lt;/h3&gt;&lt;p&gt;The first thing you have to do once you login to Umami is to add a new website. You can do this by clicking on &amp;ldquo;Settings&amp;rdquo; first, then &amp;ldquo;Websites&amp;rdquo; link in the left menu and then on the &amp;ldquo;Add website&amp;rdquo; button. You can find the complete instructions &lt;a class=&#34;link&#34; href=&#34;https://umami.is/docs/add-a-website&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;install-the-analytics-snippet-to-your-website&#34;&gt;Install the analytics snippet to your website
&lt;/h3&gt;&lt;p&gt;Then you need to copy the tracking code and add it to your website. You can find the complete instructions &lt;a class=&#34;link&#34; href=&#34;https://umami.is/docs/collect-data&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;. How to do this depends on the technology you are using to build your website, but in general it must be placed inside the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag of your website.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/self-hosting-analytics-at-zero-cost/umami-snippet.png&#34;
	width=&#34;2116&#34;
	height=&#34;804&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Umami snippet&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;263&#34;
		data-flex-basis=&#34;631px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;If you are looking for a privacy first, GDPR compliant analytics solution, you should definitely consider Umami. It&amp;rsquo;s easy to use, free and open-source, and you don&amp;rsquo;t have to worry about your data being shared with third parties. You can host it yourself and have full control over your data.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Self hosting a Copilot replacement: my personal experience</title>
        <link>https://www.andreagrandi.it/posts/self-hosting-copilot-replacement/</link>
        <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/self-hosting-copilot-replacement/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/self-hosting-copilot-replacement/self-hosting-copilot-cover.webp" alt="Featured image of post Self hosting a Copilot replacement: my personal experience" /&gt;&lt;p&gt;For my job (Software Developer) I make a daily use of tools like &lt;a class=&#34;link&#34; href=&#34;https://github.com/features/copilot&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Copilot&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://chat.openai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ChatGPT&lt;/a&gt;. I want to explore alternative solutions which can be hosted autonomusly, without relying on an external service.&lt;/p&gt;
&lt;h2 id=&#34;disclaimer&#34;&gt;Disclaimer
&lt;/h2&gt;&lt;p&gt;Before I continue, let me clarify that these are &lt;strong&gt;tools&lt;/strong&gt; which makes my job faster, they don&amp;rsquo;t do the job for me: a wrong assumption made by so many people is that AI tools will do the work for you.&lt;/p&gt;
&lt;p&gt;This is quite &lt;strong&gt;not true&lt;/strong&gt;. You are still responsible of knowing what to do, understanding the problem, asking the right questions and knowing what to do with the answers.&lt;/p&gt;
&lt;p&gt;If you regularly search for stuff on Google or any other engine, to find examples in blog posts or Stack Overflow, read someone else example and then adapt the code for your needs, there is nothing wrong automating this: &lt;strong&gt;you are still in charge of the final result&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-experiment&#34;&gt;The experiment
&lt;/h2&gt;&lt;p&gt;After I recently experimented with &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/posts/ollama-running-llm-locally/&#34; &gt;local LLMs using Ollama&lt;/a&gt;, I wanted to figure out if I could use some of these models to &lt;strong&gt;replace GitHub Copilot&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;My intent is not to save some money (my company pays for these tools) or for privacy reasons (it would be pointless to keep your code &amp;ldquo;secret&amp;rdquo; from GitHub if you use it to host it), but to &lt;strong&gt;find out how good these alternative tools are&lt;/strong&gt; and&amp;hellip; for fun!&lt;/p&gt;
&lt;h2 id=&#34;setup-and-available-resources&#34;&gt;Setup and available resources
&lt;/h2&gt;&lt;p&gt;The laptop I&amp;rsquo;m using is a MacBook Pro with &lt;strong&gt;M2 Pro&lt;/strong&gt; CPU and &lt;strong&gt;32 GB RAM&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This machine must be able to run my basic &lt;strong&gt;requirements&lt;/strong&gt;, which are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slack&lt;/li&gt;
&lt;li&gt;Docker (running my work containers)&lt;/li&gt;
&lt;li&gt;VSCode&lt;/li&gt;
&lt;li&gt;Safari / Chrome&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;rsquo;s see if it can also run a Copilot replacement.&lt;/p&gt;
&lt;h2 id=&#34;tested-models-and-extensions&#34;&gt;Tested models and extensions
&lt;/h2&gt;&lt;p&gt;Basically, to run a Copilot replacement, you need to be able to run an LLM and use one of the available extensions for VSCode (in my case I use VSCode, but similar extensions exist for other IDEs).&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m running the models locally using &lt;a class=&#34;link&#34; href=&#34;https://ollama.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ollama&lt;/a&gt;. If you need to know how to use it, you can refer to my &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/posts/ollama-running-llm-locally/&#34; &gt;previous post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;models&lt;/strong&gt; I tested are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stable-code:3b-code-q4_0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;codellama:7b-code-q4_K_M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;codellama:13b-code-q4_K_M&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The number before the &lt;code&gt;b&lt;/code&gt; usually represents the number of parameters (&lt;strong&gt;3 billions&lt;/strong&gt;, &lt;strong&gt;7 billions&lt;/strong&gt;, &lt;strong&gt;13 billions&lt;/strong&gt; etc&amp;hellip;) and you approximately need &lt;strong&gt;4 GB&lt;/strong&gt;, &lt;strong&gt;8 GB&lt;/strong&gt; and &lt;strong&gt;16 GB RAM&lt;/strong&gt; to use them.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://about.meta.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Meta&lt;/a&gt; has released models with &lt;strong&gt;34 billions&lt;/strong&gt; and &lt;strong&gt;70 billions&lt;/strong&gt; parameters, which are even more powerful, and you can find them here: &lt;a class=&#34;link&#34; href=&#34;https://ollama.com/library/codellama&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ollama.com/library/codellama&lt;/a&gt; but you will need &lt;strong&gt;64-128 GB RAM&lt;/strong&gt; to run them properly.&lt;/p&gt;
&lt;p&gt;The extensions I tested are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LLama Coder&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=ex3ndr.llama-coder&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://marketplace.visualstudio.com/items?itemName=ex3ndr.llama-coder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Code GPT&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=DanielSanMedium.dscodegpt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://marketplace.visualstudio.com/items?itemName=DanielSanMedium.dscodegpt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;twinny&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=rjmacarthy.twinny&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://marketplace.visualstudio.com/items?itemName=rjmacarthy.twinny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;results&#34;&gt;Results
&lt;/h2&gt;&lt;p&gt;The results I got have been quite mixed and &lt;strong&gt;mostly depending on the LLM model&lt;/strong&gt; I was testing, rather than on the extension I was using.&lt;/p&gt;
&lt;p&gt;A model like &lt;code&gt;stable-code:3b-code-q4_0&lt;/code&gt; was quite &lt;strong&gt;fast&lt;/strong&gt; to complete the code I was typing, &lt;strong&gt;but very often&lt;/strong&gt; giving me &lt;strong&gt;wrong&lt;/strong&gt; code or pure garbage (ie: the model wasn&amp;rsquo;t even able to correctly structure a simple Python method or to maintain the correct indentation)&lt;/p&gt;
&lt;p&gt;Models like &lt;code&gt;codellama:7b-code-q4_K_M&lt;/code&gt; or &lt;code&gt;codellama:13b-code-q4_K_M&lt;/code&gt; were giving me &lt;strong&gt;better results&lt;/strong&gt; but despite having 32 GB RAM available and a quite fast CPU, they were &lt;strong&gt;taking 3-4 seconds&lt;/strong&gt; to complete what I was typing, making themselves useless (at least for my use case).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;None of them was even remotely close to the speed and accuracy of GitHub Copilot&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;While the idea of having a personal and private instance of a code assistant is interesting (and can also be the only available option in certain environments), &lt;strong&gt;the reality is that achieving the same level of performance as GitHub Copilot is quite challenging&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Despite these challenges, I think with time both available models and extensions &lt;strong&gt;will get better&lt;/strong&gt; and better, improving their quality and maybe reducing the amount of required resources.&lt;/p&gt;
&lt;p&gt;In case I missed some better model or extension, please feel free to &lt;strong&gt;let me know&lt;/strong&gt; in the comments. I will be glad to do more tests and update this posts or write a new one in the future.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In the mean time&lt;/strong&gt;, at least for my personale usage, I think I will &lt;strong&gt;stick with GitHub Copilot&lt;/strong&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How to deploy a static website to Github Pages using CircleCI</title>
        <link>https://www.andreagrandi.it/posts/how-to-deploy-static-website-github-pages-circleci/</link>
        <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/how-to-deploy-static-website-github-pages-circleci/</guid>
        <description>&lt;p&gt;Since I created my blog with a static pages generator, I&amp;rsquo;ve been using TravisCI to automate the pages build and deployment.
My desire to learn something new (we are using CircleCI at work, but I never configured it from scratch) and the recent news about
TravisCI &lt;a class=&#34;link&#34; href=&#34;https://blog.travis-ci.com/2019-01-23-travis-ci-joins-idera-inc&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;acquisition&lt;/a&gt; and employees &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/alicegoldfuss/status/1098604563664420865&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;layoff&lt;/a&gt;, led me to think about moving to a different service.&lt;/p&gt;
&lt;h2 id=&#34;github-pages&#34;&gt;Github Pages
&lt;/h2&gt;&lt;p&gt;Every account on Github can use a special repository to publish static pages. In my case, since I have &lt;code&gt;github.com/andreagrandi&lt;/code&gt;, my special repository is
named &lt;code&gt;github.com/andreagrandi.github.io&lt;/code&gt;. Once I publish my pages there, they will be accessible from &lt;code&gt;https://andreagrandi.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You will need to use the &lt;strong&gt;master&lt;/strong&gt; branch of the special repository directly and not the &lt;strong&gt;gh-pages&lt;/strong&gt; branch which is available to each repository.&lt;/p&gt;
&lt;h2 id=&#34;circleci&#34;&gt;CircleCI
&lt;/h2&gt;&lt;p&gt;CircleCI is a very flexible and powerful continuous integration tool, which is also &lt;strong&gt;free&lt;/strong&gt; for open source projects. As long as your static website is located on a public repository on Github, you won&amp;rsquo;t have to pay anything to use it. In my case, the surce code of this website is available at &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/andreagrandi.it&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/andreagrandi.it&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;configuration&#34;&gt;Configuration
&lt;/h3&gt;&lt;p&gt;You can find the complete configuration at &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/andreagrandi.it/blob/master/.circleci/config.yml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this address&lt;/a&gt;.
The only value you won&amp;rsquo;t find is &lt;strong&gt;GH_TOKEN&lt;/strong&gt;. You need to generate this token on Github, at this address: &lt;a class=&#34;link&#34; href=&#34;https://github.com/settings/tokens&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/settings/tokens&lt;/a&gt;. Give it a nice description like &amp;ldquo;CircleCI deployment token&amp;rdquo;, select &lt;strong&gt;repo&lt;/strong&gt; scope and finally click &lt;strong&gt;Generate token&lt;/strong&gt; button. This token will be used to &lt;code&gt;git push...&lt;/code&gt;
your pages once they are built. Please remember to keep this token &lt;strong&gt;secret&lt;/strong&gt; and not to publish it anywhere.&lt;/p&gt;
&lt;p&gt;In my configuration you may notice that I&amp;rsquo;m using &lt;a class=&#34;link&#34; href=&#34;https://blog.getpelican.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pelican&lt;/a&gt; static websites generator, but apart from a few changes, the structure of the configuration should be very similar even if you use Jekill, Hugo etc&amp;hellip; it doesn&amp;rsquo;t really matter how you generate the pages, the &lt;strong&gt;deployment phase will be the same&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;deployment-script&#34;&gt;Deployment script
&lt;/h3&gt;&lt;p&gt;You will notice that there is a complete bash script embedded in the CircleCI configuration. This script configures git, fetches the existing &lt;code&gt;andreagrandi.github.io&lt;/code&gt; repository,
and sync the built pages with the existing ones (this avoid creating a commit which contains all the pages so it will contain just the added content). Once the commit is made, the script will finally push the changes to the repository.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; regardless of CircleCI settings, the deployment will only happens if we are pushing (or merging a pull request) to &lt;strong&gt;master&lt;/strong&gt; (&lt;code&gt;if [ &amp;quot;${CIRCLE_BRANCH}&amp;quot; = &amp;quot;master&amp;quot; ]; then&lt;/code&gt;) and it will actually commit and push pages only if there is something new to commit (&lt;code&gt;if git commit -m &amp;quot;CircleCI build $CIRCLE_BUILD_NUM pushed to Github Pages&amp;quot; ; then&lt;/code&gt;). For example if I&amp;rsquo;m just updating something in the CircleCI configuration, which doesn&amp;rsquo;t change anything in the content, the pages won&amp;rsquo;t be deployed again.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;My first impression of CircleCI is that is faster than TravisCI and this means that I can publish my content more quickly. The possibility of using Docker containers as base image is really powerful and in more complex scenarios we can reproduce the building environment locally on our machine. If you have any advices about how to improve my build script, feel free to leave a comment here.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Migrating from WordPress to a static generated website</title>
        <link>https://www.andreagrandi.it/posts/migrating-from-wordpress-to-static-generated-website/</link>
        <pubDate>Sun, 02 Jul 2017 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/migrating-from-wordpress-to-static-generated-website/</guid>
        <description>&lt;p&gt;As you may have noticed, my website looks very different compared to a few days ago.
It&amp;rsquo;s just a different theme or template, I completely changed how the pages are generated and
I&amp;rsquo;m hosting it in a completely different way.&lt;/p&gt;
&lt;h3 id=&#34;a-brief-history&#34;&gt;A brief history
&lt;/h3&gt;&lt;p&gt;When I started this blog 10 years ago, I was hosting it on a shared hosting service and it was based on &lt;strong&gt;WordPress&lt;/strong&gt;.
I then decided to keep WordPress as backend (I don&amp;rsquo;t like PHP very much but I wasn&amp;rsquo;t even good at front end development at the time,
so using a tool that allowed me to concentrate on the content rather than on design was a natural choice for me) but to move my website
to a &lt;strong&gt;VPS&lt;/strong&gt; on &lt;strong&gt;DigitalOcean&lt;/strong&gt;, where I&amp;rsquo;ve self-hosted &lt;strong&gt;Nginx + PHP + MySQL&lt;/strong&gt; and even Postfix for email aliases until a few days ago.&lt;/p&gt;
&lt;h3 id=&#34;why-moving-to-a-static-website&#34;&gt;Why moving to a static website?
&lt;/h3&gt;&lt;p&gt;In these three or four years I&amp;rsquo;ve been using a VPS, I must say I&amp;rsquo;ve been good enough (or maybe lucky?) at keeping &amp;ldquo;bad people&amp;rdquo; out
of my server, but it&amp;rsquo;s true that &lt;strong&gt;maintaining a VPS can be very time consuming&lt;/strong&gt; and you can never be sure that your website is always safe.
I&amp;rsquo;ve heard about static website before, but I was a bit skeptic because I had not spent enough time investigating all the possibilities
(search and comments are still possible, thanks to external services and plugins).&lt;/p&gt;
&lt;p&gt;Another advantage of a static website is that I can perfectly &amp;ldquo;run&amp;rdquo; (preview) on my local computer without publishing it online. Pages can be rendered locally
and will appear in the browser exactly as they will appear once published online.&lt;/p&gt;
&lt;p&gt;If you use a tool like WordPress, you need to be constantly connected to Internet to write any change. With static pages &lt;strong&gt;I can write my content offline&lt;/strong&gt;
(so I can do it while commuting on the train or while I&amp;rsquo;m flying somewhere) and publish it once I&amp;rsquo;m back online.&lt;/p&gt;
&lt;h3 id=&#34;pelican&#34;&gt;Pelican
&lt;/h3&gt;&lt;p&gt;The tool that I&amp;rsquo;m using to generate this website is called &lt;a class=&#34;link&#34; href=&#34;https://blog.getpelican.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pelican&lt;/a&gt;.
There are many &lt;a class=&#34;link&#34; href=&#34;https://www.staticgen.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;static website generators&lt;/a&gt;, the reason why I chose Pelican is because it&amp;rsquo;s written in &lt;strong&gt;Python&lt;/strong&gt;,
so if I need to do any change I can do them and because its templates use Jinja2 which I&amp;rsquo;m already familiar with. It can also import posts from WordPress
(and I had over 180 posts to import from my previous website) so if you are migrating from it it&amp;rsquo;s a good choice. Please note that the import script is not perfect
and that you may have to adjust some formatting here and there.&lt;/p&gt;
&lt;h3 id=&#34;a-new-deployment-pipeline&#34;&gt;A new deployment pipeline
&lt;/h3&gt;&lt;p&gt;When you use WordPress your website is already online and all you have to do is to login, use the integrated editor, write content and finally publish it.
A static website doesn&amp;rsquo;t have any admin tool, it&amp;rsquo;s just static pages. How do you publish content then? There are of course multiple solutions available.
In my case my website source code is hosted in &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/andreagrandi.it&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;a repository on GitHub&lt;/a&gt;. When I commit on &lt;strong&gt;master&lt;/strong&gt; branch
there is a webhook that triggers a &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/andreagrandi.it/blob/master/.travis.yml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;build job&lt;/a&gt; on &lt;a class=&#34;link&#34; href=&#34;https://travis-ci.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TravisCI&lt;/a&gt;.
TravisCI fetches the latest source code, installs Pelican on the CI and builds the static pages. Once the build is finished, a &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/andreagrandi.it/blob/master/deploy.sh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;bash script&lt;/a&gt; is used to &lt;strong&gt;publish&lt;/strong&gt;
the generated pages on the static website hosting service.&lt;/p&gt;
&lt;h3 id=&#34;hosting-a-static-website&#34;&gt;Hosting a static website
&lt;/h3&gt;&lt;p&gt;The good thing about hosting a static website is that you don&amp;rsquo;t need a database so you can host it almost anywhere at a cheaper price or even for free.
In my case I&amp;rsquo;ve decided to use &lt;strong&gt;GitHub pages&lt;/strong&gt;, mainly for simplicity. Every GitHub user can have a static website hosted at &amp;lt;yourusername&amp;gt;.github.io for free.
To start using it, you just have to create a repository named &amp;lt;yourusername&amp;gt;.github.io under your GitHub account. In my case the repository is &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/andreagrandi.github.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/andreagrandi.github.io&lt;/a&gt;. My deploy script simply takes the generated content
that is in the output/ folder and &lt;strong&gt;git push&lt;/strong&gt; it on this repository. Once the website has been pushed to git, it&amp;rsquo;s immediately available at &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://andreagrandi.github.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://andreagrandi.github.io&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;cloudflare&#34;&gt;CloudFlare
&lt;/h4&gt;&lt;p&gt;GitHub Pages service has a little limitation: you can either have your website served from a URL similar to the one I&amp;rsquo;ve just mentioned, including SSL support &lt;em&gt;or&lt;/em&gt; you can use your own domain, but &lt;strong&gt;you can&amp;rsquo;t have both things&lt;/strong&gt; (SSL + custom domain). To workaround this, you can instruct your domain registrar (in my case is &lt;a class=&#34;link&#34; href=&#34;https://www.gandi.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gandi.net&lt;/a&gt;) to let CloudFlare manage your domain and just enabling &amp;ldquo;Full SSL&amp;rdquo; support will do the trick. I won&amp;rsquo;t repeat here how to use CloudFlare since they have a very nice tutorial explaining how to configure their service to be used with GitHub Pages: &lt;a class=&#34;link&#34; href=&#34;https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/&lt;/a&gt;. Remember to include a &lt;strong&gt;CNAME&lt;/strong&gt; file containing your domain name and let your static generetor put it on the root of your website, otherwise GitHub pages won&amp;rsquo;t serve the pages correctly.&lt;/p&gt;
&lt;h4 id=&#34;why-not-amazon-s3&#34;&gt;Why not Amazon S3?
&lt;/h4&gt;&lt;p&gt;While I was looking for instructions about how to host a static websites, I found many examples of websites using Amazon S3. There is nothing wrong with using this service (just keep in mind that it&amp;rsquo;s not free, Amazon charges you for space usage and requests, so keep an eye on the AWS bill) but the way these websites were using it was completely wrong. The most common error I noticed was the fact they were enabling the &lt;strong&gt;flexible SSL&lt;/strong&gt; option on CloudFlare: this means that the connection between the visitor and CloudFlare was encrypted (and visitor could see the the SSL enabled) but the connection between CloudFlare and Amazon S3 was being served with &lt;strong&gt;HTTP only&lt;/strong&gt;, meaning that potentially the pages could have been modified before being served. Infact Amazon doesn&amp;rsquo;t serve the S3 website buckets with SSL, they use plain HTTP (Why are you doing this Amazon?!). To use the S3 bucket correctly one should also configure Route 53 (to manage DNS) and CloudFront (the Amazon equivalent of CloudFlare service, beware because this is also charged separately depending on usage/traffic), making the whole setup a bit more complicated.&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h3&gt;&lt;p&gt;I finally moved away from my VPS and from now on I will be able to concentrate my time on content only instead of spending part of it to maintain my server. Last but not least, the possibility to write my content offline, will hopefully allow me to write from places (train, airplane) where I&amp;rsquo;ve never written from before. If you have any suggestion or if if you notice any error, feel free to leave a comment here below. In alternative, since now this blog is completely open source and on GitHub, you can fork it and make a pull request!&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
