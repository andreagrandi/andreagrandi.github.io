<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Andrea Grandi</title>
        <link>https://www.andreagrandi.it/</link>
        <description>Recent content on Andrea Grandi</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 20 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.andreagrandi.it/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Buy or Rent? RaspberryPi vs VPS</title>
        <link>https://www.andreagrandi.it/posts/buy-or-rent-raspberrypi-vs-vps/</link>
        <pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/buy-or-rent-raspberrypi-vs-vps/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/buy-or-rent-raspberrypi-vs-vps/cover-raspberrypi-vs-vps.png" alt="Featured image of post Buy or Rent? RaspberryPi vs VPS" /&gt;&lt;p&gt;Recently I was planning to self host a service I&amp;rsquo;m using and I was immediately stuck on a decision: &lt;strong&gt;should I just buy a Raspberry Pi 5 or rent a VPS?&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements
&lt;/h2&gt;&lt;p&gt;Let&amp;rsquo;s starts from the basic question: &lt;strong&gt;what specs do I need to run this service?&lt;/strong&gt; Reading around, it seems that something with 4GB of RAM and 20-30 GB of disk could be enough for my needs. Good.&lt;/p&gt;
&lt;h2 id=&#34;costs&#34;&gt;Costs
&lt;/h2&gt;&lt;p&gt;A &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.raspberrypi.com/products/raspberry-pi-5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Raspberry Pi 5&lt;/a&gt; would cost me around 100€&lt;/strong&gt; (including accessories) plus the cost of energy, while &lt;strong&gt;renting a VPS&lt;/strong&gt; with similar characteristics, &lt;strong&gt;would cost me around 4,50€/month&lt;/strong&gt; (I used &lt;a class=&#34;link&#34; href=&#34;https://www.hetzner.com/cloud/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hetzner VPS prices&lt;/a&gt; as reference).&lt;/p&gt;
&lt;p&gt;To compensate costs of purchasing a Raspberry Pi, &lt;strong&gt;I should keep running my service for at least a couple of years&lt;/strong&gt;. After that time, having purchased a Raspberry Pi would come cheaper (if you consider the total cost per month) then keep paying Hetzner.&lt;/p&gt;
&lt;h2 id=&#34;complexity&#34;&gt;Complexity
&lt;/h2&gt;&lt;p&gt;Honestly, both solutions are quite &lt;strong&gt;challenging&lt;/strong&gt; (if you want to do things in the right way) and similar in terms of administration, the main difference would be that in case of a Raspberry Pi, I would have to also include the setup of something like &lt;a class=&#34;link&#34; href=&#34;https://tailscale.com/kb/1223/funnel&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tailscale Funnel&lt;/a&gt;, to be able to expose my device on the public Internet (my provider, Fastweb, doesn&amp;rsquo;t give public IP addresses to every user and most of them are behind a NAT).&lt;/p&gt;
&lt;p&gt;In addition to this, I would also have to do the initial &lt;strong&gt;installation of the operating system&lt;/strong&gt; and the &lt;strong&gt;network configuration&lt;/strong&gt;, but it&amp;rsquo;s surely not the most difficult part.&lt;/p&gt;
&lt;p&gt;Everything else (installing a web server, a database, configuring them, installing and running the service etc&amp;hellip;) would be exactly the same.&lt;/p&gt;
&lt;h2 id=&#34;the-solution&#34;&gt;The solution
&lt;/h2&gt;&lt;p&gt;Both solutions are valid and both have pros and cons. So, what should one do? The best approach is evaluate both of them and pick the one that suits our needs.&lt;/p&gt;
&lt;h2 id=&#34;raspberry-pi-buy&#34;&gt;Raspberry Pi (buy)
&lt;/h2&gt;&lt;p&gt;Let&amp;rsquo;s analyse the case we buy a &lt;strong&gt;Raspberry Pi&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;pros&#34;&gt;Pros
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;You physically own the hardware&lt;/li&gt;
&lt;li&gt;It can be more fun to own an electronic device&lt;/li&gt;
&lt;li&gt;After a couple of years you basically run your service for free (apart from the electricity)&lt;/li&gt;
&lt;li&gt;Your data is definitely private&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cons&#34;&gt;Cons
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Home connection is less reliable than a VPS network&lt;/li&gt;
&lt;li&gt;If the device breaks after two years, you have to buy it from scratch&lt;/li&gt;
&lt;li&gt;A bit more complexity for the initial setup&lt;/li&gt;
&lt;li&gt;If you don&amp;rsquo;t need the service anymore after a couple of months, you are left with an expensive device collecting dust&lt;/li&gt;
&lt;li&gt;Physical hardware gets old: the same Raspberry Pi is unlikely to serve you for many years and you will need to buy a new one every few years&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vps-rent&#34;&gt;VPS (rent)
&lt;/h2&gt;&lt;p&gt;What if we rent a &lt;strong&gt;Virtual Private server&lt;/strong&gt;?&lt;/p&gt;
&lt;h3 id=&#34;pros-1&#34;&gt;Pros
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Your service is always up (even when your local ISP fails)&lt;/li&gt;
&lt;li&gt;You don&amp;rsquo;t have an high initial cost&lt;/li&gt;
&lt;li&gt;If you decide to give up after a couple of months, you have only wasted less than 10€&lt;/li&gt;
&lt;li&gt;Easier initial setup&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cons-1&#34;&gt;Cons
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Your data won&amp;rsquo;t be private&lt;/li&gt;
&lt;li&gt;If you keep running the service after 2 years (or the equivalent considering the cost of the Raspberry Pi) you also keep paying&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;As you can see, &lt;strong&gt;there is no right or wrong solution&lt;/strong&gt;. Depending on our own priorities and preferences, we may choose to buy something or to rent.&lt;/p&gt;
&lt;p&gt;What did I end up choosing for my specific case? Well&amp;hellip; in the end &lt;strong&gt;I found a third solution&lt;/strong&gt; which has some of the benefits of both, it was much easier to configure (I got it up and running in less than 1 hour) and most importantly &lt;strong&gt;costed me 0€&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;But I will talk about it in another post 😉&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Python: it is now() time to migrate from utcnow()</title>
        <link>https://www.andreagrandi.it/posts/python-now-time-to-migrate-from-utcnow/</link>
        <pubDate>Wed, 17 Jul 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/python-now-time-to-migrate-from-utcnow/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/python-now-time-to-migrate-from-utcnow/cover-python-utcnow.png" alt="Featured image of post Python: it is now() time to migrate from utcnow()" /&gt;&lt;p&gt;This morning I randomly found this post from &lt;strong&gt;Miguel Grinberg&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://blog.miguelgrinberg.com/post/it-s-time-for-a-change-datetime-utcnow-is-now-deprecated&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;It&amp;rsquo;s Time For A Change: datetime.utcnow() Is Now Deprecated&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The main point is that Python &lt;code&gt;utcnow()&lt;/code&gt; method is &lt;strong&gt;not timezone aware&lt;/strong&gt;, and &lt;strong&gt;Python 3.12 is deprecating it&lt;/strong&gt;. Therefore, you should start migrating your code to use &lt;code&gt;now()&lt;/code&gt; instead.&lt;/p&gt;
&lt;h2 id=&#34;current-state-until-python-311&#34;&gt;Current state until Python 3.11
&lt;/h2&gt;&lt;p&gt;Until Python 3.11, the &lt;code&gt;utcnow()&lt;/code&gt; method returns a &lt;code&gt;datetime&lt;/code&gt; object, and you would use it like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utcnow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;835551&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The issue with this method is that &lt;strong&gt;it doesn&amp;rsquo;t include timezone information&lt;/strong&gt;, so you can&amp;rsquo;t be certain if the time is in UTC or not.&lt;/p&gt;
&lt;h2 id=&#34;changes-in-python-312&#34;&gt;Changes in Python 3.12
&lt;/h2&gt;&lt;p&gt;In Python 3.12, the &lt;code&gt;utcnow()&lt;/code&gt; method is being deprecated. The new method to use is &lt;code&gt;now()&lt;/code&gt;, with the appropriate parameter to make it timezone aware:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;831261&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tzinfo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;start-migrating-now&#34;&gt;Start migrating now
&lt;/h2&gt;&lt;p&gt;The good news is that &lt;strong&gt;you can start migrating your code now&lt;/strong&gt;, even if you are not using Python 3.12 yet. This way, when you upgrade to Python 3.12, you won&amp;rsquo;t have to worry about this change.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>My curated list of indie blogs</title>
        <link>https://www.andreagrandi.it/posts/my-curated-list-of-indie-blogs/</link>
        <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/my-curated-list-of-indie-blogs/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/my-curated-list-of-indie-blogs/cover-blog-list.webp" alt="Featured image of post My curated list of indie blogs" /&gt;&lt;p&gt;Recently I finally restarted to read indie blogs more regularly. To do that &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/posts/simple-solution-to-read-rss-content-on-ios-macos&#34; &gt;I&amp;rsquo;m using NetNewsWire&lt;/a&gt;, a free and open-source RSS reader for macOS and iOS and every time somone posts an interesting article, for example on Mastodon, I make sure to follow the RSS feed of that blog.&lt;/p&gt;
&lt;p&gt;In a few weeks, I&amp;rsquo;ve collected a list of blogs that I follow and I thought it would be nice to share it with you. I&amp;rsquo;m trying to read less mainstream news and more personal blogs, because I think that the personal touch of a blog is what makes it interesting and unique.&lt;/p&gt;
&lt;h2 id=&#34;some-of-the-blogs-i-follow&#34;&gt;Some of the blogs I follow
&lt;/h2&gt;&lt;p&gt;Here are some of the blogs I follow and recommend. I try to read all the blogs I follow, but these surely are the ones I read more often:&lt;/p&gt;
&lt;h3 id=&#34;brain-barking&#34;&gt;Brain Barking
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Author&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://brainbarking.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;dr. Wouter Groeneveld&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A blog about tech, games and food.&lt;/p&gt;
&lt;h3 id=&#34;jeff-tripletts-microblog&#34;&gt;Jeff Triplett&amp;rsquo;s Micro.blog
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Author&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://micro.webology.dev&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jeff Triplett&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jeff is a DjangoCon organiser and a Python Software Foundation Fellow. He writes about Django, Python, and other tech topics.&lt;/p&gt;
&lt;h3 id=&#34;juha-matti-santala&#34;&gt;Juha-Matti Santala
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Author&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://hamatti.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Juha-Matti Santala&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Juhis writes a lot! About tech, life, and about writing. He often inspires me to write more.&lt;/p&gt;
&lt;h3 id=&#34;terence-edens-blog&#34;&gt;Terence Eden&amp;rsquo;s Blog
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Author&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://shkspr.mobi/blog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Terence Eden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Terence writes about tech, privacy, and other interesting topics.
He often writes about very original gadgets and services and I always learn something new from him.
Bonus point, he&amp;rsquo;s also a very nice person!&lt;/p&gt;
&lt;h3 id=&#34;full-list&#34;&gt;Full list
&lt;/h3&gt;&lt;p&gt;You can find the full list at this address: &lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/andreagrandi/3226460db523a4c60e72f22e9ad896e9&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gist.github.com/andreagrandi/3226460db523a4c60e72f22e9ad896e9&lt;/a&gt; or you can download the OPML file from &lt;a class=&#34;link&#34; href=&#34;curated-blog-list.opml&#34; &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;tell-me-about-your-blog&#34;&gt;Tell me about your blog!
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m always looking for new blogs to follow, especially if they are indie blogs. If you have a blog and you think it&amp;rsquo;s worth reading, &lt;strong&gt;please let me know&lt;/strong&gt; either as a reply on Mastodon, or leaving a comment on the &lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/andreagrandi/3226460db523a4c60e72f22e9ad896e9&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;gist&lt;/a&gt; on GitHub.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Cryptomator: end-to-end encrypt files in any cloud</title>
        <link>https://www.andreagrandi.it/posts/cryptomator-end-to-end-encrypt-files-in-cloud/</link>
        <pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/cryptomator-end-to-end-encrypt-files-in-cloud/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/cryptomator-end-to-end-encrypt-files-in-cloud/man-vault.png" alt="Featured image of post Cryptomator: end-to-end encrypt files in any cloud" /&gt;&lt;p&gt;If you are using a cloud storage service like &lt;strong&gt;Google Drive&lt;/strong&gt;, &lt;strong&gt;Dropbox&lt;/strong&gt;, &lt;strong&gt;OneDrive&lt;/strong&gt;, etc., you should be aware that &lt;strong&gt;your files are not encrypted by default&lt;/strong&gt;. This means that the cloud provider is able to access and, in some cases, even share them with third parties. In case your cloud provider gets hacked, your files could also be exposed to the public.&lt;/p&gt;
&lt;p&gt;To prevent this from happening, you can use a tool like &lt;a class=&#34;link&#34; href=&#34;https://cryptomator.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Cryptomator&lt;/strong&gt;&lt;/a&gt; to automatically encrypt your files before uploading them to the cloud.&lt;/p&gt;
&lt;h2 id=&#34;how-does-it-work&#34;&gt;How does it work?
&lt;/h2&gt;&lt;p&gt;Cryptomator is a &lt;strong&gt;free&lt;/strong&gt; and &lt;strong&gt;open-source&lt;/strong&gt; software that allows you to create an encrypted vault on your computer where you can store your files. Once you have added your files to the vault, Cryptomator will encrypt them using strong encryption algorithms (256 bit AES).&lt;/p&gt;
&lt;p&gt;To be more clear, &lt;strong&gt;Cryptomator doesn&amp;rsquo;t upload your files&lt;/strong&gt;. Your cloud provider application does:&lt;/p&gt;
&lt;p&gt;You write files to the Cryptomator vault -&amp;gt; Cryptomator encrypts them and writes them in a folder which is synced up to your cloud provider -&amp;gt; Your cloud provider application uploads the encrypted files to the cloud.&lt;/p&gt;
&lt;p&gt;When you want to access your files, you simply access them from your mounted vault and Cryptomator will automatically decrypt them for you.&lt;/p&gt;
&lt;p&gt;Once the application is installed, you will see a new volume in your file manager and you will be able to work with your files as if they were on your file system. The cloud provider will only see the encrypted version of them:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/cryptomator-end-to-end-encrypt-files-in-cloud/split-screenshots.png&#34;
	width=&#34;1664&#34;
	height=&#34;975&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;409px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-systems-are-supported&#34;&gt;What systems are supported?
&lt;/h2&gt;&lt;p&gt;Cryptomator is available for most operating systems, including &lt;strong&gt;Windows&lt;/strong&gt;, &lt;strong&gt;MacOS&lt;/strong&gt;, &lt;strong&gt;Linux&lt;/strong&gt;, &lt;strong&gt;Android&lt;/strong&gt; and &lt;strong&gt;iOS&lt;/strong&gt;. This means that you can use it on your desktop computer, laptop, smartphone or tablet. The only limitation is that your cloud provider must have an application for the platform you are using, so you can keep your encrypted files in sync.&lt;/p&gt;
&lt;p&gt;I personally use it to keep my files safe on &lt;strong&gt;pCloud&lt;/strong&gt; and I access them from my Mac, iPhone and iPad. Yes, I&amp;rsquo;m aware that pCloud has its own encryption system, but it comes at an additional cost to the user. I also think that it&amp;rsquo;s safer if they don&amp;rsquo;t have the encryption keys, in case they get hacked.&lt;/p&gt;
&lt;h2 id=&#34;how-much-does-it-cost&#34;&gt;How much does it cost?
&lt;/h2&gt;&lt;p&gt;Cryptomator is &lt;strong&gt;free&lt;/strong&gt; and &lt;strong&gt;open-source&lt;/strong&gt;, which means that you can use it without paying anything. The only application that is not free is the one for iOS, which costs a few dollars if you want to unlock all the features (for example the ability to write files), but you can still use it for free to read files (and there is a demo version available too).&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;If you are using a cloud storage service and you want to keep your files safe and secure, you should definitely consider using Cryptomator. It is easy to use, free and open-source, and you don&amp;rsquo;t have to worry about your cloud provider being 100% safe, because even if your files get leaked, they will be encrypted and no one will be able to read them without the encryption key.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>If your website uses Cloudflare, you can now easily block AI bots</title>
        <link>https://www.andreagrandi.it/posts/use-cloudflare-to-block-ai-bots/</link>
        <pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/use-cloudflare-to-block-ai-bots/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/use-cloudflare-to-block-ai-bots/cloudflare-ai-bots-settings.png" alt="Featured image of post If your website uses Cloudflare, you can now easily block AI bots" /&gt;&lt;p&gt;If you own a website and you don&amp;rsquo;t want AI bots to crawl it and you are already using Cloudflare, you are in luck. &lt;strong&gt;Cloudflare&lt;/strong&gt; has recently added a new feature that allows people to &lt;strong&gt;easily block AI bots&lt;/strong&gt; from crawling their website.&lt;/p&gt;
&lt;h2 id=&#34;setup&#34;&gt;Setup
&lt;/h2&gt;&lt;p&gt;To enable this feature, you need to login to your Cloudflare account, select the website and once you are in the dashboard, go to the &lt;strong&gt;&amp;ldquo;Security&amp;rdquo;&lt;/strong&gt; section and finally click on the &lt;strong&gt;&amp;ldquo;Bots&amp;rdquo;&lt;/strong&gt; link.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/use-cloudflare-to-block-ai-bots/cloudflare-ai-bots-settings-menu.png&#34;
	width=&#34;274&#34;
	height=&#34;328&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;83&#34;
		data-flex-basis=&#34;200px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;From there you need to enable both &lt;strong&gt;&amp;ldquo;Bot Fight Mode&amp;rdquo;&lt;/strong&gt; and &lt;strong&gt;&amp;ldquo;Block AI Scrapers and Crawlers&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Yes, it&amp;rsquo;s that simple! And you will be happy to know that this feature is &lt;strong&gt;available to all Cloudflare users&lt;/strong&gt;, even those on the &lt;strong&gt;free&lt;/strong&gt; plan.&lt;/p&gt;
&lt;h2 id=&#34;does-it-really-work&#34;&gt;Does it really work?
&lt;/h2&gt;&lt;p&gt;According to Cloudflare logs, there seem to be a lot of AI bots trying to crawl my website. Here you can see just a few of them:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/use-cloudflare-to-block-ai-bots/cloudflare-logs-bots.png&#34;
	width=&#34;1038&#34;
	height=&#34;816&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;127&#34;
		data-flex-basis=&#34;305px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In particular you can see a bot coming from Singapore and recognised as &lt;strong&gt;Bytedance&lt;/strong&gt; (the same company that owns TikTok) which are well known for their &lt;a class=&#34;link&#34; href=&#34;https://www.fastcompany.com/90992383/bytedance-tiktok-generative-ai-chatbot-us-regulation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;scraping activities&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/use-cloudflare-to-block-ai-bots/cloudflare-logs-details-bytedance.png&#34;
	width=&#34;1038&#34;
	height=&#34;529&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;470px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Other AI companies, like &lt;strong&gt;PerplexityAI&lt;/strong&gt;, seem to have found a way around these blocks, because if you try to ask Perplexity to summarise one of the pages of this website, it will still be able to do it, but I&amp;rsquo;m sure that Cloudflare will soon find a way to block them too.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;I think people should be able to decide if they want their content to be used by AI models or not and Cloudflare is now providing an easy option to do that. AI tools are not bad per se, but they should not be built using other people&amp;rsquo;s content without their &lt;strong&gt;consent&lt;/strong&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>We need an evolved robots.txt and regulations to enforce it</title>
        <link>https://www.andreagrandi.it/posts/we-need-evolved-robotstxt-and-regulations/</link>
        <pubDate>Sat, 22 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/we-need-evolved-robotstxt-and-regulations/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/we-need-evolved-robotstxt-and-regulations/we-need-new-robots.png" alt="Featured image of post We need an evolved robots.txt and regulations to enforce it" /&gt;&lt;p&gt;The &lt;code&gt;robots.txt&lt;/code&gt; file is a simple text file that tells web robots (like search engine crawlers) which pages on your site to crawl and which not to crawl. It&amp;rsquo;s a &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Robots.txt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;standard&lt;/a&gt; that has been around for a long time and it&amp;rsquo;s still used today.&lt;/p&gt;
&lt;p&gt;Some examples of rules you can put in a &lt;code&gt;robots.txt&lt;/code&gt; file are:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-agent: *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Disallow: /private/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This rule tells all web robots to not crawl the &lt;code&gt;/private/&lt;/code&gt; directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-agent: Googlebot
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Disallow: /users/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This rule tells Googlebot to not crawl the &lt;code&gt;/users/&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2 id=&#34;then-ai-came&#34;&gt;Then AI came
&lt;/h2&gt;&lt;p&gt;In the age of AI, the existing &lt;code&gt;robots.txt&lt;/code&gt; specification is not enough to express the rules for web crawlers. We can only tell agent if they can or cannot crawl a certain path, but we cannot express more complex rules.&lt;/p&gt;
&lt;p&gt;In my opinion we should be able to express more detailed rules, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Indexing:&lt;/strong&gt; should a web crawler be able to index the content?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Caching:&lt;/strong&gt; should a web crawler be able to cache the content?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LLM Training:&lt;/strong&gt; should a web crawler be able to use the content to train a language model?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Summarising:&lt;/strong&gt; should a web crawler be able to summarise the content?&lt;/li&gt;
&lt;li&gt;etc&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of the above things were not possible in the past and it should be up to the website owner to decide if they want their content to be used in such ways.&lt;/p&gt;
&lt;h2 id=&#34;enforcing-the-rules&#34;&gt;Enforcing the rules
&lt;/h2&gt;&lt;p&gt;In addition to more detailed rules, &lt;strong&gt;we need new regulations to enforce them&lt;/strong&gt;. It looks like the &lt;code&gt;robots.txt&lt;/code&gt; file is not enough to stop certain companies from doing what they want.&lt;/p&gt;
&lt;p&gt;As someone &lt;a class=&#34;link&#34; href=&#34;https://rknight.me/blog/perplexity-ai-is-lying-about-its-user-agent/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;recently found out&lt;/a&gt;, &lt;strong&gt;Perplexity AI is using a fake user agent to crawl websites&lt;/strong&gt;, pretending to be a regular user. This is a clear violation of the rules specified in &lt;code&gt;robots.txt&lt;/code&gt; file. This claim has recently been &lt;a class=&#34;link&#34; href=&#34;https://www.wired.com/story/perplexity-is-a-bullshit-machine/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;confirmed by Wired&lt;/a&gt; and by &lt;a class=&#34;link&#34; href=&#34;https://www.macstories.net/stories/wired-confirms-perplexity-is-bypassing-efforts-by-websites-to-block-its-web-crawler/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MacStories&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;As we have seen, having good rules is not enough if they are not enforced. In particular we need regulators to take care of complaints from content owners and &lt;strong&gt;fine companies that do not respect the rules&lt;/strong&gt; (like Perplexity AI), because small content creators cannot afford to take legal actions against big companies.&lt;/p&gt;
&lt;p&gt;As with every single thing, it&amp;rsquo;s never &amp;ldquo;the tool&amp;rdquo;, but rather &amp;ldquo;how you use it&amp;rdquo;. AI itself can bring innovation in certain fields, but this can&amp;rsquo;t be done at the expense of other people&amp;rsquo;s work and rights.&lt;/p&gt;
&lt;h3 id=&#34;disclaimer&#34;&gt;Disclaimer
&lt;/h3&gt;&lt;p&gt;Yes, of course the cover image has been generated with AI. It&amp;rsquo;s far from perfect, but it&amp;rsquo;s still better than my drawing skills. The content of this article instead is 100% human generated.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Simple and free solution to read content from RSS feeds on iOS and MacOS</title>
        <link>https://www.andreagrandi.it/posts/simple-solution-to-read-rss-content-on-ios-macos/</link>
        <pubDate>Tue, 04 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/simple-solution-to-read-rss-content-on-ios-macos/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/simple-solution-to-read-rss-content-on-ios-macos/rss-sync-cover.webp" alt="Featured image of post Simple and free solution to read content from RSS feeds on iOS and MacOS" /&gt;&lt;p&gt;Reading news and blog posts can be quite time consuming if we manually go to news websites to check if something new is out or if we spend all day checking social media, waiting for people we follow to post their latest article.&lt;/p&gt;
&lt;p&gt;An efficient way to fetch new content is to follow the news sites and the blogs we want, using their &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/RSS&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RSS&lt;/a&gt; feed.&lt;/p&gt;
&lt;p&gt;What is the best way to do this for iOS and MacOS? &lt;strong&gt;There is no &amp;ldquo;best&amp;rdquo; way&lt;/strong&gt;, since there are plenty of RSS clients and combinations of services, but I will tell you a simple and free solution I&amp;rsquo;m using.&lt;/p&gt;
&lt;h2 id=&#34;netnewswire-and-icloud-sync&#34;&gt;NetNewsWire and iCloud sync
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/simple-solution-to-read-rss-content-on-ios-macos/netnewsfeed-main.png&#34;
	width=&#34;2360&#34;
	height=&#34;1640&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;345px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The client I&amp;rsquo;m using is &lt;a class=&#34;link&#34; href=&#34;https://netnewswire.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NetNewsWire&lt;/a&gt;. It&amp;rsquo;s &lt;strong&gt;free&lt;/strong&gt;, &lt;strong&gt;open source&lt;/strong&gt; and available for both &lt;strong&gt;iOS&lt;/strong&gt; and &lt;strong&gt;MacOS&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This client supports different synchronisation services, including &lt;strong&gt;iCloud&lt;/strong&gt;, &lt;strong&gt;FeedBin&lt;/strong&gt; and &lt;strong&gt;Inoreader&lt;/strong&gt; or it can be used just on a single device, without using any of these services.&lt;/p&gt;
&lt;p&gt;I initially tried using Inoreader and it was &amp;ldquo;ok&amp;rdquo;, but it&amp;rsquo;s a paid service which injects ads in its free plan. Also, its cheaper paid plan only removes ads, without offering any additional value. I really couldn&amp;rsquo;t justify paying a subscription just to keep my feeds synced across devices, so &lt;strong&gt;I opted to use iCloud&lt;/strong&gt; which, in my case, is exactly what I need and I don&amp;rsquo;t have to purchase any additional plan (I&amp;rsquo;m already on a paid plan, but even the free plan is enough for this).&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m sure there are better solutions around (especially RSS clients) and I would be glad to hear about them, but for now this simple client and iCloud is all I need to enjoy the news and read blog posts.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Truncating time when querying a PostgreSQL database</title>
        <link>https://www.andreagrandi.it/posts/truncating-time-in-postgresql-query/</link>
        <pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/truncating-time-in-postgresql-query/</guid>
        <description>&lt;p&gt;When you have to compare dates in a SQL query, you often want to ignore the time part. For example if you have two very common fields like &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; and you want to know if they are the same day, you have to &lt;strong&gt;truncate the time part&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;How to do this depends on the database you are using. Here is how you can do it in &lt;strong&gt;PostgreSQL&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;DATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;created_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;DATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;updated_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;created_at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DESC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This query will return all the users where the &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; fields are not on the same day, ignoring the time part.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>AI won’t take your Software Developer job (not yet)</title>
        <link>https://www.andreagrandi.it/posts/ai-wont-take-your-job-yet/</link>
        <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/ai-wont-take-your-job-yet/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/ai-wont-take-your-job-yet/ai-doing-developers-work-cover.webp" alt="Featured image of post AI won’t take your Software Developer job (not yet)" /&gt;&lt;p&gt;In the last 3 days I had the opportunity to participate to an internal hackathon organised by the company I work for.&lt;/p&gt;
&lt;p&gt;We had to build a project based on an SDK and the needed skills to build it were those of a frontend developer.&lt;/p&gt;
&lt;p&gt;Being a backend developer and having very basic (almost none) frontend skills, I was suggested to use ChatGPT to write some of the code.&lt;/p&gt;
&lt;h2 id=&#34;challenge-accepted&#34;&gt;Challenge accepted
&lt;/h2&gt;&lt;p&gt;Of course I accepted and I worked on the project with another colleague (also backend developer) who also used ChatGPT to write some of the code.&lt;/p&gt;
&lt;h2 id=&#34;how-i-normally-use-chatgpt&#34;&gt;How I normally use ChatGPT
&lt;/h2&gt;&lt;p&gt;ChatGPT is not new to me. I use it daily for my work, but I mostly use it as a &amp;ldquo;search engine on steroids&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Rather than searching something on a search engine, read a few blog posts or forums, then landing on a Stack Overflow page, to find some code and adapt it, I ask the same question to ChatGPT and then I adapt the produced example.&lt;/p&gt;
&lt;p&gt;I never ask for a complete feature or even a whole method. I usually need a small example for a very specific thing which I then insert in an existing code base.&lt;/p&gt;
&lt;h2 id=&#34;how-i-used-it-for-the-hackathon&#34;&gt;How I used it for the hackathon
&lt;/h2&gt;&lt;p&gt;In the case of the hackathon, I knew what I wanted to achieve, but I had no idea how to do it, so I asked it to produce almost everything I needed.&lt;/p&gt;
&lt;p&gt;At the beginning it was easy: I had nothing and I was adding small pieces every time.&lt;/p&gt;
&lt;p&gt;After a little bit I ended up with a lot of code I couldn&amp;rsquo;t understand anymore.&lt;/p&gt;
&lt;p&gt;I was having an issue with the produced code and ChatGPT, instead of helping, started to allucinate.&lt;/p&gt;
&lt;p&gt;Instead of asking it to fix a specific issue, I was passing back the whole JavaScript file, asking for the issues to be corrected.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t notice that while fixing the issues, ChatGPT was also rewriting the whole file and in a couple of occasions it started changing the logic entirely.&lt;/p&gt;
&lt;p&gt;The errors disappeared but the code started behaving differently.&lt;/p&gt;
&lt;p&gt;In the end we had to revert to a simpler and older version of our code, which at least was working correctly.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;I remain confident that tools like ChatGPT can be valuable assets for software developers, provided they already possess a strong understanding of the relevant domain, such as Python backend development in my experience.&lt;/p&gt;
&lt;p&gt;However, for areas outside one&amp;rsquo;s expertise, such as frontend development, relying solely on ChatGPT is insufficient.&lt;/p&gt;
&lt;p&gt;What is your experience with similar tools? Let me know in the comments.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Using AI tools for coding: good or bad?</title>
        <link>https://www.andreagrandi.it/posts/using-ai-tools-for-coding-good-or-bad/</link>
        <pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/using-ai-tools-for-coding-good-or-bad/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/using-ai-tools-for-coding-good-or-bad/ai-tools-cover.webp" alt="Featured image of post Using AI tools for coding: good or bad?" /&gt;&lt;p&gt;Every now and then, my Mastodon or LinkedIn timelines are full of messages either praising or condemning the use of AI tools for coding.&lt;/p&gt;
&lt;p&gt;Are they &lt;strong&gt;good or bad&lt;/strong&gt; then? As usual I think the truth is in the middle, or to be more precise: &lt;strong&gt;it depends on how you use them&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;context&#34;&gt;Context
&lt;/h2&gt;&lt;p&gt;In the last couple of years, thanks to the advancements in the field of &lt;strong&gt;Large Language Models&lt;/strong&gt; (also known as &lt;strong&gt;Generative AI&lt;/strong&gt;) a few &amp;ldquo;AI tools&amp;rdquo; have been made available, to help developers with coding tasks.&lt;/p&gt;
&lt;p&gt;Tools like &lt;strong&gt;GitHub Copilot&lt;/strong&gt; or &lt;strong&gt;ChatGPT&lt;/strong&gt; are being used more frequently by developers. They can either open &lt;strong&gt;new possibilities&lt;/strong&gt; (like helping us to write code in a language we are not familiar with) or just &lt;strong&gt;speed up tasks&lt;/strong&gt; we would do in a different (often slower) way.&lt;/p&gt;
&lt;h2 id=&#34;beware-of-hallucinations&#34;&gt;Beware of hallucinations
&lt;/h2&gt;&lt;p&gt;Before we get into good or bad examples, it&amp;rsquo;s important to remember that by definition, LLMs (large language models) can &lt;strong&gt;hallucinate&lt;/strong&gt;, which means that under certain conditions (which can occur unexpectedly) the &lt;strong&gt;model can make certain things up&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Even ChatGPT reminds us about this, infact at the bottom of every page you will find:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ChatGPT can make mistakes. Consider checking important information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;an-example-of-good-usage&#34;&gt;An example of Good usage
&lt;/h2&gt;&lt;p&gt;Before the existance of ChatGPT, whenever I had to do something I didn&amp;rsquo;t know exactly how to do it, my first &amp;ldquo;go-to&amp;rdquo; tool was Google.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Example: &amp;ldquo;How do I find duplicated SQL rows with the same field?&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I would search the thing I wanted to do, read a couple of blog posts talking about the subject, figure out if something was possible and then refining my search to find some code examples (usually on Stack Overflow) which then I had to adapt to my existing code base, after reading some documentation.&lt;/p&gt;
&lt;p&gt;Asking the &lt;strong&gt;same question to ChatGPT produced a correct&lt;/strong&gt; (at least in my case) &lt;strong&gt;SQL query along with an explanation&lt;/strong&gt; of the syntax being used (I tested this query on a local database, adapting field names to my own and it produced the expected result).&lt;/p&gt;
&lt;p&gt;I still had to adapt the produced code to my needs (renaming fields, inserting this script in a larger context etc&amp;hellip;) but I certainly &lt;strong&gt;saved a lot of time&lt;/strong&gt; compared to the previous workflow.&lt;/p&gt;
&lt;p&gt;AI tools are &lt;strong&gt;like driving assistance systems&lt;/strong&gt;: &lt;strong&gt;they are not supposed to drive for you&lt;/strong&gt;, but they will help you to maintain the correct distance from the front vehicle, stay below the speed limits, warn you of you start overtaking a car when another one is close behind you etc&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;AI tools can be very helpful with coding tasks. Like any tool, we are in charge of using them correctly and ensuring the end result is accurate. Paying attention to avoid introducing false information or non working code is crucial.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>iA Writer Authorship: a brilliant feature with a problematic implementation</title>
        <link>https://www.andreagrandi.it/posts/ia-writer-authorship-brilliant-feature-problematic-implementation/</link>
        <pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/ia-writer-authorship-brilliant-feature-problematic-implementation/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/ia-writer-authorship-brilliant-feature-problematic-implementation/ia-writer-authorship-cover.webp" alt="Featured image of post iA Writer Authorship: a brilliant feature with a problematic implementation" /&gt;&lt;p&gt;I recently started using &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://ia.net/writer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;iA Writer&lt;/a&gt;&lt;/strong&gt; to edit my MarkDown files on iPad and I&amp;rsquo;m honestly quite impressed by its simplicity.&lt;/p&gt;
&lt;p&gt;With the latest version they introduced a feature called &lt;a class=&#34;link&#34; href=&#34;https://ia.net/writer/support/editor/authorship&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Authorship&lt;/a&gt; which basically helps you to keep track of external contributors.&lt;/p&gt;
&lt;p&gt;For example, suppose you asked a friend (or even ChatGPT) to write a conclusion for one of your articles, you copy-paste the text on your article and you start editing it. How do you keep track of what you or the other source wrote? With the Authorship feature, text edited by you will be rendered in a different way, so you can distinguish it.&lt;/p&gt;
&lt;p&gt;I think this is a brilliant idea and even if I don&amp;rsquo;t make much usage of GPT to write my posts (almost none so far), I may use it in the future.&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The problem
&lt;/h2&gt;&lt;p&gt;The problem with this feature is that if you enable it for one of your documents, iA Writer will add an &amp;ldquo;hidden&amp;rdquo; &lt;code&gt;Authorship&lt;/code&gt; section at the end of the file.&lt;/p&gt;
&lt;p&gt;This section won&amp;rsquo;t be visible in iA while editing the text, but it will be visible in any other editor.&lt;/p&gt;
&lt;p&gt;In my case, I plan to use iA Writer to write my blog posts, which I then push to GitHub using &lt;a class=&#34;link&#34; href=&#34;https://workingcopy.app/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Working Copy&lt;/a&gt;, where they are finally transformed by Hugo to my static website.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unless I edit the file with a different editor&lt;/strong&gt;, if I submit my article as is, &lt;strong&gt;Hugo&lt;/strong&gt; (but even Pelican, or Jekyll etc&amp;hellip; basically any engine which doesn&amp;rsquo;t know how to handle this block of information) &lt;strong&gt;will render the Authorship block into the final HTML page&lt;/strong&gt;, which is something nobody really wants.&lt;/p&gt;
&lt;h2 id=&#34;possible-solutions&#34;&gt;Possible solutions
&lt;/h2&gt;&lt;p&gt;I asked iA people on Mastodon about this issue and &lt;a class=&#34;link&#34; href=&#34;https://mastodon.online/@ia/112037948788436778&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;they told me&lt;/a&gt; they had considered different options but in any case something will break for someone.&lt;/p&gt;
&lt;p&gt;I agree, it&amp;rsquo;s not easy to find a solution which can cover every possible case, but I still think there could be margin for improvement.&lt;/p&gt;
&lt;h3 id=&#34;saving-authorship-in-an-external-file&#34;&gt;Saving Authorship in an external file
&lt;/h3&gt;&lt;p&gt;If these additional data was saved in an external file, it would be much easier to exclude it from the built pages. By the way, this would mean spreading the information across different files, making it more difficult to maintain.&lt;/p&gt;
&lt;h3 id=&#34;using-yaml-metadata&#34;&gt;Using YAML metadata
&lt;/h3&gt;&lt;p&gt;Adding the Authorship as metadata could be the best option, for a couple of reasons.&lt;/p&gt;
&lt;p&gt;iA Writer already makes use of YAML metadata where you can add information, so existing users would be used to see something at the beginning of the file which is not their content.&lt;/p&gt;
&lt;p&gt;Any unknown metadata is usually ignored by static websites generators (at least Hugo and Pelican behave in this way) so the Authorship won&amp;rsquo;t be rendered in the final HTML page.&lt;/p&gt;
&lt;h2 id=&#34;a-workaround-for-hugo&#34;&gt;A workaround for Hugo
&lt;/h2&gt;&lt;p&gt;While I hope iA will consider giving alternative options in the future, I&amp;rsquo;ve written a simple script you can use to remove all Authorship blocks from any MarkDown file found in your content.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/andreagrandi/800e5e33ec05f8d51f61a1cdc4fc4d91.js?file=strip-annotation.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Please note that this will remove any Authorship block from your MarkDown files, even if you include them in a code block. If you want to improve the script, feel free to do it and let me know.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;The introduction of the Authorship feature in iA Writer presents a creative solution for managing and distinguishing between original content and external contributions within documents.&lt;/p&gt;
&lt;p&gt;While the feature offers significant advantages for content creators seeking to track their collaborations, it also introduces challenges, particularly in the integration with static site generators like Hugo.&lt;/p&gt;
&lt;p&gt;My advice is that, as users, we give some &lt;strong&gt;constructive feedback&lt;/strong&gt; to iA (you can contact them at &lt;code&gt;support+newfeature@ia.net&lt;/code&gt;) to let them know how to improve this feature.&lt;/p&gt;
&lt;p&gt;Additionally, if you are more familiar with GitHub, you can discuss this specific feature directly in their &lt;a class=&#34;link&#34; href=&#34;https://github.com/iainc/Markdown-Annotations&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;repository&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Self hosting a Copilot replacement: my personal experience</title>
        <link>https://www.andreagrandi.it/posts/self-hosting-copilot-replacement/</link>
        <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/self-hosting-copilot-replacement/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/self-hosting-copilot-replacement/self-hosting-copilot-cover.webp" alt="Featured image of post Self hosting a Copilot replacement: my personal experience" /&gt;&lt;p&gt;For my job (Software Developer) I make a daily use of tools like &lt;a class=&#34;link&#34; href=&#34;https://github.com/features/copilot&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Copilot&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://chat.openai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ChatGPT&lt;/a&gt;. I want to explore alternative solutions which can be hosted autonomusly, without relying on an external service.&lt;/p&gt;
&lt;h2 id=&#34;disclaimer&#34;&gt;Disclaimer
&lt;/h2&gt;&lt;p&gt;Before I continue, let me clarify that these are &lt;strong&gt;tools&lt;/strong&gt; which makes my job faster, they don&amp;rsquo;t do the job for me: a wrong assumption made by so many people is that AI tools will do the work for you.&lt;/p&gt;
&lt;p&gt;This is quite &lt;strong&gt;not true&lt;/strong&gt;. You are still responsible of knowing what to do, understanding the problem, asking the right questions and knowing what to do with the answers.&lt;/p&gt;
&lt;p&gt;If you regularly search for stuff on Google or any other engine, to find examples in blog posts or Stack Overflow, read someone else example and then adapt the code for your needs, there is nothing wrong automating this: &lt;strong&gt;you are still in charge of the final result&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-experiment&#34;&gt;The experiment
&lt;/h2&gt;&lt;p&gt;After I recently experimented with &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/posts/ollama-running-llm-locally/&#34; &gt;local LLMs using Ollama&lt;/a&gt;, I wanted to figure out if I could use some of these models to &lt;strong&gt;replace GitHub Copilot&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;My intent is not to save some money (my company pays for these tools) or for privacy reasons (it would be pointless to keep your code &amp;ldquo;secret&amp;rdquo; from GitHub if you use it to host it), but to &lt;strong&gt;find out how good these alternative tools are&lt;/strong&gt; and&amp;hellip; for fun!&lt;/p&gt;
&lt;h2 id=&#34;setup-and-available-resources&#34;&gt;Setup and available resources
&lt;/h2&gt;&lt;p&gt;The laptop I&amp;rsquo;m using is a MacBook Pro with &lt;strong&gt;M2 Pro&lt;/strong&gt; CPU and &lt;strong&gt;32 GB RAM&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This machine must be able to run my basic &lt;strong&gt;requirements&lt;/strong&gt;, which are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slack&lt;/li&gt;
&lt;li&gt;Docker (running my work containers)&lt;/li&gt;
&lt;li&gt;VSCode&lt;/li&gt;
&lt;li&gt;Safari / Chrome&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;rsquo;s see if it can also run a Copilot replacement.&lt;/p&gt;
&lt;h2 id=&#34;tested-models-and-extensions&#34;&gt;Tested models and extensions
&lt;/h2&gt;&lt;p&gt;Basically, to run a Copilot replacement, you need to be able to run an LLM and use one of the available extensions for VSCode (in my case I use VSCode, but similar extensions exist for other IDEs).&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m running the models locally using &lt;a class=&#34;link&#34; href=&#34;https://ollama.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ollama&lt;/a&gt;. If you need to know how to use it, you can refer to my &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/posts/ollama-running-llm-locally/&#34; &gt;previous post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;models&lt;/strong&gt; I tested are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stable-code:3b-code-q4_0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;codellama:7b-code-q4_K_M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;codellama:13b-code-q4_K_M&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The number before the &lt;code&gt;b&lt;/code&gt; usually represents the number of parameters (&lt;strong&gt;3 billions&lt;/strong&gt;, &lt;strong&gt;7 billions&lt;/strong&gt;, &lt;strong&gt;13 billions&lt;/strong&gt; etc&amp;hellip;) and you approximately need &lt;strong&gt;4 GB&lt;/strong&gt;, &lt;strong&gt;8 GB&lt;/strong&gt; and &lt;strong&gt;16 GB RAM&lt;/strong&gt; to use them.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://about.meta.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Meta&lt;/a&gt; has released models with &lt;strong&gt;34 billions&lt;/strong&gt; and &lt;strong&gt;70 billions&lt;/strong&gt; parameters, which are even more powerful, and you can find them here: &lt;a class=&#34;link&#34; href=&#34;https://ollama.com/library/codellama&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ollama.com/library/codellama&lt;/a&gt; but you will need &lt;strong&gt;64-128 GB RAM&lt;/strong&gt; to run them properly.&lt;/p&gt;
&lt;p&gt;The extensions I tested are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LLama Coder&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=ex3ndr.llama-coder&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://marketplace.visualstudio.com/items?itemName=ex3ndr.llama-coder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Code GPT&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=DanielSanMedium.dscodegpt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://marketplace.visualstudio.com/items?itemName=DanielSanMedium.dscodegpt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;twinny&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=rjmacarthy.twinny&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://marketplace.visualstudio.com/items?itemName=rjmacarthy.twinny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;results&#34;&gt;Results
&lt;/h2&gt;&lt;p&gt;The results I got have been quite mixed and &lt;strong&gt;mostly depending on the LLM model&lt;/strong&gt; I was testing, rather than on the extension I was using.&lt;/p&gt;
&lt;p&gt;A model like &lt;code&gt;stable-code:3b-code-q4_0&lt;/code&gt; was quite &lt;strong&gt;fast&lt;/strong&gt; to complete the code I was typing, &lt;strong&gt;but very often&lt;/strong&gt; giving me &lt;strong&gt;wrong&lt;/strong&gt; code or pure garbage (ie: the model wasn&amp;rsquo;t even able to correctly structure a simple Python method or to maintain the correct indentation)&lt;/p&gt;
&lt;p&gt;Models like &lt;code&gt;codellama:7b-code-q4_K_M&lt;/code&gt; or &lt;code&gt;codellama:13b-code-q4_K_M&lt;/code&gt; were giving me &lt;strong&gt;better results&lt;/strong&gt; but despite having 32 GB RAM available and a quite fast CPU, they were &lt;strong&gt;taking 3-4 seconds&lt;/strong&gt; to complete what I was typing, making themselves useless (at least for my use case).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;None of them was even remotely close to the speed and accuracy of GitHub Copilot&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;While the idea of having a personal and private instance of a code assistant is interesting (and can also be the only available option in certain environments), &lt;strong&gt;the reality is that achieving the same level of performance as GitHub Copilot is quite challenging&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Despite these challenges, I think with time both available models and extensions &lt;strong&gt;will get better&lt;/strong&gt; and better, improving their quality and maybe reducing the amount of required resources.&lt;/p&gt;
&lt;p&gt;In case I missed some better model or extension, please feel free to &lt;strong&gt;let me know&lt;/strong&gt; in the comments. I will be glad to do more tests and update this posts or write a new one in the future.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In the mean time&lt;/strong&gt;, at least for my personale usage, I think I will &lt;strong&gt;stick with GitHub Copilot&lt;/strong&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Ollama: running Large Language Models locally</title>
        <link>https://www.andreagrandi.it/posts/ollama-running-llm-locally/</link>
        <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/ollama-running-llm-locally/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/ollama-running-llm-locally/ollama-cover.webp" alt="Featured image of post Ollama: running Large Language Models locally" /&gt;&lt;p&gt;I recently discovered a new tool called &lt;strong&gt;Ollama&lt;/strong&gt;, which allows you to run &lt;strong&gt;Large Language Models&lt;/strong&gt; (LLMs) locally, without the need of a cloud service. Its usage is similar to Docker, but it&amp;rsquo;s specifically designed for LLMs. You can use it as an &lt;strong&gt;interactive shell&lt;/strong&gt;, through its &lt;strong&gt;REST API&lt;/strong&gt; or using it from a &lt;strong&gt;Python&lt;/strong&gt; library.&lt;/p&gt;
&lt;h2 id=&#34;what-is-ollama&#34;&gt;What is Ollama?
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://ollama.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ollama&lt;/a&gt; is a tool to run and manage Large Language Models locally. It&amp;rsquo;s designed to be easy to use and to be used in different ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Interactive shell&lt;/strong&gt;: you can run Ollama as a shell and interact with it, you will be able to chat with it, ask questions, and simulate a conversation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: you can run Ollama as a service and send requests to it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python library&lt;/strong&gt;: you can use Ollama from your Python code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-does-it-work&#34;&gt;How does it work?
&lt;/h2&gt;&lt;p&gt;After you installa Ollama, you can start chatting with it by simply using this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ollama run llama2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;ollama&lt;/code&gt; will pull the &lt;code&gt;llama2&lt;/code&gt; model from the cloud and start the interactive shell. You can then start chatting with it.&lt;/p&gt;
&lt;h3 id=&#34;demo&#34;&gt;Demo
&lt;/h3&gt;&lt;script src=&#34;https://asciinema.org/a/644736.js&#34; id=&#34;asciicast-644736&#34; async&gt;&lt;/script&gt;
&lt;h2 id=&#34;using-it-through-its-rest-api&#34;&gt;Using it through its REST API
&lt;/h2&gt;&lt;p&gt;Ollama comes with an included &lt;strong&gt;REST API&lt;/strong&gt; which you can use to send requests to it. For example to send a question to the &lt;code&gt;llama2:13b-chat&lt;/code&gt; model you can use the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl http://localhost:11434/api/generate -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  &amp;#34;model&amp;#34;: &amp;#34;llama2:13b-chat&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  &amp;#34;prompt&amp;#34;: &amp;#34;What can you tell me about Pink Floyd?&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  &amp;#34;stream&amp;#34;: false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;the response will be a &lt;strong&gt;JSON&lt;/strong&gt; object with the generated text, like this one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;model&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;llama2:13b-chat&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;created_at&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;2024-03-01T17:23:39.094249Z&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;response&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;\nAh, Pink Floyd! One of the most iconic and influential rock bands of all time. The band was formed in 1965 by students Syd Barrett, Nick Mason, Roger Waters, and Richard Wright at the University of Cambridge. They began as a folk-rock group, but soon developed their own unique sound that blended psychedelic rock, progressive rock, and experimental music.\n\nPink Floyd is known for their immersive live shows, elaborate album artwork, and thought-provoking lyrics. Their music explores themes such as life, death, technology, and the human condition. Some of their most famous albums include \&amp;#34;The Dark Side of the Moon,\&amp;#34; \&amp;#34;Wish You Were Here,\&amp;#34; and \&amp;#34;The Wall.\&amp;#34;\n\nSyd Barrett, the band&amp;#39;s primary songwriter and lead vocalist, left the band in 1968 due to mental health issues. Roger Waters, who took over as the main songwriter and bassist, became the driving force behind the band&amp;#39;s sound and vision. David Gilmour, a guitarist and vocalist, joined the band in 1967 and remained a key member until the band&amp;#39;s breakup in 1996.\n\nPink Floyd released several critically acclaimed and commercially successful albums throughout their career, including \&amp;#34;Atom Heart Mother,\&amp;#34; \&amp;#34;Meddle,\&amp;#34; \&amp;#34;Obscured by Clouds,\&amp;#34; and \&amp;#34;The Final Cut.\&amp;#34; They are considered one of the greatest rock bands of all time, with a legacy that continues to inspire new generations of musicians and fans.\n\nSome of Pink Floyd&amp;#39;s most famous songs include \&amp;#34;Comfortably Numb,\&amp;#34; \&amp;#34;Another Brick in the Wall (Part 2),\&amp;#34; \&amp;#34;Wish You Were Here,\&amp;#34; and \&amp;#34;Shine On You Crazy Diamond.\&amp;#34; Their music has been covered by countless artists, and their influence can be heard in many different genres of music.\n\nPink Floyd&amp;#39;s live shows were known for their elaborate light shows, lasers, and pyrotechnics. They performed at numerous iconic venues, including the London Coliseum, the Royal Albert Hall, and the Earls Court Exhibition Centre. The band also made several memorable appearances at festivals such as the Bath Festival of Blues and Progressive Music and the Knebworth Festival.\n\nIn 1986, Pink Floyd released \&amp;#34;The Wall,\&amp;#34; a rock opera based on Roger Waters&amp;#39; experiences in school and his feelings about isolation and disillusionment. The album was a huge commercial success and spawned several hit singles, including \&amp;#34;Another Brick in the Wall (Part 2)\&amp;#34; and \&amp;#34;Comfortably Numb.\&amp;#34;\n\nPink Floyd continued to experiment with new sounds and techniques throughout their career. They incorporated elements of electronic music, synthesizers, and sound effects into their recordings, creating a distinctive and innovative sound. The band&amp;#39;s final studio album, \&amp;#34;The Division Bell,\&amp;#34; was released in 1994 and marked the end of Pink Floyd&amp;#39;s active career.\n\nOverall, Pink Floyd is a groundbreaking and influential rock band that has left an indelible mark on the music world. Their unique sound, thought-provoking lyrics, and iconic live shows have made them one of the most beloved and enduring bands of all time.&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;done&amp;#34;&lt;/span&gt;:true,&lt;span class=&#34;s2&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;518,25580,29962,3532,14816,29903,29958,5299,829,14816,29903,6778,13,13,5618,508,366,2649,592,1048,349,682,383,18966,29973,518,29914,25580,29962,13,13,17565,29892,349,682,383,18966,29991,3118,310,278,1556,9849,293,322,7112,2556,7679,22706,310,599,931,29889,450,3719,471,8429,297,29871,29896,29929,29953,29945,491,8041,13923,2261,13158,29892,13853,28095,29892,14159,399,10412,29892,322,6123,22927,472,278,3014,310,12585,29889,2688,4689,408,263,19589,29899,20821,2318,29892,541,4720,8906,1009,1914,5412,6047,393,1999,2760,11643,287,295,293,7679,29892,6728,573,7679,29892,322,17986,4696,29889,13,13,29925,682,383,18966,338,2998,363,1009,5198,414,573,5735,3697,29892,19430,3769,1616,1287,29892,322,2714,29899,16123,17223,26627,1199,29889,11275,4696,3902,2361,963,267,1316,408,2834,29892,4892,29892,15483,29892,322,278,5199,4195,29889,3834,310,1009,1556,13834,20618,3160,376,1576,15317,19160,310,278,17549,1699,376,29956,728,887,399,406,2266,1699,322,376,1576,14406,1213,13,13,29903,2941,2261,13158,29892,278,3719,29915,29879,7601,4823,13236,322,3275,20982,391,29892,2175,278,3719,297,29871,29896,29929,29953,29947,2861,304,19119,9045,5626,29889,14159,399,10412,29892,1058,3614,975,408,278,1667,4823,13236,322,12760,391,29892,3897,278,19500,4889,5742,278,3719,29915,29879,6047,322,18551,29889,4699,11788,29885,473,29892,263,11210,391,322,20982,391,29892,8772,278,3719,297,29871,29896,29929,29953,29955,322,9488,263,1820,4509,2745,278,3719,29915,29879,2867,786,297,29871,29896,29929,29929,29953,29889,13,13,29925,682,383,18966,5492,3196,3994,1711,1035,13190,322,7825,5584,9150,20618,10106,1009,6413,29892,3704,376,4178,290,17778,21869,1699,376,19302,29881,280,1699,376,6039,1557,2955,491,14293,29879,1699,322,376,1576,9550,315,329,1213,2688,526,5545,697,310,278,14176,7679,22706,310,599,931,29892,411,263,25000,393,18172,304,8681,533,716,1176,800,310,2301,14722,322,24909,29889,13,13,9526,310,349,682,383,18966,29915,29879,1556,13834,12516,3160,376,1523,3921,2197,405,3774,1699,376,2744,1228,1771,860,297,278,14406,313,7439,29871,29906,511,29908,376,29956,728,887,399,406,2266,1699,322,376,2713,457,1551,887,14279,1537,22904,898,1213,11275,4696,756,1063,10664,491,2302,2222,17906,29892,322,1009,9949,508,367,6091,297,1784,1422,2531,690,310,4696,29889,13,13,29925,682,383,18966,29915,29879,5735,3697,892,2998,363,1009,19430,3578,3697,29892,1869,414,29892,322,11451,4859,3049,1199,29889,2688,8560,472,12727,9849,293,6003,1041,29892,3704,278,4517,1530,895,398,29892,278,7021,10537,6573,29892,322,278,5290,3137,9245,1222,6335,654,11319,29889,450,3719,884,1754,3196,26959,519,21712,472,29482,1338,1316,408,278,28256,8518,310,23434,322,20018,573,6125,322,278,476,484,29890,12554,8518,29889,13,13,797,29871,29896,29929,29947,29953,29892,349,682,383,18966,5492,376,1576,14406,1699,263,7679,14495,2729,373,14159,399,10412,29915,27482,297,3762,322,670,21737,1048,11695,362,322,766,453,3958,358,29889,450,3769,471,263,12176,12128,2551,322,29178,287,3196,7124,22102,29892,3704,376,2744,1228,1771,860,297,278,14406,313,7439,29871,29906,5513,322,376,1523,3921,2197,405,3774,1213,13,13,29925,682,383,18966,7572,304,7639,411,716,10083,322,13698,10106,1009,6413,29889,2688,11039,630,3161,310,27758,4696,29892,14710,267,19427,29892,322,6047,9545,964,1009,2407,886,29892,4969,263,8359,573,322,24233,1230,6047,29889,450,3719,29915,29879,2186,8693,3769,29892,376,1576,7946,10914,1699,471,5492,297,29871,29896,29929,29929,29946,322,10902,278,1095,310,349,682,383,18966,29915,29879,6136,6413,29889,13,13,3563,497,29892,349,682,383,18966,338,263,5962,1030,5086,322,7112,2556,7679,3719,393,756,2175,385,1399,295,1821,2791,373,278,4696,3186,29889,11275,5412,6047,29892,2714,29899,16123,17223,26627,1199,29892,322,9849,293,5735,3697,505,1754,963,697,310,278,1556,1339,8238,322,1095,3864,22706,310,599,931,29889&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;total_duration&amp;#34;&lt;/span&gt;:46945500291,&lt;span class=&#34;s2&#34;&gt;&amp;#34;load_duration&amp;#34;&lt;/span&gt;:9055150333,&lt;span class=&#34;s2&#34;&gt;&amp;#34;prompt_eval_count&amp;#34;&lt;/span&gt;:31,&lt;span class=&#34;s2&#34;&gt;&amp;#34;prompt_eval_duration&amp;#34;&lt;/span&gt;:241905000,&lt;span class=&#34;s2&#34;&gt;&amp;#34;eval_count&amp;#34;&lt;/span&gt;:737,&lt;span class=&#34;s2&#34;&gt;&amp;#34;eval_duration&amp;#34;&lt;/span&gt;:37647125000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;using-it-from-a-python-library&#34;&gt;Using it from a Python library
&lt;/h2&gt;&lt;p&gt;Ollama has libraries for &lt;strong&gt;different programming languages&lt;/strong&gt;, including Python. You can use it from your Python code like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ollama&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ollama&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;llama2:13b-chat&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;messages&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;role&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s1&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Can you talk me about Pink Floyd?&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;stream&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;additional-capabilities&#34;&gt;Additional capabilities
&lt;/h2&gt;&lt;p&gt;With Ollama you can also create a new model based on an existing one. Check the &lt;a class=&#34;link&#34; href=&#34;https://github.com/ollama/ollama/tree/main?tab=readme-ov-file#customize-a-model&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;official documentation&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;In my examples I used the &lt;code&gt;llama2:13b-chat&lt;/code&gt; model, but there are other models available, you can find the full list &lt;a class=&#34;link&#34; href=&#34;https://ollama.com/library&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;I think Ollama is a great tool for people who want to experiment with Large Language Models without the need of a cloud service. It&amp;rsquo;s easy to use and it&amp;rsquo;s available for different programming languages. I&amp;rsquo;m looking forward to see how it will evolve in the future.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>My Backup Strategy with Borg, Vorta and BorgBase</title>
        <link>https://www.andreagrandi.it/posts/my-backup-strategy/</link>
        <pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/my-backup-strategy/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/my-backup-strategy/backup-strategy-cover.webp" alt="Featured image of post My Backup Strategy with Borg, Vorta and BorgBase" /&gt;&lt;p&gt;Recently I reviewed my backup strategy and started using a new open source software and a cloud service to keep my data safe.&lt;/p&gt;
&lt;p&gt;Before this my only backup was keeping my data in the cloud (specifically I use pCloud), but I started thinking: what if they shut down? What if I loose access to my account?&lt;/p&gt;
&lt;p&gt;This convinced me to have an additional copy of my data.&lt;/p&gt;
&lt;p&gt;Actually two additional copies: a local one, on an &lt;strong&gt;USB disk&lt;/strong&gt;, which is of course not reliable (disks can and will break!), but it&amp;rsquo;s fast if I need to recover something and a remote one, on a &lt;strong&gt;dedicated cloud service&lt;/strong&gt;, which is of course slower but quite reliable (you pay for your data to be kept safe).&lt;/p&gt;
&lt;h2 id=&#34;my-personal-requirements&#34;&gt;My personal requirements
&lt;/h2&gt;&lt;p&gt;Requirements can be different from person to person, but in this case I think they are quite common sense.&lt;/p&gt;
&lt;p&gt;The first thing I want from a backup solution is that it is &lt;strong&gt;encrypted&lt;/strong&gt; and that I will be the only one having the encryption keys.&lt;/p&gt;
&lt;p&gt;The second requirement is that the backup is &lt;strong&gt;incremental&lt;/strong&gt;. This means that if I do a new backup every day, I expect the new backup to only contain the data which changed from the previous one.&lt;/p&gt;
&lt;p&gt;The third requirement is that the backup can be &lt;strong&gt;automated&lt;/strong&gt;. I don’t want to have to remember to backup my data, I want it to happen automatically.&lt;/p&gt;
&lt;p&gt;In addition to the above, I have a strong preference for solutions which are &lt;strong&gt;open source&lt;/strong&gt; and possibly &lt;strong&gt;free&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;borgbackup&#34;&gt;BorgBackup
&lt;/h2&gt;&lt;p&gt;The solution which matches all the above requirements is &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.borgbackup.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;BorgBackup&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I won&amp;rsquo;t spend time to explain how to install it, because the official documentation is very well made.&lt;/p&gt;
&lt;p&gt;I also won&amp;rsquo;t spend time to explain how to configure it, because that&amp;rsquo;s not how I used it.&lt;/p&gt;
&lt;p&gt;Borg is a command line software and using and configuring it is not straightforward, that&amp;rsquo;s why I immediately looked for a UI.&lt;/p&gt;
&lt;h2 id=&#34;vorta&#34;&gt;Vorta
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/my-backup-strategy/vorta-ui.png&#34;
	width=&#34;1728&#34;
	height=&#34;1432&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;120&#34;
		data-flex-basis=&#34;289px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Here comes &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://vorta.borgbase.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Vorta&lt;/a&gt;&lt;/strong&gt;. As I mentioned before, while Borg has all the features I need, unfortunately it&amp;rsquo;s not easy to use and configure. A command line utility is a must if you are backing up a remote server, but it&amp;rsquo;s not really user friendly for desktop usage.&lt;/p&gt;
&lt;p&gt;Vorta allows you to &lt;strong&gt;easily configure a new backup&lt;/strong&gt;. All you have to do is &lt;strong&gt;create&lt;/strong&gt; a new &lt;strong&gt;repository&lt;/strong&gt;, set a &lt;strong&gt;password&lt;/strong&gt;, &lt;strong&gt;select&lt;/strong&gt; the files and folders you want to backup and decide from manual backup and regularly &lt;strong&gt;scheduled&lt;/strong&gt; one.&lt;/p&gt;
&lt;p&gt;Optionally (but I strongly suggest you do it) you can flag a couple of options which will verify the &lt;strong&gt;backup integrity&lt;/strong&gt; regularly.&lt;/p&gt;
&lt;p&gt;In case you need to recover your files, you just have to select an existing archive and a folder on your laptop which will be used to mount the volume. At this point you will be able to &lt;strong&gt;access your files&lt;/strong&gt; from the operating system &lt;strong&gt;file manager&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;borgbase&#34;&gt;BorgBase
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/my-backup-strategy/borgbase-plans.jpeg&#34;
	width=&#34;2360&#34;
	height=&#34;1496&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;378px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.borgbase.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;BorgBase&lt;/a&gt;&lt;/strong&gt; is a service which provides &lt;strong&gt;hosted repositories&lt;/strong&gt; for Borg backup.&lt;/p&gt;
&lt;p&gt;They have three commercial plans, starting &lt;strong&gt;from $2/month for 250 GB&lt;/strong&gt; (which is the plan I have) but they also offer a &lt;strong&gt;free plan with 10 GB&lt;/strong&gt; included, so you can test the service as much as you want.&lt;/p&gt;
&lt;p&gt;The same people also develop Vorta, so if you pay for the service you are also making sure the project remains funded.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;As you can see, configuring a good backup solution is not that difficult nor expensive. Remember the best day to start backing up is yesterday and today is still better than tomorrow 😉&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Migrating from Pelican to Hugo</title>
        <link>https://www.andreagrandi.it/posts/migrating-from-pelican-to-hugo/</link>
        <pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/migrating-from-pelican-to-hugo/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/migrating-from-pelican-to-hugo/migrating-from-pelican-to-hugo.webp" alt="Featured image of post Migrating from Pelican to Hugo" /&gt;&lt;p&gt;As you may have noticed, the blog has a new look. I recently migrated from Pelican to Hugo and I am very happy with the result. I&amp;rsquo;ve known Hugo for a long time, but I never had the opportunity to use it in a real project. With a little help from a couple of friends, I was able to complete the migration in a few days.&lt;/p&gt;
&lt;h2 id=&#34;why-did-i-migrate&#34;&gt;Why did I migrate?
&lt;/h2&gt;&lt;p&gt;I have been using Pelican for a long time and I have always been very happy with it. It is a great static site generator and it has served me well. However, I recently started having issues with PIP dependencies. For example one of the plugins required an older version of a sub dependency, which was causing conflicts with other plugins. I tried to fix it, but it was a rabbit hole and I decided to give Hugo a try.&lt;/p&gt;
&lt;p&gt;In addition to the dependency issues, I realised that I was using a theme that was not being maintained anymore. The author himself had moved to Hugo and I was left with an outdated theme.&lt;/p&gt;
&lt;p&gt;Last but not least, the javascript library I was using to generate the indexing and search functionality was also not being maintained anymore.&lt;/p&gt;
&lt;h2 id=&#34;how-did-i-migrate&#34;&gt;How did I migrate?
&lt;/h2&gt;&lt;p&gt;Both Pelican and Hugo are static site generators, and they both expects the content to be in Markdown format. This made the migration process a lot easier. By the way, there are some differences in the syntax of the Markdown files, and other few differences in the front matter (the metadata inside the MarkDown file), so I decided to write a small script to convert the files.&lt;/p&gt;
&lt;p&gt;You can find the full script here &lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/andreagrandi/0a7bf6e217d6561b00b6a5de6211ddaa&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gist.github.com/andreagrandi/0a7bf6e217d6561b00b6a5de6211ddaa&lt;/a&gt; but I have to warn you that it&amp;rsquo;s very specific to my blog (because of how I structured the content in Pelican and because of how I&amp;rsquo;m structuring it in Hugo) and it may not work for you. However, it can be a good starting point if you want to migrate from Pelican to Hugo.&lt;/p&gt;
&lt;p&gt;Other than migrating the content, I had to find a new theme and customise it to my needs. This honestly took most of the time. I&amp;rsquo;m really bad with CSS and I had to learn a lot of new things. I&amp;rsquo;m still not 100% happy with the result, but I think it&amp;rsquo;s good enough for now.&lt;/p&gt;
&lt;p&gt;The theme I picked comes with a built-in search functionality, so I don&amp;rsquo;t have to worry about that anymore.&lt;/p&gt;
&lt;p&gt;Finally I had to rewrite the CircleCI configuration file to build the site with Hugo instead of Pelican. This took me a bit of try and error, but I managed to get it working.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m very happy with the result. The site is easy to manage and I don&amp;rsquo;t have to worry about dependencies anymore. I&amp;rsquo;m also happy with the new theme, even if I still have to tweak it a bit (ie: comments don&amp;rsquo;t seem to be working yet). I wish I had done this migration earlier, but I&amp;rsquo;m glad I did it now. I hope you like the new look and if you find any issues, please let me know.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How to show a cover image in Pelican based blog posts</title>
        <link>https://www.andreagrandi.it/posts/how-to-show-cover-image-pelican-blog-posts/</link>
        <pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/how-to-show-cover-image-pelican-blog-posts/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/how-to-show-cover-image-pelican-blog-posts/pelican-website-banner.jpeg" alt="Featured image of post How to show a cover image in Pelican based blog posts" /&gt;&lt;p&gt;Once you have written and published an article, it’s very likely that you will want to &lt;strong&gt;share&lt;/strong&gt; it on &lt;strong&gt;social media&lt;/strong&gt; or send to your friends on a messaging app.&lt;/p&gt;
&lt;p&gt;One method to make the link more “attractive” is to include a &lt;strong&gt;cover image&lt;/strong&gt; that will be shown in the link preview.&lt;/p&gt;
&lt;p&gt;How do you set a cover image? You need to use a particular &lt;strong&gt;Open Graph&lt;/strong&gt; tag named &lt;code&gt;og:image&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/how-to-show-cover-image-pelican-blog-posts/pelican-website-banner.jpeg&#34;
	width=&#34;1792&#34;
	height=&#34;1024&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;A pelican with some code in the background &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;175&#34;
		data-flex-basis=&#34;420px&#34;
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;open-graph&#34;&gt;Open Graph
&lt;/h2&gt;&lt;p&gt;Open Graph is a &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Facebook_Platform#Open_Graph_protocol&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;protocol&lt;/a&gt; created by &lt;del&gt;Facebook&lt;/del&gt; &lt;strong&gt;Meta&lt;/strong&gt; to facilitate sharing articles and web pages on social media.&lt;/p&gt;
&lt;p&gt;The syntax is very simple and all you have to do is to include a few meta tags in the header of your web page.&lt;/p&gt;
&lt;p&gt;The most common tags to include are these ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;og:title&lt;/code&gt; is used as the main title of the page. It’s usually the biggest text being rendered&lt;/li&gt;
&lt;li&gt;&lt;code&gt;og:description&lt;/code&gt; is the additional text shown below the title&lt;/li&gt;
&lt;li&gt;&lt;code&gt;og:image&lt;/code&gt; this is probably the most important tag to set, because it takes the biggest space wherever it’s being rendered&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pelican&#34;&gt;Pelican
&lt;/h2&gt;&lt;p&gt;Depending on the template you use, your Pelican based website may already support the &lt;code&gt;og:image&lt;/code&gt; tag.&lt;/p&gt;
&lt;p&gt;For example in my case I need to add the &lt;code&gt;Cover&lt;/code&gt; attribute to my page meta tags, like I did for this article:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-MarkDown&#34; data-lang=&#34;MarkDown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Title: How to show a cover image in Pelican based blog posts
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Date: 2024-02-06 22:03
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Author: Andrea Grandi
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Category: Development
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Tags: Pelican, Python, blog, writing, images, cover, template, open, graph, meta
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Slug: how-to-show-cover-image-pelican-blog-posts
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Status: published
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Summary: How to add a cover image to Pelican based blog posts, so that when the article is shared on social media the image is shown in the preview.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Cover: images/2024/02/pelican-website-banner.jpeg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The template has a sub template (in my case it’s located &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/andreagrandi.it/blob/master/themes/Flex/templates/partial/og_article.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;) may have something like this to render the image:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jinja&#34; data-lang=&#34;jinja&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cover&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;article.metadata&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;%}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;meta property=&amp;#34;og:image&amp;#34; content=&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;SITEURL&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;article.metadata&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cover&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;%}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;meta property=&amp;#34;og:image&amp;#34; content=&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;SITELOGO&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;endif&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;%}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; if you don’t specify a Cover, the template will use your &lt;code&gt;SITELOGO&lt;/code&gt; image.&lt;/p&gt;
&lt;p&gt;If your template doesn’t have something like this, you may have to use one of the following &lt;strong&gt;plugins&lt;/strong&gt;. For the specific instructions about how to use them, please refer to their readme on GitHub.&lt;/p&gt;
&lt;h3 id=&#34;pelican-seo-plugin&#34;&gt;pelican-seo plugin
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/pelican-plugins/seo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pelican-seo&lt;/a&gt; is a useful addition to your Pelican based website, even if your template already supports cover images, because it automatically adds all the Open Graph tags, which are useful to &lt;strong&gt;boost the SEO&lt;/strong&gt; of your website.&lt;/p&gt;
&lt;h3 id=&#34;featured-image-plugin&#34;&gt;featured-image plugin
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/pelican-plugins/featured-image&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;featured-image&lt;/a&gt; is a much simpler plugin. All it does is to check if an image has already been included in the meta tags. If it’s not present, it tries to get the first one found in the page.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;Adding a cover image to your blog posts may seem a small thing, but it can make a huge difference if you decide to share your articles on social media.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Kagi: a paid search engine which is worth the money</title>
        <link>https://www.andreagrandi.it/posts/kagi-paid-search-engine/</link>
        <pubDate>Sun, 04 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/kagi-paid-search-engine/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/kagi-paid-search-engine/kagi-landing-page.jpeg" alt="Featured image of post Kagi: a paid search engine which is worth the money" /&gt;&lt;p&gt;It’s a not a &lt;a class=&#34;link&#34; href=&#34;https://mashable.com/article/google-search-low-quality-research&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;news&lt;/a&gt; anymore that Google, the search engine which once was the best available, doesn’t work anymore for a lot of users.&lt;/p&gt;
&lt;p&gt;Its results are full of ads, they are not &lt;strong&gt;optimised&lt;/strong&gt; for &lt;a class=&#34;link&#34; href=&#34;https://www.searchenginejournal.com/biased-google-search-results-are-hurting-users-harvard-study-claims/135824/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;users&lt;/a&gt;, nor for &lt;a class=&#34;link&#34; href=&#34;https://simpleblog.ai/blog/google-ads-can-do-more-for-customers/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;advertisers&lt;/a&gt; and sometimes they also include &lt;a class=&#34;link&#34; href=&#34;https://www.helpnetsecurity.com/2023/01/18/google-ads-increasingly-pointing-to-malware/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;malware&lt;/a&gt;. Their main goal is &lt;strong&gt;to boost ad revenue&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So why it’s still the most used search engine in the world? Well that’s “easy”, because Google &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.theverge.com/2023/10/26/23933206/google-apple-search-deal-safari-18-billion&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pays&lt;/a&gt;&lt;/strong&gt; (a lot!) &lt;strong&gt;to be the default search engine&lt;/strong&gt; everywhere and users are often lazy to change their habits or don’t know alternatives are available.&lt;/p&gt;
&lt;h1 id=&#34;kagi&#34;&gt;Kagi
&lt;/h1&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/kagi-paid-search-engine/kagi-landing-page.jpeg&#34;
	width=&#34;2360&#34;
	height=&#34;1420&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Kagi landing page&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;398px&#34;
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;my-impressions&#34;&gt;My impressions
&lt;/h2&gt;&lt;p&gt;After hearing a lot of good things about this search engine (especially from the folks on Mastodon), I decided to give it a try (there is a &lt;strong&gt;trial plan available&lt;/strong&gt; with 100 search queries included, so don’t take my word and please test yourself!).&lt;/p&gt;
&lt;p&gt;The first impression was terrific. I was finally able to find what I was looking for with the second or third (and sometimes with first) link in the results.&lt;/p&gt;
&lt;p&gt;With Google I usually had to scroll past a few &lt;strong&gt;ads&lt;/strong&gt;, then ignore &lt;strong&gt;old web pages&lt;/strong&gt; (but with a good SEO), then go past another couple of &lt;strong&gt;irrelevant links&lt;/strong&gt; and finally find what I was looking for. But the point is that you never know how bad the results are until you click, read a few lines and take a decision. At that point you already have &lt;strong&gt;wasted a lot of time just&lt;/strong&gt; to find the right thing.&lt;/p&gt;
&lt;p&gt;With Kagi I just save a lot of time, get better results and nobody is tracking what I search for to serve me related ads at later time.&lt;/p&gt;
&lt;p&gt;The customisation &lt;a class=&#34;link&#34; href=&#34;https://blog.kagi.com/kagi-features&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;features&lt;/a&gt; make the results I get even better and more tailored to my needs.&lt;/p&gt;
&lt;h2 id=&#34;why-choosing-kagi&#34;&gt;Why choosing Kagi
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Privacy:&lt;/strong&gt; there are &lt;strong&gt;no ads&lt;/strong&gt; in the results and there is &lt;strong&gt;no tracking&lt;/strong&gt; in place. What you search is private. While Kagi relies on some existing search engines (Google, Bing, Brave etc…) they use them as a source of data and all the queries are always anonymised before being sent to them. Once their requests are back, results are aggregated and customised for the user.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;User custom results:&lt;/strong&gt; users can decide to exclude certain websites from ever appearing in their results, or rank higher or lower certain other websites. Tired of always seeing that click-bait website appearing? You can block it! Do you prefer to first look stuff in Wikipedia if available? You can rank it higher etc…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lenses:&lt;/strong&gt; once you get your results back, you can decide to filter them further by using lenses. For example you can use the “&lt;em&gt;Recipe&lt;/em&gt;” lens, to search specifically for recipes, or the “&lt;em&gt;Discussions&lt;/em&gt;” one to search inside discussion forums.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instant answers:&lt;/strong&gt; sometimes you can get an instant answer when you search for something, which already includes a lot of information, without the need to click on the found link. For example, searching for &lt;code&gt;Python for loop&lt;/code&gt; will give you this:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/kagi-paid-search-engine/python-for-loop.jpeg&#34;
	width=&#34;1640&#34;
	height=&#34;846&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Python for loop&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;193&#34;
		data-flex-basis=&#34;465px&#34;
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summariser:&lt;/strong&gt; this feature is still experimental, but I think it’s one of the best features available (AI haters please look somewhere else!). &lt;strong&gt;Kagi Summariser&lt;/strong&gt; is able to create a summary of almost any public resource you can provide: a link to a web page, a podcast, a YouTube video etc… it uses AI to transcribe audio/video and then it creates a summary of it. It saves me a lot of time, depending on what I’m looking for.&lt;/p&gt;
&lt;h2 id=&#34;using-kagi-with-safari&#34;&gt;Using Kagi with Safari
&lt;/h2&gt;&lt;p&gt;I use Safari as my main browser and unfortunately this browser doesn’t let you add any custom search engine, so Kagi engineers had to use a quick hack. They released a &lt;strong&gt;Safari extension&lt;/strong&gt; which intercepts any query sent to your default engine and redirects it to Kagi. My personal advice? Change your default engine to &lt;strong&gt;DuckDuckGo&lt;/strong&gt; or something else you trust if you don’t want to leak stuff to Google.&lt;/p&gt;
&lt;h2 id=&#34;pricing&#34;&gt;Pricing
&lt;/h2&gt;&lt;p&gt;Kagi doesn’t offer a free plan (it only has a &lt;strong&gt;trial with 100 queries&lt;/strong&gt; included) and it has three paid plans:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Starter:&lt;/strong&gt; it costs 5$/month and includes 300 queries/month&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Professional:&lt;/strong&gt; it costs 10$/month, has unlimited queries and includes AI tools like Kagi Summariser&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ultimate:&lt;/strong&gt; it costs 25$/month, it’s like Professional plan but you get preview access to features which are still in development&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I personally have the &lt;strong&gt;Professional&lt;/strong&gt; plan.&lt;/p&gt;
&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions
&lt;/h2&gt;&lt;p&gt;I hope I stimulated your curiosity to at least convince you to use the trial. I’m curious to hear your opinions.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Blogging from an iPad</title>
        <link>https://www.andreagrandi.it/posts/blogging-from-an-ipad/</link>
        <pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/blogging-from-an-ipad/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/blogging-from-an-ipad/editing-markdown-with-mweb.jpeg" alt="Featured image of post Blogging from an iPad" /&gt;&lt;p&gt;A few years ago, I &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/2017/07/02/migrating-from-wordpress-to-static-generated-website/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;migrated&lt;/a&gt; from my Wordpress based blog (which I self hosted… yeah… I know… no comment!) to a static generated (using &lt;a class=&#34;link&#34; href=&#34;https://getpelican.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pelican&lt;/a&gt;) one which is hosted (for free!) on GitHub Pages.&lt;/p&gt;
&lt;p&gt;This setup, believe me or not, is cool. I’ve all my blog posts written in &lt;strong&gt;MarkDown&lt;/strong&gt;, versioned on and kept safe on GitHub and when I’m ready to publish, I just need to make a pull request, merge it and a CI job will take care of using Pelican to build the pages and push them to the right place. You can find more information about my setup in &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/2019/02/24/how-to-deploy-static-website-github-pages-circleci/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this other post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, what’s the problem? Well, as you can imagine, to do all of this, you need a GitHub client, a MarkDown editor and you need to be able to commit, push and do pull requests.&lt;/p&gt;
&lt;p&gt;Is this  possible from an iPad? I believed it wasn’t (since the official GitHub client is very limited on what you can do, and online IDEs like VsCode.dev requires an internet connection, and I would like to be able to write also when I’m offline), but thanks to this &lt;a class=&#34;link&#34; href=&#34;https://www.marcogomiero.com/posts/2021/running-blog-ipad/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;blog post&lt;/a&gt; from &lt;strong&gt;Marco Gomiero&lt;/strong&gt;, I recently found out it’s possible!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/blogging-from-an-ipad/it-could-work.jpeg&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Frankenstein Junior - It could work!&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;working-copy-git-client-for-ios&#34;&gt;Working Copy: git client for iOS
&lt;/h2&gt;&lt;p&gt;The most important part of my workflow would not be possible without this amazing git client.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/blogging-from-an-ipad/working-copy.jpeg&#34;
	width=&#34;2360&#34;
	height=&#34;1640&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Working Copy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;345px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://workingcopy.app/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Working Copy&lt;/a&gt; is so far the best Git client you can find on iOS. It allows you to clone repositories and work offline. Checked out content is made available through the File explorer, so any iOS app has access to it and this means you can use any client to edit your files.&lt;/p&gt;
&lt;h2 id=&#34;mweb-a-simple-markdown-editor-for-ios&#34;&gt;MWeb: a simple MarkDown editor for iOS
&lt;/h2&gt;&lt;p&gt;Following the suggestion from Marco’s blog post I decided to start using &lt;a class=&#34;link&#34; href=&#34;https://www.mweb.im/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this editor&lt;/a&gt;. To be honest I’m still not sold on it (literally: I haven’t purchased it yet and I’m still using the free version), because I’ve found a couple of issues which I’ve promptly reported to the author (let’s see if and how long it will take for them to reply) but they are not bad enough to entirely disrupt my workflow.&lt;/p&gt;
&lt;p&gt;In case MWeb should not work for me, I’m planning to try a few others: &lt;a class=&#34;link&#34; href=&#34;https://www.textasticapp.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Textastic&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://serpensoft.info/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;iWriter Pro&lt;/a&gt; and maybe &lt;a class=&#34;link&#34; href=&#34;https://ia.net/writer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;iA Writer&lt;/a&gt; (but for its cost it has to be damn perfect!)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/blogging-from-an-ipad/editing-markdown-with-mweb.jpeg&#34;
	width=&#34;2360&#34;
	height=&#34;1640&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;MWeb&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;345px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;ios-shortcuts-and-automations&#34;&gt;iOS Shortcuts and Automations
&lt;/h2&gt;&lt;p&gt;Another idea I borrowed from Marco is the usage of &lt;strong&gt;iOS Shortcuts&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In my case I had to customise the flow quite a lot, either because I use Pelican instead of Hugo, and also because I’ve some conventions I want to follow when writing my blog posts, but overall I implemented similar features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“New Blog Post”: the first shortcut creates a new branch in my repository and creates a new MarkDown file, following my own convention. Then it fills the empty file with some headers which are normally used in Pelican MarkDown files.&lt;/li&gt;
&lt;li&gt;“Blog Photo”: this shortcut let me select a photo from my gallery, it converts it to JPEG (most of the time pictures taken with my iPhone had *.heic format, so they need to be converted) and place it in the expected folder in my repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;Thanks for reading my first blog post, entirely written from my iPad, while I was relaxing on my sofa. If you have any questions or suggestions for a good MarkDown editor for iOS, feel free to leave a comment.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Use OpenAI API to make two GPT bots talk to each other</title>
        <link>https://www.andreagrandi.it/posts/use-openai-api-to-make-two-gpt-bots-talk/</link>
        <pubDate>Fri, 05 May 2023 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/use-openai-api-to-make-two-gpt-bots-talk/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/use-openai-api-to-make-two-gpt-bots-talk/two-chatgpt-robots.jpeg" alt="Featured image of post Use OpenAI API to make two GPT bots talk to each other" /&gt;&lt;p&gt;I wanted to learn how to use OpenAI API in Python, so I decided to make it fun and created an interesting experiment: what would happen if I let two GPT powered bots &amp;ldquo;talk&amp;rdquo; to each other? Let&amp;rsquo;s find out!&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites
&lt;/h2&gt;&lt;p&gt;If you want to run this experiment locally you will need the following things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an &lt;a class=&#34;link&#34; href=&#34;https://platform.openai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenAI&lt;/a&gt; account&lt;/li&gt;
&lt;li&gt;2 API keys (you can create them from here: &lt;a class=&#34;link&#34; href=&#34;https://platform.openai.com/account/api-keys&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://platform.openai.com/account/api-keys&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; in my code I used &lt;code&gt;gpt-4&lt;/code&gt; as model, but in order to use this version, at the time I&amp;rsquo;m writing this article, you will need to request early access using this form &lt;a class=&#34;link&#34; href=&#34;https://openai.com/waitlist/gpt-4-api&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://openai.com/waitlist/gpt-4-api&lt;/a&gt;
Until then, you can replace &lt;code&gt;gpt-4&lt;/code&gt; with &lt;code&gt;gpt-3.5-turbo&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;prepare-the-environment&#34;&gt;Prepare the environment
&lt;/h2&gt;&lt;p&gt;To be able to run the script, you first need to set two environment variables with the API key you generated previously:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;OPENAI_API_KEY_1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;your-api-key-1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;OPENAI_API_KEY_2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;your-api-key-2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then install the required Python libraries (I suggest you use a proper virtual environment. If you don&amp;rsquo;t know how to do that, you can follow my tutorial here: &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it/2022/01/29/install-python-with-pyenv-and-pyenvvirtualenv-create-virtual-environment-with-specific-python-version-macos/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.andreagrandi.it/2022/01/29/install-python-with-pyenv-and-pyenvvirtualenv-create-virtual-environment-with-specific-python-version-macos/&lt;/a&gt; )&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install -r requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then you can run the script by doing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python botchat.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;the-code&#34;&gt;The code
&lt;/h2&gt;&lt;p&gt;You can find the complete and updated version of the code on GitHub &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/botchat&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/botchat&lt;/a&gt; but here below I will explain a few things.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;OPEN_AI_MODEL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gpt-4&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;as I previously mentioned, I&amp;rsquo;m using &lt;code&gt;gpt-4&lt;/code&gt; by default, but if you don&amp;rsquo;t have access yet you will need to replace this with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;OPEN_AI_MODEL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gpt-3.5-turbo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;When crafting the message to send to the bot I check if the input matches with the original context and if they don&amp;rsquo;t match I&amp;rsquo;m also sending the original context: this has definitely improved the quality of the conversation between the two bots, otherwise the API would not maintain the context between one message and the other.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;conversation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;original_context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;original_context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;original_context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;I send the message to the first bot and I get a response back:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;bot_1_response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;openai&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ChatCompletion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OPEN_AI_MODEL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;messages&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;assistant&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;presence_penalty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;api_key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OPENAI_API_KEY_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;and then I use the response to feed the second bot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;original_context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bot_1_response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;bot_2_response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;openai&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ChatCompletion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OPEN_AI_MODEL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;messages&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;presence_penalty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;api_key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OPENAI_API_KEY_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;what-to-use-as-input&#34;&gt;What to use as input?
&lt;/h2&gt;&lt;p&gt;This is not a trivial question and it will highly affect the quality (and the success) of the &amp;ldquo;conversation&amp;rdquo;. My suggestion is to explain that you are expecting to have a conversation and to limit replies to a couple of paragraphs only. Then decide what the conversation is about.&lt;/p&gt;
&lt;p&gt;For example you could input something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;✗ python botchat.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Please enter your message: You are having a conversation with a person.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Do not reply with more than &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; paragraphs. The conversation is about weather
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;a-full-gpt-conversation&#34;&gt;A full GPT conversation
&lt;/h2&gt;&lt;p&gt;If you are curious to read the resulting &amp;ldquo;conversation&amp;rdquo; between two GPT powered bot, you can find here below. You will notice that at first they start talking about the weather, then they move to talk about outdoor activities and they finally end up talking about art.&lt;/p&gt;
&lt;p&gt;Enjoy the conversation!&lt;/p&gt;
&lt;p&gt;::text
BOT 1: I just love how the weather has been lately. Sunny and warm during the day, with just the
right cool breeze in the evening. It feels like the perfect balance between summer and autumn.
Have you been enjoying it as well?&lt;/p&gt;
&lt;p&gt;Yesterday, I took advantage of the great weather and went for a hike in the nearby park.
The views were stunning, and it was so refreshing to be surrounded by nature.
Do you have any favorite outdoor activities for this type of weather?&lt;/p&gt;
&lt;p&gt;BOT 2: I absolutely agree with you! This kind of weather is perfect for spending time outdoors
and enjoying various activities. I have been enjoying it, taking walks in the evening when it&amp;rsquo;s
cooler and sunnier during the day.&lt;/p&gt;
&lt;p&gt;As for outdoor activities, I enjoy hiking and cycling in this type of weather. There&amp;rsquo;s something
about being out in nature during the pleasant transition between summer and autumn that feels invigorating.
What about you?&lt;/p&gt;
&lt;p&gt;BOT 1: Do you have any favorite outdoor activities you like to do during this time of year? I&amp;rsquo;m always
looking for new ideas to make the most of this beautiful weather.&lt;/p&gt;
&lt;p&gt;BOT 2: One of my favorite outdoor activities during this time of year is hiking. It&amp;rsquo;s a great way to enjoy
the pleasant weather, explore nature, and get some exercise. Additionally, it&amp;rsquo;s an activity that can be
tailored to people of all fitness levels since you can choose trails based on difficulty.
Just make sure you wear proper footwear and bring plenty water to stay hydrated.&lt;/p&gt;
&lt;p&gt;Another enjoyable activity is having a picnic in the park. You can gather friends or family,
pack up some delicious food, and find a nice spot to relax and enjoy the outdoors. It&amp;rsquo;s a wonderful
way to catch up with loved ones while soaking up the sunshine or finding a shady spot under a tree.
Plus, it&amp;rsquo;s an opportunity to play some lawn games or throw a frisbee around for added fun.&lt;/p&gt;
&lt;p&gt;BOT 1: I totally agree with you! Hiking is an amazing way to make the most of the good weather,
and it&amp;rsquo;s a perfect excuse to get some fresh air and take a break from our busy lives.
Plus, there&amp;rsquo;s nothing like reaching the top of a hill or a look-out point and taking in the stunning views.
It&amp;rsquo;s one of those experiences that make you realize how beautiful the world really is.&lt;/p&gt;
&lt;p&gt;The picnic idea is fantastic as well. It&amp;rsquo;s such a simple yet enjoyable way to spend time with friends
and family. Everyone can bring their favorite dishes to share, so it&amp;rsquo;s also a great way to try out new
food options.
And as you mentioned, it offers the opportunity to include some fun outdoor games and create cherished
memories together.
The key to enjoying these outdoor activities, of course, is having wonderful weather -
which makes us appreciate the sunshine even more!&lt;/p&gt;
&lt;p&gt;BOT 2: Absolutely! Having good weather is an essential component for truly enjoying these outdoor activities.
And, they are also perfect opportunities to bond with loved ones or simply unwind and relax in nature, away
from the stresses of daily life. Moments like these allow us to reconnect with ourselves and appreciate our
surroundings, thanks to the great outdoors and a warm, sunny day.&lt;/p&gt;
&lt;p&gt;But let&amp;rsquo;s not forget that even though we wish for perfect weather all the time, experiencing different
forms of weather can also be fascinating and provides variety in our lives. Rainy days, for instance,
can bring coziness and a feeling of comfort or offer a chance for introspection, while snowy days can turn
into winter wonderlands for those who love to bundle up and play or appreciate the beauty of
snow-covered landscapes. So, even if it&amp;rsquo;s not all sunshine and warmth, each type of weather can still
offer memories and experiences worth cherishing.&lt;/p&gt;
&lt;p&gt;BOT 1: That&amp;rsquo;s very true! Different types of weather can create various moods and atmospheres that can be
delightful and appreciated in different ways. Whether it&amp;rsquo;s the refreshing sensation of a light drizzle on
a summer day or the comforting warmth of staying indoors with a hot cocoa during a snowstorm,
these experiences enrich our lives and often evoke fond memories.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s important to note that while we appreciate the beauty and benefits of diverse weather conditions,
we must also stay aware of possible extreme weather events and pay attention to forecasts and warnings
to be prepared and ensure our safety. That being said, there&amp;rsquo;s no denying that the power and variety
of weather is one of the many factors that make life on this planet so captivating and unique.&lt;/p&gt;
&lt;p&gt;BOT 2: I couldn&amp;rsquo;t agree more with you! It&amp;rsquo;s interesting how weather can impact not only our mood and
experiences, but also inspire different forms of art, like music and paintings. Just think about
how many songs or poems have been written about rain or sunny days –
weather certainly has an undeniable influence on our creativity.&lt;/p&gt;
&lt;p&gt;As you mentioned, being prepared for extreme weather events is crucial as well.
With climate change happening, we may experience more unpredictable weather patterns,
and it&amp;rsquo;s important to adapt and take care of our environment to minimize adverse effects.
Nonetheless, the diverse weather conditions we experience make Earth an incredible and fascinating place to live.&lt;/p&gt;
&lt;p&gt;BOT 1: Absolutely, the connection between weather and art is truly fascinating.
It&amp;rsquo;s amazing to see how weather has been a source of inspiration for so many artists throughout history,
giving us iconic masterpieces that help us understand and appreciate the beauty of our world even more.&lt;/p&gt;
&lt;p&gt;You make an important point about the need to prepare for extreme weather events and climate change.
As we continue to tackle these challenges, it&amp;rsquo;s essential to promote sustainability and have global
cooperation to protect our planet. The incredible diversity of weather conditions on Earth reminds us
of the precious and delicate nature of our home, and emphasizes how crucial it is to preserve
it for future generations.&lt;/p&gt;
&lt;p&gt;BOT 2: I completely agree that a deeper appreciation for the beauty and intricacy of our planet&amp;rsquo;s
weather systems, as showcased through art, can promote sustainability efforts. By realizing the value
and uniqueness of our ecosystems, we may be more inspired to engage in actions that are environmentally
responsible and find solutions to preserve our world for the future.&lt;/p&gt;
&lt;p&gt;Art also has the power to raise awareness about environmental issues, including extreme weather events
and climate change. Artists can convey powerful messages through their work, often more effectively
than words alone. With the increased understanding and empathy that comes from experiencing these
artistic expressions, we can become more motivated to actively participate in efforts to curb
climate change and protect our environment.&lt;/p&gt;
&lt;p&gt;BOT 1: Moreover, art can evoke strong emotions and create connections between people and their surroundings.
By presenting the beauty of weather systems and their vulnerability to human actions, art can stir
feelings of responsibility, compassion, and urgency to take action.
This emotional connection could influence individuals or communities to implement sustainable practices
to preserve these ecosystems.&lt;/p&gt;
&lt;p&gt;Additionally, collaborations between artists, scientists, and policymakers can lead to innovative ways
to communicate the importance of environmental conservation and climate change solutions.
These interdisciplinary efforts can create more engaging and effective strategies in educational
and public awareness campaigns, thus inspiring collective action towards a sustainable future.&lt;/p&gt;
&lt;p&gt;BOT 2: I completely agree that art can be a powerful tool in raising awareness about environmental
issues like climate change and weather systems. This emotional connection provided through art could
encourage people to take necessary steps toward a sustainable lifestyle, by fostering
the feeling of responsibility and urgency.&lt;/p&gt;
&lt;p&gt;Furthermore, interdisciplinary collaborations between artists, scientists, and policymakers are essential
in effectively addressing and communicating the importance of environmental conservation.
These partnerships will help develop educational and public awareness initiatives that will not only
engage people but also inspire them to work collectively towards a more sustainable future for our planet.&lt;/p&gt;
&lt;p&gt;BOT 1: Art has the ability to evoke emotions and stir personal connections to the environment,
which in turn can lead to a deeper understanding and appreciation of our planet&amp;rsquo;s fragile state.
Through various forms of artistic expression, be it paintings, sculptures, music or installations,
artists have the power to convey critical messages about the importance of taking care of our environment.&lt;/p&gt;
&lt;p&gt;When people are moved by these visual and auditory experiences, it becomes more likely that they&amp;rsquo;ll realize
the gravity of the situation and feel prompted to make necessary changes in their own lives.
By incorporating climate change and environmental issues in their work, artists can leave a lasting
impact on their audience, inspire further discussions, and potentially contribute to instigating actions
that address the challenges faced by our Earth.&lt;/p&gt;
&lt;p&gt;BOT 2: Absolutely, art has a unique way of resonating with people on an emotional level,
often more effectively than facts and statistics alone. Evoking emotions through art can create
a personal connection to the environment, making the issue more real and urgent for the individual
experiencing it.
This personal connection can lead to raised awareness and a greater sense of responsibility
when it comes to taking care of our planet.&lt;/p&gt;
&lt;p&gt;Moreover, art transcends language barriers and geographical boundaries, enabling it to reach
a diverse audience. By showcasing environmental issues through artistic expression, the message becomes
accessible to people from various backgrounds and cultures.
This widespread reach could potentially create a united global response in addressing the urgent need for
change regarding our environment and its preservation.&lt;/p&gt;
&lt;p&gt;BOT 1: Absolutely, art has a unique way of resonating with people on an emotional level, often more
effectively than facts and statistics alone. Evoking emotions through art can create a personal connection
to the environment, making the issue more real and urgent for the individual experiencing it.
This personal connection can lead to raised awareness and a greater sense of responsibility when it comes
to taking care of our planet.&lt;/p&gt;
&lt;p&gt;Moreover, art transcends language barriers and geographical boundaries, enabling it to reach a
diverse audience.
By showcasing environmental issues through artistic expression, the message becomes accessible to people
from various backgrounds and cultures. This widespread reach could potentially create a united global
response in addressing the urgent need for change regarding our environment and its preservation.&lt;/p&gt;
&lt;p&gt;BOT 2: I completely agree with you. Art can not only raise awareness about the impact of climate change
and other environmental issues but also inspire people to take action in their own lives.
People tend to connect with visual representations more strongly, and artistic expressions can
vividly illustrate the effects of these challenges in a way that is easily understood by everyone.&lt;/p&gt;
&lt;p&gt;Additionally, art can foster important conversations and facilitate a sense of community among individuals
who share a concern for the environment. By creating spaces to engage in dialogues and exchange ideas,
art can spark innovative solutions to environmental problems, motivating people to get involved and
rally support for sustainable practices. The power of art lies in its ability to connect us, provoke emotions,
and motivate us to pursue a better world.&lt;/p&gt;
&lt;p&gt;BOT 1: It&amp;rsquo;s true that art holds a special power to evoke emotions and create connections,
making it a crucial tool for raising environmental awareness. The more we can expose people to various
art forms depicting the consequences of climate change and our relationship with nature, the more likely
they are to feel empathy and understanding towards the issues.
This in turn can encourage them to make environmentally-conscious lifestyle choices or even advocate
for policy change at a higher level.&lt;/p&gt;
&lt;p&gt;Using art as a means of communication also transcends language barriers, meaning it can reach wider
audiences and appeal to diverse groups of people. By including local communities and artists,
we can create a connection on a personal level, giving people a sense of ownership and a stake in the cause.
Art can act as a gateway for education, activism, and community engagement in the ongoing fight
against climate change and other environmental concerns.&lt;/p&gt;
&lt;p&gt;BOT 2: Absolutely, the universality of art allows it to be a perfect medium for conveying important
messages and generating global conversations about environmental issues.
Visual arts, music, dance, and even literature can all become powerful tools in raising awareness,
bridging cultural gaps, and inspiring positive actions.&lt;/p&gt;
&lt;p&gt;Moreover, involving local artists and communities in the creation of environmental art ensures that
diverse perspectives are represented, promoting a sense of inclusivity in the movement.
This collective effort towards sustainable living can have immense ripple effects as people from various
backgrounds come together with a common purpose. Thus, art can be a catalyst for environmental action,
ostering empathy and collective responsibility among its audience.&lt;/p&gt;
&lt;p&gt;BOT 1: Additionally, art has the unique ability to evoke emotions and make people
feel more connected to certain causes. This emotional connection can lead to a greater sense of urgency,
prompting individuals and communities to take action when it comes to climate change
and other environmental issues. Art can effectively communicate complex problems and potential solutions
in a more relatable manner, making the information accessible to a broader audience.&lt;/p&gt;
&lt;p&gt;Furthermore, environmental art often brings attention to aspects of our natural world that might be
overlooked in daily life. By highlighting the beauty and vulnerability of our surroundings,
it can encourage people to develop a stronger appreciation for the environment and inspire
them to become more conscious about their own actions and choices.
In this way, art plays a crucial role in promoting meaningful dialogue and action
on climate change and sustainability.&lt;/p&gt;
&lt;p&gt;BOT 2: I agree with you. Art has a powerful influence on the way people perceive and understand
complex issues like climate change. By presenting these problems in a more visually engaging
and emotive manner, it becomes easier for people to grasp the severity of the situation
and feel compelled to act.
The use of symbolism and metaphor in art can also make abstract concepts
like global warming more tangible and relatable.&lt;/p&gt;
&lt;p&gt;Moreover, when artists collaborate with scientists, they can create innovative ways to communicate
climate data and environmental phenomena, making them more accessible to wider audiences who may not
be familiar with scientific language. This interaction between art and science broadens
the understanding of environmental challenges and fosters collective responsibility towards finding solutions.
In the end, art serves as a vital tool to raise awareness, promote dialogue,
and inspire positive change for a more sustainable future.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>HowTo use OpenAI API for ChatGPT in Python</title>
        <link>https://www.andreagrandi.it/posts/how-to-use-openai-api-for-chatgpt-in-python/</link>
        <pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/how-to-use-openai-api-for-chatgpt-in-python/</guid>
        <description>&lt;img src="https://www.andreagrandi.it/posts/how-to-use-openai-api-for-chatgpt-in-python/python-chatgpt.jpeg" alt="Featured image of post HowTo use OpenAI API for ChatGPT in Python" /&gt;&lt;p&gt;OpenAI is a research organization that develops and promotes friendly AI for the betterment of humanity. One of its most popular projects is the development of the GPT (Generative Pre-trained Transformer) series, which includes ChatGPT, a large language model trained to generate human-like text based on given prompts. In this blog post, we&amp;rsquo;ll show you how to use the OpenAI API for ChatGPT with Python examples.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites
&lt;/h2&gt;&lt;p&gt;Before we start, you&amp;rsquo;ll need to create an OpenAI account and obtain an API key. You can do this by going to the &lt;a class=&#34;link&#34; href=&#34;https://beta.openai.com/docs/api-reference/introduction&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenAI API website&lt;/a&gt; and signing up for an account. Once you have an account, you can obtain an API key from the API dashboard.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll also need the &lt;code&gt;openai&lt;/code&gt; Python package, which you can install using pip:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install openai
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;example-generating-text-with-chatgpt&#34;&gt;Example: Generating Text with ChatGPT
&lt;/h2&gt;&lt;p&gt;Once you have your API key and have installed the openai package, you can start using the OpenAI API to generate text with ChatGPT. Here&amp;rsquo;s an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;openai&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;openai&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;api_key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;OPENAI_API_KEY&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;What is the meaning of life?&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;openai&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Completion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;engine&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;davinci&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;max_tokens&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;answer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;answer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;In this example, we import the &lt;code&gt;openai&lt;/code&gt; package and set our API key using &lt;code&gt;openai.api_key&lt;/code&gt;. We then define a &lt;code&gt;prompt&lt;/code&gt; variable containing the text we want ChatGPT to generate more text from. We use &lt;code&gt;openai.Completion.create()&lt;/code&gt; to send the prompt to the OpenAI API and receive a response containing generated text. Finally, we print the generated text using &lt;code&gt;response.choices[0].text.strip()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;openai.Completion.create()&lt;/code&gt; function, we specify the following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;engine&lt;/code&gt;: The name of the GPT model to use. In this case, we&amp;rsquo;re using the davinci model, which is the most capable and expensive model.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prompt&lt;/code&gt;: The text prompt to send to the GPT model.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_tokens&lt;/code&gt;: The maximum number of tokens (words and punctuation) to generate in the response.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can customize these parameters to suit your needs. For example, you can use a different GPT model, a different prompt, or a different &lt;code&gt;max_tokens&lt;/code&gt; value.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;Using the OpenAI API for ChatGPT is easy with the &lt;code&gt;openai&lt;/code&gt; Python package. You can generate human-like text for a wide range of applications, such as chatbots, language translation, and content creation. With the power of the OpenAI API, you can take your AI projects to the next level.&lt;/p&gt;
&lt;h2 id=&#34;disclaimer-and-attribution&#34;&gt;Disclaimer and attribution
&lt;/h2&gt;&lt;p&gt;If you didn&amp;rsquo;t get it until now&amp;hellip; I need to tell you: all of the above has been generated by ChatGPT! This of course was just an experiment and I&amp;rsquo;ve no intention of regularly generating my blog posts with this tool. In case I did further experiments, I will always include this disclaimer at the bottom. I hope you enjoyed reading!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Ignoring hosts with python vcr when writing tests with pytest and generating cassettes</title>
        <link>https://www.andreagrandi.it/posts/ignore-hosts-with-python-vcr/</link>
        <pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/ignore-hosts-with-python-vcr/</guid>
        <description>&lt;p&gt;If you are already using &lt;a class=&#34;link&#34; href=&#34;https://pytest.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pytest&lt;/a&gt; to write your tests and are also using &lt;a class=&#34;link&#34; href=&#34;https://vcrpy.readthedocs.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vcr&lt;/a&gt;
to record and replay http responses, you already know that any http request is being recorded, so the next time the same
request is made, the test won&amp;rsquo;t hit the real endpoint but it will use the recorded response.&lt;/p&gt;
&lt;p&gt;Sometimes you need to exclude &lt;code&gt;localhost&lt;/code&gt; (or other hosts) from being recorded and you can do thanks to this vcr parameter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@pytest.mark.vcr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ignore_hosts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_is_true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# Intentionally dumb test to make things simple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This works, but what if you have many tests and you want to ignore &lt;code&gt;localhost&lt;/code&gt; globally?&lt;/p&gt;
&lt;p&gt;You can do it by adding this to your main &lt;code&gt;conftest.py&lt;/code&gt; and all your vcr tests will ignore it by default:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@pytest.fixture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;vcr_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;ignore_hosts&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s it! I hope you find this suggestion useful.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://www.andreagrandi.it/archives/</link>
        <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Using pyenv and pyenv-virtualenv to install Python and create a virtual environment on MacOS</title>
        <link>https://www.andreagrandi.it/posts/install-python-with-pyenv-and-pyenvvirtualenv-create-virtual-environment-with-specific-python-version-macos/</link>
        <pubDate>Sat, 29 Jan 2022 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/install-python-with-pyenv-and-pyenvvirtualenv-create-virtual-environment-with-specific-python-version-macos/</guid>
        <description>&lt;p&gt;This is an update version of my previous tutorial &lt;a class=&#34;link&#34; href=&#34;%7bfilename%7d/2020/4-install-python-with-pyenv-create-virtualenv.md&#34; &gt;Install Python with pyenv and pyenv-virtualenv create virtual environment with specific Python version&lt;/a&gt;. In this version I will show how to install Python 3.10.0 and create a virtual environment with that version.&lt;/p&gt;
&lt;p&gt;To manage my Python versions I&amp;rsquo;m using using &lt;a class=&#34;link&#34; href=&#34;https://github.com/pyenv/pyenv&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pyenv&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://github.com/pyenv/pyenv-virtualenv&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pyenv-virtualenv&lt;/a&gt; and once they are correctly configured, it&amp;rsquo;s very easy to install a new Python version.&lt;/p&gt;
&lt;h2 id=&#34;make-sure-you-have-the-required-packages-installed&#34;&gt;Make sure you have the required packages installed
&lt;/h2&gt;&lt;p&gt;First of all make sure you have all the latest packages installed (I&amp;rsquo;m using &lt;a class=&#34;link&#34; href=&#34;https://brew.sh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Homebrew&lt;/a&gt; for MacOS):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install pyenv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install pyenv-virtualenv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;once installed you should see the latest version:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv 2.2.2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;configure-pyenv-and-pyenv-virtualenv&#34;&gt;Configure pyenv and pyenv-virtualenv
&lt;/h2&gt;&lt;p&gt;To be able to use &lt;code&gt;pyenv&lt;/code&gt; and &lt;code&gt;pyenv-virtualenv&lt;/code&gt; you need to write this basic configuration in your &lt;code&gt;~/.bashrc&lt;/code&gt; (or &lt;code&gt;~/.zshrc&lt;/code&gt; if you are using zsh):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PYENV_ROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/.pyenv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PYENV_ROOT&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/bin:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;pyenv init --path&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;pyenv init -&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;pyenv virtualenv-init -&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;install-python-3100&#34;&gt;Install Python 3.10.0
&lt;/h2&gt;&lt;p&gt;To install Python 3.10.0 you only need &lt;code&gt;pyenv install 3.10.0&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv install 3.10.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python-build: use openssl@1.1 from homebrew
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python-build: use readline from homebrew
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Downloading Python-3.10.0.tar.xz...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-&amp;gt; https://www.python.org/ftp/python/3.10.0/Python-3.10.0.tar.xz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Installing Python-3.10.0...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;patching file aclocal.m4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;patching file configure
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hunk &lt;span class=&#34;c1&#34;&gt;#5 succeeded at 10537 (offset -15 lines).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python-build: use readline from homebrew
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python-build: use zlib from xcode sdk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Installed Python-3.10.0 to /Users/andrea/.pyenv/versions/3.10.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;set-python-3100-as-the-local-version&#34;&gt;Set Python 3.10.0 as the local version
&lt;/h2&gt;&lt;p&gt;Now that the version you want has been installed, you need to tell pyenv you want to use it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; 3.10.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv which python
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;which will show you this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/Users/andrea/.pyenv/versions/3.10.0/bin/python
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;create-a-virtual-environment-using-python-from-pyenv&#34;&gt;Create a virtual environment using Python from pyenv
&lt;/h2&gt;&lt;p&gt;To create a virtual environment named &lt;code&gt;my-310-python&lt;/code&gt; using Python 3.10.0 version, you just need this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv virtualenv 3.10.0 my-310-python
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Verify that the virtual environment has been created:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv virtualenvs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3.10.0/envs/my-310-python &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;created from /Users/andrea/.pyenv/versions/3.10.0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;test-and-automatically-activate-the-virtual-environment&#34;&gt;Test and automatically activate the virtual environment
&lt;/h2&gt;&lt;p&gt;Create a test folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir test-310
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Create a &lt;code&gt;.python-version&lt;/code&gt; file in the test folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; my-310-python &amp;gt; test-310/.python-version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Now if you enter the folder (&lt;code&gt;cd test-310&lt;/code&gt;), the virtual environment will be automatically activated:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; test-310
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;my-310-python&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ➜  test-310
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;At this point you can verify that the virtual environment is working, by using &lt;code&gt;python --version&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;my-310-python&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ➜  test-310 python --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Python 3.10.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>How to safely store Arduino secrets</title>
        <link>https://www.andreagrandi.it/posts/how-to-safely-store-arduino-secrets/</link>
        <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/how-to-safely-store-arduino-secrets/</guid>
        <description>&lt;p&gt;You just got a new Arduino board (maybe a wifi enabled one), you wrote a useful application and you are about to share it on GitHub.&lt;/p&gt;
&lt;p&gt;If your code looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-arduino&#34; data-lang=&#34;arduino&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;WiFi101.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;myessid&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;mypassword&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;do &lt;strong&gt;not&lt;/strong&gt; share it! You would leak your ESSID, password and maybe othere secrets to everyone.&lt;/p&gt;
&lt;h2 id=&#34;store-secrets-in-an-external-file&#34;&gt;Store secrets in an external file
&lt;/h2&gt;&lt;p&gt;Create a separate file named &lt;code&gt;arduino_secrets.h&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-arduino&#34; data-lang=&#34;arduino&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define SECRET_SSID &amp;#34;myessid&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define SECRET_PASS &amp;#34;mypassword&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;and change the main file in this way:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-arduino&#34; data-lang=&#34;arduino&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;WiFi101.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;arduino_secrets.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SECRET_SSID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SECRET_PASS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; using the &lt;strong&gt;&lt;code&gt;SECRET_...&lt;/code&gt;&lt;/strong&gt; naming convention is also useful if you use the &lt;strong&gt;Arduino Web Editor&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://create.arduino.cc/projecthub/Arduino_Genuino/store-your-sensitive-data-safely-when-sharing-a-sketch-e7d0f0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://create.arduino.cc/projecthub/Arduino_Genuino/store-your-sensitive-data-safely-when-sharing-a-sketch-e7d0f0&lt;/a&gt; because these values will be automatically added to a secret tab and will only be visible to you, even if you share your project.&lt;/p&gt;
&lt;h2 id=&#34;exclude-secrets-file-from-git&#34;&gt;Exclude secrets file from git
&lt;/h2&gt;&lt;p&gt;Moving secrets to &lt;code&gt;arduino_secrets.h&lt;/code&gt; would be pointless if we pushed this file to GitHub. To avoid this mistake, add &lt;code&gt;arduino_secrets.h&lt;/code&gt; to &lt;code&gt;.gitignore&lt;/code&gt; (create it in the root of the project if it doesn&amp;rsquo;t exist already).&lt;/p&gt;
&lt;h2 id=&#34;add-an-example-for-secrets-file&#34;&gt;Add an example for secrets file
&lt;/h2&gt;&lt;p&gt;If you simply hide the original &lt;code&gt;arduino_secrets.h&lt;/code&gt;, other users who would like to reuse your code may not know what to put inside. Create an example file named &lt;code&gt;arduino_secrets.h.example&lt;/code&gt; with dummy values:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-arduino&#34; data-lang=&#34;arduino&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define SECRET_SSID &amp;#34;foo&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define SECRET_PASS &amp;#34;foo&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;and document that this needs to be renamed to &lt;code&gt;arduino_secrets.h&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-if-i-need-to-build-my-code-in-a-ci&#34;&gt;What if I need to build my code in a CI?
&lt;/h2&gt;&lt;p&gt;In case you want to build your code in a CI environment, the full source code needs to be there, but at the same time you still don&amp;rsquo;t want to push your secrets to GitHub. What to do then?&lt;/p&gt;
&lt;h3 id=&#34;store-your-secrets-in-environment-variables&#34;&gt;Store your secrets in environment variables
&lt;/h3&gt;&lt;p&gt;Create an environment variable in your CI (or set it locally on your machine if you want to build it locally) for each secret:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;WIFI_SSID_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;myessid&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;WIFI_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;mypassword&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;create-a-makefile&#34;&gt;Create a Makefile
&lt;/h3&gt;&lt;p&gt;Add a &lt;code&gt;Makefile&lt;/code&gt; to your project, similar to this one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;OUTPUT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;arduino_secrets.h&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;arduino_secrets:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    @echo &lt;span class=&#34;s2&#34;&gt;&amp;#34;Generating &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;OUTPUT&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    @&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -e &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;OUTPUT&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;OUTPUT&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    @echo &lt;span class=&#34;s2&#34;&gt;&amp;#34;#define SECRET_SSID \&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;WIFI_SSID_NAME&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;\&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;OUTPUT&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    @echo &lt;span class=&#34;s2&#34;&gt;&amp;#34;#define SECRET_PASS \&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;WIFI_PASSWORD&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;\&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;OUTPUT&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;If you run &lt;code&gt;make&lt;/code&gt; you will generate a file named &lt;code&gt;arduino_secrets.h&lt;/code&gt; containing the proper values.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;There may be alternative methods to safely store secrets. If you know a better one, you can leave a comment below.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://create.arduino.cc/projecthub/Arduino_Genuino/store-your-sensitive-data-safely-when-sharing-a-sketch-e7d0f0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://create.arduino.cc/projecthub/Arduino_Genuino/store-your-sensitive-data-safely-when-sharing-a-sketch-e7d0f0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Getting started with TinyGo and WebAssembly (WASM)</title>
        <link>https://www.andreagrandi.it/posts/getting-started-with-tinygo-webassembly/</link>
        <pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/getting-started-with-tinygo-webassembly/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/getting-started-with-tinygo-webassembly/tinygo-logo.png&#34;
	width=&#34;299&#34;
	height=&#34;255&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;tinygo logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;281px&#34;
	
&gt;{width=30%}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With &lt;a class=&#34;link&#34; href=&#34;https://webassembly.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WebAssembly&lt;/a&gt; we can write a library in almost any language, compile it to &lt;strong&gt;WebAssembly (WASM)&lt;/strong&gt; and use it from &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In this tutorial I will show you how to get started with &lt;a class=&#34;link&#34; href=&#34;https://tinygo.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TinyGo&lt;/a&gt; by writing a simple &lt;code&gt;add()&lt;/code&gt; method in &lt;strong&gt;Go&lt;/strong&gt; and using it from a web page. All the code will be running &lt;strong&gt;in the browser&lt;/strong&gt; without any backend process involved (you only need a static server to serve the html page and JavaScript files, but I will cover this part too).&lt;/p&gt;
&lt;h2 id=&#34;install-tinygo&#34;&gt;Install TinyGo
&lt;/h2&gt;&lt;p&gt;To be able to install &lt;a class=&#34;link&#34; href=&#34;https://tinygo.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TinyGo&lt;/a&gt; you need to have &lt;a class=&#34;link&#34; href=&#34;https://golang.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Go&lt;/a&gt; installed first. I have personally tested this on my Mac, so I will provide instructions for MacOS, but you can find instructions for the other operating systems directly on the project website: &lt;a class=&#34;link&#34; href=&#34;https://tinygo.org/getting-started&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tinygo.org/getting-started&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can install TinyGo on MacOS using &lt;strong&gt;brew&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew tap tinygo-org/tools
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install tinygo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;If installation is successful, you should be able to run this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tinygo version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tinygo version 0.15.0 darwin/amd64 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;using go version go1.15.3 and LLVM version 10.0.1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;implement-an-add-method-in-go&#34;&gt;Implement an add() method in Go
&lt;/h2&gt;&lt;p&gt;Create a new empty project/repository using your favourite IDE (I personally used &lt;strong&gt;VSCode&lt;/strong&gt;, but of course you can use anything else) and then create &lt;code&gt;main.go&lt;/code&gt; file with this code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// This function is exported to JavaScript, so can be called using
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// exports.add() in JavaScript.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//export add
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;compile-to-webassembly-wasm&#34;&gt;Compile to WebAssembly (WASM)
&lt;/h2&gt;&lt;p&gt;To compile the above code to &lt;strong&gt;WebAssembly&lt;/strong&gt; you need to run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tinygo build -o wasm.wasm -target wasm ./main.go
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;that will create a file named &lt;code&gt;wasm.wasm&lt;/code&gt; in the same directory of your project. This is the compiled web binary that will be loaded later by JavaScript.&lt;/p&gt;
&lt;h2 id=&#34;add-required-wasm-library&#34;&gt;Add required WASM library
&lt;/h2&gt;&lt;p&gt;There is a file that is provided with TinyGo that you need to distribute with your application: &lt;code&gt;wasm_exec.js&lt;/code&gt;. To include it in your project, you need to run this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;tinygo env TINYGOROOT&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;/targets/wasm_exec.js .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;script-to-load-the-webassembly&#34;&gt;Script to load the WebAssembly
&lt;/h2&gt;&lt;p&gt;At this point you will need an additional JavaScript file that will take care of loading the WebAssembly code. This file is not &amp;ldquo;standard&amp;rdquo; and may be different for every project, but the essential commands will be very similar.&lt;/p&gt;
&lt;p&gt;Create a new file named &lt;code&gt;wasm.js&lt;/code&gt; with this code and save it in the root of your project along with the other files:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;WASM_URL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;wasm.wasm&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;wasm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Go&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;instantiateStreaming&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;WebAssembly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;WebAssembly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;instantiateStreaming&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;WASM_URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;importObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;wasm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;wasm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;html-page-to-collect-input-and-show-result&#34;&gt;HTML page to collect input and show result
&lt;/h2&gt;&lt;p&gt;We create a simple HTML page that will display two input boxes and a third one to show the result. Create a new file named &lt;code&gt;index.html&lt;/code&gt; in the root of your project:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Go WebAssembly&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;width=device-width, initial-scale=1&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;wasm_exec.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;wasm.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;WebAssembly&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Add two numbers, using WebAssembly calling an add() method written in Go:&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt; + &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt; = &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;result&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Calculate&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;button&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;wasm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sum_box&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;result&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;sum_box&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; frontend development is really not my daily bread. I&amp;rsquo;m sure the above code can be written in a better way, but I can assure you that at least it works.&lt;/p&gt;
&lt;h2 id=&#34;serving-the-static-files&#34;&gt;Serving the static files
&lt;/h2&gt;&lt;p&gt;The project itself would be complete, but you need something able to serve static pages and set a couple of required headers. We can implement one with a few lines of Go. Create a new file named &lt;code&gt;server.go&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;net/http&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;strings&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;./&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FileServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Serving &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; on http://localhost:8080&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;:8080&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;HandlerFunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resp&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ResponseWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;resp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Cache-Control&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;no-cache&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;HasSuffix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.wasm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;resp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;content-type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;application/wasm&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ServeHTTP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;testing-the-project&#34;&gt;Testing the project
&lt;/h2&gt;&lt;p&gt;The project is now complete and can be tested. There are at least two methods to check if everything works: &lt;strong&gt;using the webpage&lt;/strong&gt; we just created and &lt;strong&gt;calling the method from the JavaScript console&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;To test the application using the web page, run the server from the command line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go run server.go
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Open a &lt;strong&gt;web browser&lt;/strong&gt; and visit the address &lt;a class=&#34;link&#34; href=&#34;http://localhost:8080&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You should see something like this:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/getting-started-with-tinygo-webassembly/tinygo_web_assembly_browser.png&#34;
	width=&#34;1169&#34;
	height=&#34;356&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;web assembly browser&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;328&#34;
		data-flex-basis=&#34;788px&#34;
	
&gt;{width=60%}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the page is loaded you can also open the &lt;strong&gt;JavaScript console&lt;/strong&gt; (it&amp;rsquo;s in you browser developers tools and at least Chrome and Firefox have one) and call the method directly:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/getting-started-with-tinygo-webassembly/tinygo_web_assembly_js_console.png&#34;
	width=&#34;695&#34;
	height=&#34;311&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;web assembly js console&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;223&#34;
		data-flex-basis=&#34;536px&#34;
	
&gt;{width=60%}&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;If you want to learn more about &lt;strong&gt;TinyGo&lt;/strong&gt; I suggest you to visit the project website &lt;a class=&#34;link&#34; href=&#34;https://tinygo.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tinygo.org&lt;/a&gt; while more technical information and details about &lt;strong&gt;WebAssembly&lt;/strong&gt; can be found here &lt;a class=&#34;link&#34; href=&#34;https://webassembly.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://webassembly.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can find the &lt;strong&gt;complete source code&lt;/strong&gt; of this project on &lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/tinygo-adder&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/tinygo-adder&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;credits&#34;&gt;Credits
&lt;/h2&gt;&lt;p&gt;I want to thank my colleague &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/rossjones&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ross Jones&lt;/a&gt; for introducing me to WASM and for the help given.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://tinygo.org/webassembly&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tinygo.org/webassembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://webassembly.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://webassembly.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Set specific environment variables activating a Python virtual environment</title>
        <link>https://www.andreagrandi.it/posts/set-specific-environment-variables-activating-python-virtual-environment/</link>
        <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/set-specific-environment-variables-activating-python-virtual-environment/</guid>
        <description>&lt;p&gt;When using Python virtual environments it can be useful to have certain &lt;strong&gt;environment variables&lt;/strong&gt; automatically set when we activate it.
For example we can have a projects that needs to connect to a database or we may need specific settings to run a service.
Automating this process makes sure we don&amp;rsquo;t forget about setting everything we need.&lt;/p&gt;
&lt;h2 id=&#34;storing-the-configuration&#34;&gt;Storing the configuration
&lt;/h2&gt;&lt;p&gt;I strongly suggest to store all the configuration in the root of your project in a file named &lt;code&gt;.env&lt;/code&gt; which you need to take care of adding to your &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;An example of &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;MY_USERNAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;user1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;MY_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;secret
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;MY_SERVICE_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;http://localhost:5000
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;how-to-activate-the-configuration&#34;&gt;How to activate the configuration
&lt;/h2&gt;&lt;p&gt;Python virtual environments have a few scripts that are beign executed in certain situations. In particular there is one named &lt;code&gt;postactivate&lt;/code&gt; that is being run after you activate trhe virtual environment.&lt;/p&gt;
&lt;p&gt;You need to first find the folder where it&amp;rsquo;s located and to do this, you need to first &lt;strong&gt;activate your virtual environment&lt;/strong&gt;. Now you need to run &lt;code&gt;cdvirtualenv&lt;/code&gt; in your terminal and your working directory will be set to where the virtual environment is located.&lt;/p&gt;
&lt;p&gt;At this point edit &lt;code&gt;postactivate&lt;/code&gt; file with (you can replace &lt;code&gt;nano&lt;/code&gt; with your preferred editor) &lt;code&gt;nano bin/postactivate&lt;/code&gt; and add the following script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/zsh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# This hook is sourced after this virtualenv is activated.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; .env
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; +a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I&amp;rsquo;m using &lt;code&gt;zsh&lt;/code&gt; here but you can replace it with &lt;code&gt;bash&lt;/code&gt; (the syntax should be the same).&lt;/p&gt;
&lt;h2 id=&#34;test-the-configuration&#34;&gt;Test the configuration
&lt;/h2&gt;&lt;p&gt;To make the configuration effective you need to &lt;code&gt;deactivate&lt;/code&gt; your virtual environment and &lt;code&gt;activate&lt;/code&gt; it again. The &lt;code&gt;postactivate&lt;/code&gt; script will run automatically and you can now check that your environment variables have been set correctly (the &lt;code&gt;...&lt;/code&gt; have been placed to replace other existing values):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;test-env&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ➜ env
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;MY_USERNAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;user1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;MY_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;secret
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;MY_SERVICE_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;http://localhost:5000
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;As you can see the values configured in the &lt;code&gt;.env&lt;/code&gt; file have been correctly set.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Optimise your website JavaScript loading speed with defer</title>
        <link>https://www.andreagrandi.it/posts/optimise-website-javascript-loading-speed/</link>
        <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/optimise-website-javascript-loading-speed/</guid>
        <description>&lt;p&gt;When a client requests a web page, the browser begins to download the html page and parses it. If an external resource is found
it begins to request that resource in a parallel request. This means the the complete &lt;strong&gt;loading of the page may be delayed until all the external resources have been downloaded&lt;/strong&gt;. On mobile or slow connections, this can be a problem.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;img src=&#34;https://www.andreagrandi.it/posts/optimise-website-javascript-loading-speed/speed_road.jpg&#34;
	width=&#34;800&#34;
	height=&#34;531&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;speed road&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;361px&#34;
	
&gt;{ width=60% }&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-solution&#34;&gt;The solution
&lt;/h2&gt;&lt;p&gt;While it&amp;rsquo;s not possible to fix all the external resources, there is an attribute called &lt;code&gt;defer&lt;/code&gt; that when included in &lt;code&gt;&amp;lt;script&amp;gt; ... &amp;lt;/script&amp;gt;&lt;/code&gt; sections, it will make sure that javascript files will be loaded &lt;strong&gt;after&lt;/strong&gt; the main page has been loaded, resulting in a quicker download of the main content.&lt;/p&gt;
&lt;h3 id=&#34;example&#34;&gt;Example
&lt;/h3&gt;&lt;p&gt;If you have a script like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.andreagrandi.it/theme/tipuesearch/tipuesearch.min.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;5ea4254e9004c2f036fc9ad2-text/javascript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;just add the &lt;code&gt;defer&lt;/code&gt; attribute like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.andreagrandi.it/theme/tipuesearch/tipuesearch.min.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;5ea4254e9004c2f036fc9ad2-text/javascript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;compatibility&#34;&gt;Compatibility
&lt;/h2&gt;&lt;p&gt;Even if the &lt;code&gt;defer&lt;/code&gt; option should be supported by the majority of the browsers, it&amp;rsquo;s always better to double check which are the browsers not supporting it yet.
You can check the compatibility at this address: &lt;a class=&#34;link&#34; href=&#34;https://caniuse.com/script-defer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://caniuse.com/script-defer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the &lt;code&gt;defer&lt;/code&gt; attribute can&amp;rsquo;t always be used in all the pages. When you need a script to be available before the page is completely rendered, you can&amp;rsquo;t use it. You may have noticed that in this website I haven&amp;rsquo;t deferred the loading of &lt;code&gt;jquery&lt;/code&gt; library. For example, I don&amp;rsquo;t know all the details, but I suppose it&amp;rsquo;s necessary to load, parse and render the search results for Tipue Search. Infact if I defer the script, no search results will appear in my website.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://flaviocopes.com/javascript-async-defer/#just-tell-me-the-best-way&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://flaviocopes.com/javascript-async-defer/#just-tell-me-the-best-way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Improve your Pelican based website SEO by adding canonical url</title>
        <link>https://www.andreagrandi.it/posts/improve-pelican-based-website-seo-adding-canonical-url/</link>
        <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/improve-pelican-based-website-seo-adding-canonical-url/</guid>
        <description>&lt;p&gt;You may have notice that a few days ago this website changed its template. I&amp;rsquo;m still using &lt;a class=&#34;link&#34; href=&#34;https://github.com/getpelican/pelican&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pelican&lt;/a&gt; static generator,
but I switched to a template named &lt;a class=&#34;link&#34; href=&#34;https://github.com/alexandrevicenzi/Flex&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Flex&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The template is really nice and it&amp;rsquo;s also optimised for mobile clients, but it&amp;rsquo;s not very optimised for SEO.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m in no way an expert, so I tried to research for ways to optimise Pelican based websites and I discovered something I didn&amp;rsquo;t know.&lt;/p&gt;
&lt;h2 id=&#34;content-duplication&#34;&gt;Content Duplication
&lt;/h2&gt;&lt;p&gt;If you are, like me, hosting your website on GitHub static pages, you should know that your published content is also duplicated on GitHub.
For example: the pages you see on &lt;a class=&#34;link&#34; href=&#34;https://www.andreagrandi.it&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.andreagrandi.it&lt;/a&gt; are all available here &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/andreagrandi.github.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/andreagrandi/andreagrandi.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a problem for search engines, because the content is the same, but they don&amp;rsquo;t know which one is the website you would like to be found in the search results.&lt;/p&gt;
&lt;h2 id=&#34;canonical-url&#34;&gt;Canonical URL
&lt;/h2&gt;&lt;p&gt;To solve this problem, pages needs to include a section like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;canonical&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.andreagrandi.it/2020/10/11/python39-introduces-removeprefix-removesuffix/&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;So even if that page is found &lt;a class=&#34;link&#34; href=&#34;https://github.com/andreagrandi/andreagrandi.github.io/blob/master/2020/10/11/python39-introduces-removeprefix-removesuffix/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;on GitHub&lt;/a&gt; Google will know that the &amp;ldquo;official&amp;rdquo; page is located at the &lt;code&gt;canonical&lt;/code&gt; url and will use that url in the search results.&lt;/p&gt;
&lt;h2 id=&#34;how-to-fix-your-pelican-template&#34;&gt;How to fix your Pelican template
&lt;/h2&gt;&lt;p&gt;Adding the canonical url in Pelican based websites is quite simple. You need to add a section like this to your &lt;code&gt;base.html&lt;/code&gt; template file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {% if article %}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;canonical&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ SITEURL }}/{{ article.url }}&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {% endif%}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;At this point, just rebuild and publish your pages and you are done!&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.kmonsoor.com/pelican-how-to-make-seo-friendly/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.kmonsoor.com/pelican-how-to-make-seo-friendly/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://moz.com/learn/seo/canonicalization&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://moz.com/learn/seo/canonicalization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Python 3.9 introduces removeprefix and removesuffix</title>
        <link>https://www.andreagrandi.it/posts/python39-introduces-removeprefix-removesuffix/</link>
        <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/python39-introduces-removeprefix-removesuffix/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/3/whatsnew/3.9.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Python 3.9.0&lt;/a&gt; has introduced two new methods to work with strings: &lt;code&gt;removeprefix&lt;/code&gt; and &lt;code&gt;removesuffix&lt;/code&gt;.
As their names suggest, one is used to remove a prefix from a string while the other one is used to remove a suffix.&lt;/p&gt;
&lt;h2 id=&#34;removeprefix&#34;&gt;removeprefix
&lt;/h2&gt;&lt;p&gt;Given a string and a prefix, if the string begins with the prefix, the prefix is being removed, otherwise a copy of the original string is being returned:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;MyStringExample&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;removeprefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;My&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;StringExample&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;MyStringExample&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;removeprefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Foo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;MyStringExample&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;removesuffix&#34;&gt;removesuffix
&lt;/h2&gt;&lt;p&gt;Given a string and a suffix, if the string ends with the suffix, the suffix is being removed, otherwise a copy of the original string is being returned:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ThisIsATest&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;removesuffix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Test&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ThisIsA&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ThisIsATest&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;removesuffix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Foo&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ThisIsATest&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Of course these are not the only features which have been added to &lt;strong&gt;Python 3.9.0&lt;/strong&gt;, so I may cover more in the next days. If in the mean time you have &lt;strong&gt;any preferences, please leave a comment below&lt;/strong&gt; and thanks for reading.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/3/library/stdtypes.html#str.removeprefix&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.python.org/3/library/stdtypes.html#str.removeprefix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/3/library/stdtypes.html#str.removesuffix&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.python.org/3/library/stdtypes.html#str.removesuffix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Using pyenv to install Python and create a virtual environment</title>
        <link>https://www.andreagrandi.it/posts/install-python-with-pyenv-create-virtual-environment-with-specific-python-version/</link>
        <pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate>
        
        <guid>https://www.andreagrandi.it/posts/install-python-with-pyenv-create-virtual-environment-with-specific-python-version/</guid>
        <description>&lt;p&gt;A few days ago &lt;a class=&#34;link&#34; href=&#34;https://docs.python.org/3/whatsnew/3.9.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Python 3.9.0&lt;/a&gt; has been released and I really wanted to test ist latest features (maybe I will do a
separate post to talk about them) without messing my system with another Python version.&lt;/p&gt;
&lt;p&gt;To manage my Python versions I&amp;rsquo;ve been using &lt;a class=&#34;link&#34; href=&#34;https://github.com/pyenv/pyenv&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pyenv&lt;/a&gt; for a while and once configured, it&amp;rsquo;s very easy to install a new Python version.&lt;/p&gt;
&lt;h2 id=&#34;make-sure-your-pyenv-is-updated&#34;&gt;Make sure your pyenv is updated
&lt;/h2&gt;&lt;p&gt;You should have at least &lt;strong&gt;pyenv 1.2.21&lt;/strong&gt; if you want to test Python 3.9.0
In case you haven&amp;rsquo;t updated it and you are using MacOS, you can do it with this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; brew upgrade pyenv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;once installed you should see the latest version:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv 1.2.21
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;install-python-390&#34;&gt;Install Python 3.9.0
&lt;/h2&gt;&lt;p&gt;To install Python 3.9.0 you only need &lt;code&gt;pyenv install 3.9.0&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv install 3.9.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python-build: use openssl@1.1 from homebrew
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python-build: use readline from homebrew
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Downloading Python-3.9.0.tar.xz...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-&amp;gt; https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tar.xz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Installing Python-3.9.0...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python-build: use readline from homebrew
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python-build: use zlib from xcode sdk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Installed Python-3.9.0 to /Users/andrea/.pyenv/versions/3.9.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;set-python-390-as-the-local-version&#34;&gt;Set Python 3.9.0 as the local version
&lt;/h2&gt;&lt;p&gt;Now that the version you want has been installed, you need to tell pyenv you want to use it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; 3.9.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv which python
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/Users/andrea/.pyenv/versions/3.9.0/bin/python
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;install-virtualenvwrapper-for-pyenv&#34;&gt;Install virtualenvwrapper for pyenv
&lt;/h2&gt;&lt;p&gt;pyenv needs its own installation of &lt;strong&gt;virtualenvwrapper&lt;/strong&gt; to manage virtualenvs.
You can configure it using &lt;code&gt;pyenv virtualenvwrapper&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pyenv virtualenvwrapper
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Collecting virtualenvwrapper
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using cached virtualenvwrapper-4.8.4.tar.gz &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;334&lt;/span&gt; kB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Collecting virtualenv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Downloading virtualenv-20.0.33-py2.py3-none-any.whl &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;4.9 MB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;████████████████████████████████&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 4.9 MB 4.1 MB/s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Collecting virtualenv-clone
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using cached virtualenv_clone-0.5.4-py2.py3-none-any.whl &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;6.6 kB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Collecting stevedore
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Downloading stevedore-3.2.2-py3-none-any.whl &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;42&lt;/span&gt; kB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;████████████████████████████████&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;42&lt;/span&gt; kB 2.7 MB/s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Collecting six&amp;lt;2,&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1.9.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using cached six-1.15.0-py2.py3-none-any.whl &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; kB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Collecting filelock&amp;lt;4,&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using cached filelock-3.0.12-py3-none-any.whl &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;7.6 kB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Collecting distlib&amp;lt;1,&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0.3.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using cached distlib-0.3.1-py2.py3-none-any.whl &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;335&lt;/span&gt; kB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Collecting appdirs&amp;lt;2,&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1.4.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using cached appdirs-1.4.4-py2.py3-none-any.whl &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;9.6 kB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Collecting pbr!&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2.1.0,&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using cached pbr-5.5.0-py2.py3-none-any.whl &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;106&lt;/span&gt; kB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using legacy &lt;span class=&#34;s1&#34;&gt;&amp;#39;setup.py install&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; virtualenvwrapper, since package &lt;span class=&#34;s1&#34;&gt;&amp;#39;wheel&amp;#39;&lt;/span&gt; is not installed.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Installing collected packages: six, filelock, distlib, appdirs, virtualenv, virtualenv-clone, pbr, stevedore, virtualenvwrapper
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Running setup.py install &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; virtualenvwrapper ... &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Successfully installed appdirs-1.4.4 distlib-0.3.1 filelock-3.0.12 pbr-5.5.0 six-1.15.0 stevedore-3.2.2 virtualenv-20.0.33 virtualenv-clone-0.5.4 virtualenvwrapper-4.8.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;create-a-virtual-environment-using-python-from-pyenv&#34;&gt;Create a virtual environment using Python from pyenv
&lt;/h2&gt;&lt;p&gt;At this point you can create the virtual environment based on Python 3.9.0 using this command &lt;code&gt;mkvirtualenv -p $(pyenv which python) py39-test&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkvirtualenv -p &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;pyenv which python&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; py39-test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;created virtual environment CPython3.9.0.final.0-64 in 1394ms
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;creator CPython3Posix&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/Users/andrea/.virtualenvs/py39-test, &lt;span class=&#34;nv&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;False, &lt;span class=&#34;nv&#34;&gt;global&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;False&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;seeder FromAppData&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;download&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;False, &lt;span class=&#34;nv&#34;&gt;pip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;bundle, &lt;span class=&#34;nv&#34;&gt;setuptools&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;bundle, &lt;span class=&#34;nv&#34;&gt;wheel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;bundle, &lt;span class=&#34;nv&#34;&gt;via&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;copy, &lt;span class=&#34;nv&#34;&gt;app_data_dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/Users/andrea/Library/Application Support/virtualenv&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    added seed packages: &lt;span class=&#34;nv&#34;&gt;pip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;20.2.3, &lt;span class=&#34;nv&#34;&gt;setuptools&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;50.3.0, &lt;span class=&#34;nv&#34;&gt;wheel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;0.35.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/py39-test/bin/predeactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/py39-test/bin/postdeactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/py39-test/bin/preactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/py39-test/bin/postactivate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;virtualenvwrapper.user_scripts creating /Users/andrea/.virtualenvs/py39-test/bin/get_env_details
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;check-you-are-using-the-correct-python-version&#34;&gt;Check you are using the correct Python version
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;py39-test&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ➜  ~ python --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Python 3.9.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;As you can see from the above output, we have created a new &lt;code&gt;virtualenv&lt;/code&gt; using &lt;strong&gt;Python 3.9.0&lt;/strong&gt; which has been installed through &lt;code&gt;pyenv&lt;/code&gt;.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
